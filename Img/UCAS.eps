%!PS-Adobe-3.0
%%BoundingBox: 0 0 3476 591
%%HiResBoundingBox: 0 0 3476.00 591.00
%%Creator: GPL Ghostscript 918 (ps2write)
%%LanguageLevel: 2
%%CreationDate: D:20171024132708Z00'00'
%%Pages: 1
%%EndComments
%%BeginProlog
/DSC_OPDFREAD true def
/SetPageSize true def
/EPS2Write false def
currentdict/DSC_OPDFREAD known{
currentdict/DSC_OPDFREAD get
}{
false
}ifelse
10 dict begin
/DSC_OPDFREAD exch def
/this currentdict def
/y 720 def
/ebuf 200 string def
/prnt{
36//this/y get moveto//ebuf cvs show
//this/y 2 copy get 12 sub put
}bind def
/newline{
36//this/y get moveto
//this/y 2 copy get 12 sub put
}bind def
errordict/handleerror
{systemdict begin
$error begin
newerror
{(%%[ Error handled by opdfread.ps : )print errorname//ebuf cvs print(; OffendingCommand: )
print/command load//ebuf cvs print( ]%%)= flush
/newerror false store vmstatus pop pop 0 ne
{grestoreall
}if
errorname(VMerror)ne
{showpage
}if
initgraphics
0 720 moveto
errorname(VMerror)eq
{//this/ehsave known
{clear//this/ehsave get restore 2 vmreclaim
}if
vmstatus exch pop exch pop
}
/Courier 12 selectfont
{
(ERROR: )//prnt exec errorname//prnt exec
(OFFENDING COMMAND: )//prnt exec
/command load//prnt exec
$error/ostack known{
(%%[STACK:)=
(STACK:)//prnt exec
$error/ostack get aload length{
//newline exec
dup mark eq{
(-mark-)dup = show
}{
dup type/nametype eq{
dup xcheck not{
(/)show
(/)print
}if
}if
dup =//ebuf cvs show
}ifelse
}repeat
}if
}ifelse
(%%]%)=
//systemdict/showpage get exec
quit
}if
end
end
}bind readonly put
end
50 dict begin
/DefaultSwitch
{
dup where{
pop pop
}{
false def
}ifelse
}bind def
/=string 256 string def
/=only{
//=string cvs print
}bind def
/HexDigits(0123456789ABCDEF)readonly def
/PrintHex
{8{
dup -28 bitshift 15 and//HexDigits exch 1 getinterval//=only exec
4 bitshift
}repeat
pop
}bind def
/PDFR_DEBUG DefaultSwitch
/PDFR_DUMP DefaultSwitch
/PDFR_STREAM DefaultSwitch
/TTFDEBUG DefaultSwitch
/RotatePages DefaultSwitch
/FitPages DefaultSwitch
/CenterPages DefaultSwitch
/SetPageSize DefaultSwitch
/error
{
counttomark 1 sub -1 0{
index dup type/arraytype eq{==}{=only}ifelse
}for
()=
cleartomark
....Undefined
}bind def
//SetPageSize{
//RotatePages//FitPages or//CenterPages or{
mark(/RotatePages, /FitPages and CenterPages are not allowed with /SetPageSize)//error exec
}if
}
{
//FitPages//CenterPages and{
mark(CenterPages is not allowed with /FitPages)//error exec
}if
}
ifelse
/knownget
{
2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/IsUpper
{dup(A)0 get ge exch(Z)0 get le and
}bind def
/cpa2g{
dup length array
0 1 2 index length 1 sub{
dup 3 index exch get cp2g
3 copy put pop pop
}for
exch pop
}bind def
/cpd2g{
dup length dict exch{
cp2g 2 index 3 1 roll put
}forall
}bind def
/cps2g{
dup length string copy
}bind def
/cp2gprocs
<</arraytype//cpa2g/dicttype//cpd2g/packedarraytype//cpa2g/stringtype//cps2g >>
def
/cp2g{
dup gcheck not{
dup//cp2gprocs 1 index type
2 copy known{
get currentglobal 3 1 roll true setglobal exec exch setglobal
1 index wcheck not{readonly}if
1 index xcheck{cvx}if
exch pop
}{
pop pop
}ifelse
}if
}bind def
/BlockBuffer 65535 string def
/PDFReader currentdict def
/ObjectRegistryMaxLength 50000 def
/ObjectRegistry 10 dict def
ObjectRegistry
begin 0 ObjectRegistryMaxLength dict def end
/CurrentObject null def
/DoneDocumentStructure false def
/GraphicState 20 dict begin
/InitialTextMatrix matrix def
/InitialMatrix matrix currentmatrix def
currentdict end def
/TempMatrix matrix def
/GraphicStateStack 20 array def
/GraphicStateStackPointer 0 def
/InitialTextMatrixStack 20 array def
/InitialTextMatrixStackPointer 0 def
/PDFColorSpaces 50 dict def
/InstalledFonts 50 dict def
/MacRomanEncodingInverse null def
currentglobal false setglobal
userdict/PDFR_InitialGS gstate put
userdict/PDFR_Patterns 50 dict put
userdict/FuncDataReader 10 dict put
setglobal
/InitialExtGState 20 dict begin
/BG2 currentblackgeneration cp2g def
/UCR2 currentundercolorremoval cp2g def
/TR2 currentglobal false setglobal[currentcolortransfer]exch setglobal cp2g def
/HT currenthalftone cp2g def
currentdict end readonly def
/InitialGraphicState 20 dict begin
/FontSize 0 def
/CharacterSpacing 0 def
/TextLeading 0 def
/TextRenderingMode 0 def
/WordSpacing 0 def
currentdict end readonly def
/SimpleColorSpaceNames 15 dict begin
/DeviceGray true def
/DeviceRGB true def
/DeviceCMYK true def
currentdict end readonly def
/1_24_bitshift_1_sub 1 24 bitshift 1 sub def
/ReadFontProcs 10 dict def
/GetObject{
dup ObjectRegistryMaxLength idiv
//PDFReader /ObjectRegistry get exch knownget
{exch knownget}{pop false}ifelse
}bind def
/PutObject
{1 index ObjectRegistryMaxLength idiv
//PDFReader /ObjectRegistry get 1 index knownget{
exch pop 3 1 roll put}{
//PDFReader /ObjectRegistry get dup begin
1 index ObjectRegistryMaxLength dict def
end exch get 3 1 roll put
}ifelse
}bind def
/Register
{1 index GetObject{
dup xcheck{
4 3 roll pop
//PDFR_DEBUG{
(Have a daemon for ) print 2 index ==
}if
exec
}{
dup null ne{
mark (The object ) 4 index (is already defined : ) 4 index //error exec
}{
pop
}ifelse
3 2 roll
exec
}ifelse
}{
3 2 roll
exec
}ifelse
PutObject
} bind def
/IsRegistered{
GetObject{
null ne
}{
false
}ifelse
}bind def
/GetRegistered{
dup GetObject not{
exch mark exch (Object ) exch ( isn't defined before needed (1).) //error exec
}if
dup xcheck{
exch mark exch (Object ) exch ( isn't defined before needed (2).) //error exec
}{
dup null eq{
exch mark exch (Object ) exch ( isn't defined before needed (3).) //error exec
}if
exch pop
}ifelse
}bind def
/StandardFontNames<<
/Times-Roman true
/Helvetica true
/Courier true
/Symbol true
/Times-Bold true
/Helvetica-Bold true
/Courier-Bold true
/ZapfDingbats true
/Times-Italic true
/Helvetica-Oblique true
/Courier-Oblique true
/Times-BoldItalic true
/Helvetica-BoldOblique true
/Courier-BoldOblique true
>>def
/CleanAllResources
{//PDFR_DEBUG{
(CleanAllResources beg)=
}if
//PDFReader/ObjectRegistry get{
dup length 0 exch 1 exch 1 sub{
2 copy get dup xcheck{
pop pop
}{
dup null eq{
pop pop
}{
dup type/dicttype eq{/.Global known}{pop false}ifelse{
pop
}{
//PDFR_DEBUG{
(Dropping )print dup =
}if
1 index exch/DroppedObject put
}ifelse
}ifelse
}ifelse
}for
pop
}forall
FontDirectory length dict begin
FontDirectory{
pop
dup//StandardFontNames exch known not{
dup null def
}if
pop
}forall
currentdict
end{
pop
//PDFR_DEBUG{
(Undefining font )print dup =
}if
undefinefont
}forall
//PDFR_DEBUG{
(CleanAllResources end)=
}if
}bind def
/PrintReference
{
//PDFR_DEBUG{
({ )print
dup{
=only( )print
}forall
( })=
}if
}bind def
/R
{
0 ne{
exch mark exch(A referred object generation )exch( isn't 0.)//error exec
}if
[
exch//GetRegistered/exec load
]cvx
//PrintReference exec
}bind def
/IsObjRef
{
dup type/arraytype eq{
dup length 3 eq{
dup xcheck exch
dup 0 get type/integertype eq 3 2 roll and exch
dup 1 get//GetRegistered eq 3 2 roll and exch
2 get/exec load eq and
}{
pop false
}ifelse
}{
pop false
}ifelse
}bind def
/DoNothing
{
}def
/RunTypeDaemon
{
dup type/dicttype eq{
dup/Type//knownget exec{
//PDFReader/TypeDaemons get exch
//knownget exec{
exec
}if
}if
}if
}bind def
/obj
{
//PDFR_DEBUG{
(Defining )print 1 index =only( )print dup =only( obj)=
}if
0 ne{
exch mark exch(An object generation )exch( isn't 0.)//error exec
}if
}bind def
/endobj
{
//PDFR_DEBUG{
(endobj )=
}if
count 1 eq {pop} {dup type/dicttype eq{
dup/.endobj_daemon//knownget exec{
//PDFR_DEBUG{(.endobj_daemon for )print 2 index =}if
exec
}if
}if
dup type/dicttype eq{dup/ImmediateExec known}{false}ifelse{
pop pop
}{
//PDFR_DEBUG{
(Storing )print 1 index =
}if
//RunTypeDaemon exec
//DoNothing 3 1 roll//Register exec
}ifelse
}ifelse}bind def
/StoreBlock
{
//PDFR_DEBUG{
(StoreBlock )print//PDFReader/BlockCount get =only(, Length = )print dup length =
}if
dup length string copy
//PDFReader/BlockCount get exch
//PDFReader/CurrentObject get 3 1 roll
put
//PDFReader/BlockCount get 1 add
//PDFReader exch/BlockCount exch put
}bind def
/CheckLength
{dup type/integertype ne{
mark(Object length isn't an integer.)//error exec
}if
}bind def
/ResolveD
{
3 copy pop get
dup//IsObjRef exec{
//PDFR_DEBUG{
(Resolving )print//PrintReference exec
}if
exec
exch exec
}{
exch pop
}ifelse
dup 4 1 roll
put
}bind def
/ResolveA
{2 index 2 index get
dup//IsObjRef exec{
exec
exch exec
3 copy put
}{
exch pop
}ifelse
exch pop exch pop
}bind def
/StoreStream
{
dup//PDFReader exch/CurrentObject exch put
//PDFReader/BlockCount 0 put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(StoreStream Length = )print dup =
}if
currentfile exch()/SubFileDecode filter
{dup//BlockBuffer readstring{
//StoreBlock exec
}{
//StoreBlock exec
exit
}ifelse
}loop
pop
//PDFReader/CurrentObject null put
//PDFR_DEBUG{
(StoreStream end.)=
}if
}bind def
/MakeStreamDumper
{
//PDFR_DEBUG{
(MakeStreamDumper beg.)=
}if
currentglobal exch dup gcheck setglobal
[exch
1 dict dup/c 0 put exch
1024 string
{readstring pop
(StreamDumper )print 1 index/c get =string cvs print( )print
dup length =string cvs print( <)print dup print(>\n)print
dup length
3 2 roll
dup/c get
3 2 roll
add/c exch put
}/exec load
]
cvx 0()/SubFileDecode filter
exch setglobal
//PDFR_DEBUG{
(MakeStreamDumper end.)=
}if
}bind def
/ShortFilterNames 15 dict begin
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/AppendFilters
{
//PDFR_DEBUG{
(AppendFilters beg.)=
}if
dup 3 1 roll
/Filter//knownget exec{
dup type/nametype eq{
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
2 index/DecodeParms//knownget exec{
exch
}if
filter
}{
dup 0 exch 1 exch length 1 sub{
2 copy get
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
3 1 roll
4 index/DecodeParms//knownget exec{
exch get
}{
pop null
}ifelse
dup null eq{
pop 3 1 roll filter exch
}{
3 1 roll
4 1 roll filter exch
}ifelse
}for
pop
}ifelse
//PDFR_DEBUG//PDFR_DUMP and{
//MakeStreamDumper exec
}if
}if
exch pop
//PDFR_DEBUG{
(AppendFilters end.)=
}if
}bind def
/ExecuteStream
{
dup//PDFReader exch/CurrentObject exch put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(ExecuteStream id = )print 2 index =only( Length = )print dup =
}if
//PDFReader/InitialGraphicState get
//PDFReader/GraphicState get copy pop
//PDFReader/Operators get begin
currentfile exch ()/SubFileDecode filter
1 index//AppendFilters exec
cvx mark exch
exec
counttomark 0 ne{
mark(Data left on ostack after an immediate stream execution.)//error exec
}if
cleartomark
end
//PDFR_DEBUG{
(ExecuteStream end.)=
}if
//PDFReader/CurrentObject null put
dup/IsPage known{
dup/Context get/NumCopies//knownget exec{
1 sub{
copypage
}repeat
}if
EPS2Write not {showpage} if
}if
}bind def
/stream
{
//PDFR_DEBUG{
1 index =only( stream)=
}if
1 index GetObject{
dup xcheck{
exec
1 index null PutObject
}{
pop
}ifelse
}if
dup/ImmediateExec known{
dup/GlobalExec//knownget exec{
currentglobal 4 1 roll
setglobal
//ExecuteStream exec
3 2 roll setglobal
}{
//ExecuteStream exec
}ifelse
}{
//StoreStream exec
}ifelse
dup/.CleanResources//knownget exec{
/All eq{
//CleanAllResources exec
}if
}if
}bind def
/HookFont
{
//PDFR_DEBUG{
(Loaded the font )print dup/FontName get =
}if
{
dup/FontFileType get dup/Type1 eq exch/MMType1 eq or{
dup/FontName get
//PDFReader/RemoveFontNamePrefix get exec
findfont
exit
}if
dup/FontFileType get/TrueType eq{
//PDFReader/MakeType42 get exec
//PDFR_DEBUG{
(Font dict <<)=
dup{
1 index/sfnts eq{
exch pop
(/sfnts [)print
{
(-string\()print length//=only exec(\)- )=
}forall
(])=
}{
exch//=only exec( )print ==
}ifelse
}forall
(>>)=
}if
dup/FontName get exch definefont
exit
}if
mark(FontHook has no proc for )2 index/FontFileType get//error exec
}loop
/Font exch put
}bind def
/endstream
{
}bind def
/xref
{
//PDFR_DEBUG{
(xref)=
//PDFR_DUMP{
//PDFReader/ObjectRegistry get ==
}if
}if
end
count 0 ne{
mark(Excessive data on estack at the end of the interpretation.)//error exec
}if
currentfile 1(%%EOF)/SubFileDecode filter
flushfile
cleardictstack
}bind def
/ResolveDict
{dup{
pop 1 index exch
//DoNothing//ResolveD exec
pop
}forall
pop
}bind def
/SetupPageView
{
//PDFR_DEBUG{
(SetupPageView beg)=
}if
//DSC_OPDFREAD not{
//GraphicState/InitialMatrix get setmatrix
}if
/MediaBox get aload pop
3 index neg 3 index neg translate
3 -1 roll sub 3 1 roll exch sub exch
userdict/.HWMargins//knownget exec{
aload pop
}{
currentpagedevice/.HWMargins//knownget exec{
aload pop
}{
0 0 0 0
}ifelse
}ifelse
currentpagedevice/PageSize get aload pop
3 -1 roll sub 3 1 roll exch sub exch
exch 3 index sub exch 3 index sub
//SetPageSize{
//PDFR_DEBUG{
(Setting page size to )print 1 index//=only exec( )print dup =
}if
pop pop 3 index 3 index 2 copy
currentglobal false setglobal 3 1 roll
currentpagedevice dup /PageSize known{
/PageSize get aload pop}{
0 0}ifelse
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and{
//PDFR_DEBUG{(PageSize matches request) == flush}if
pop pop}{
/MediaRequested where {
//PDFR_DEBUG{(MediaRequested is true, check against new request) == flush}if
/MediaRequested get aload pop
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{//PDFR_DEBUG{(MediaRequested same as current request, ignore) == flush}if pop pop false}
{//PDFR_DEBUG{(MediaRequested different to current request) == flush}if true}ifelse
}{
//PDFR_DEBUG{(No MediaRequested yet) == flush}if
true
}ifelse
{
//PDFR_DEBUG{(Setting pagesize) == flush}if
2 array astore
dup /MediaRequested exch def
<< exch /PageSize exch >> setpagedevice
/pagesave save def
}if
}ifelse
userdict/PDFR_InitialGS gstate put
setglobal
}if
//RotatePages{
2 copy gt 6 index 6 index gt ne{
1 index 5 index le 1 index 5 index le and not
}{
false
}ifelse
}{
false
}ifelse
{//CenterPages{
//PDFR_DEBUG{
(Rotating page, and then centering it)==
}if
90 rotate
0 5 index neg translate
5 index 1 index exch sub 2 div
2 index 6 index sub 2 div neg
translate
}{
//FitPages{
1 index 5 index div 1 index 7 index div
2 copy gt{
exch
}if
pop dup scale
}if
90 rotate
0 5 index neg translate
}ifelse
}{
//CenterPages{
//PDFR_DEBUG{
(Ccentering page)==
}if
1 index 6 index sub 2 div
1 index 6 index sub 2 div
translate
}{
//FitPages{
1 index 6 index div 1 index 6 index div
2 copy gt{
exch
}if
pop dup scale
}if
}ifelse
}ifelse
pop pop
translate
pop pop
//PDFR_DEBUG{
(SetupPageView end)=
}if
}bind def
/PageContentsDaemon
{
//PDFR_DEBUG{
(Executing PageContentsDaemon for )print 2 index =
}if
1 index exch/Context exch put
dup/ImmediateExec true put
dup/IsPage true put
SetPageSize {dup/Context get//SetupPageView exec}if
}bind def
/FontFileDaemon
{
//PDFR_DEBUG{
(Executing FontFileDaemon for )print 2 index =
}if
dup/FontFileType get
2 index exch
dup//ReadFontProcs exch//knownget exec{
exch pop exec
}{
mark(FontFile reader for )2 index( isn't implemented yet.)//error exec
}ifelse
//PDFR_DEBUG{
(FontFileDaemon end)=
}if
pop
}bind def
/FontDescriptorDaemon
{
//PDFR_DEBUG{
(Executing FontDescriptorDaemon for )print 2 index =
}if
2 copy/FontResource exch put
/Subtype get 1 index exch/FontFileType exch put
}bind def
/UnPDFEscape{
dup dup length string cvs
dup(#)search{
{
pop
(16#--)2 index 0 2 getinterval
1 index 3 2 getinterval copy pop
cvi
0 exch put
0
1 index 2 1 index length 2 sub getinterval
3 copy putinterval
length
3 copy exch put
getinterval
(#)search not{
pop exit
}if
}loop
(\0)search pop exch pop exch pop
cvn
exch pop
}{
pop pop
}ifelse
}bind def
/TypeDaemons<<
/Page
{//PDFR_DEBUG{
(Recognized a page.)=
}if
dup/Contents//knownget exec{
0 get//DoNothing exch
[
3 index//PageContentsDaemon/exec load
]cvx
//Register exec
}{
(fixme: page with no Contents won't be printed.)=
}ifelse
}bind
/FontDescriptor
{//PDFR_DEBUG{
(Recognized a font descriptor.)=
}if
dup/FontName//knownget exec{
1 index/FontName 3 -1 roll//UnPDFEscape exec put
}if
dup dup/FontFile known{/FontFile}{/FontFile2}ifelse
//knownget exec{
0 get//DoNothing exch
[
3 index//FontFileDaemon/exec load
]cvx
//Register exec
}{
(Font descriptor )print 1 index =only( has no FontFile.)=
}ifelse
}bind
/Font
{//PDFR_DEBUG{
(Recognized a font resource.)=
}if
dup/BaseFont//knownget exec{
//UnPDFEscape exec 2 copy/BaseFont exch put
//PDFReader/RemoveFontNamePrefix get exec
currentglobal exch
dup/Font resourcestatus{
pop pop
//PDFReader/GetInstalledFont get exec pop
}{
pop
}ifelse
setglobal
}if
dup/FontDescriptor//knownget exec{
0 get
dup//IsRegistered exec{
//PDFR_DEBUG{
(already registered )print dup =
}if
pop
}{
//DoNothing exch
[
3 index//FontDescriptorDaemon/exec load
]cvx
//Register exec
}ifelse
}if
}bind
>>def
/MakeStreamReader
{dup
[
exch
//PDFR_DEBUG{
(Stream proc )
/print load
//PDFR_STREAM{
(<)
/print load
}if
}if
1 dict dup/i -1 put
/dup load
/i
/get load
1
/add load
/dup load
3
1
/roll load
/i
/exch load
/put load
//knownget
/exec load
/not load
{()}
/if load
//PDFR_DEBUG{
//PDFR_STREAM{
/dup load
/print load
(>)
/print load
}if
( end of stream proc.\n)
/print load
}if
]cvx
//PDFR_DEBUG{
(Stream reader )print dup ==
}if
0()/SubFileDecode filter
exch//AppendFilters exec
}bind def
/RunDelayedStream
{
//GraphicState/InitialTextMatrix get
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get
2 copy get null eq{
2 copy currentglobal true setglobal matrix exch setglobal put
}if
get copy pop
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 add put
//MakeStreamReader exec
mark exch
cvx exec
counttomark 0 ne{
mark(Data left on ostack after a delayed stream execution.)//error exec
}if
cleartomark
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 sub put
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get get
//GraphicState/InitialTextMatrix get
copy pop
}bind def
//ReadFontProcs begin
/Type1
{//PDFR_DEBUG{
(ReadFontProcs.Type1)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
dup/ImmediateExec true put
/GlobalExec true put
}bind def
/MMType1//Type1 def
/TrueType
{//PDFR_DEBUG{
(ReadFontProcs.TrueType)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
pop
}bind def
end
/.opdloadttfontdict 50 dict def
.opdloadttfontdict begin
/maxstring 65400 def
end
/.InsertionSort
{
/CompareProc exch def
/Array exch def
1 1 Array length 1 sub
{
/Ix exch def
/Value1 Array Ix get def
/Jx Ix 1 sub def
{
Jx 0 lt{
exit
}if
/Value2 Array Jx get def
Value1 Value2 CompareProc{
exit
}if
Array Jx 1 add Value2 put
/Jx Jx 1 sub def
}loop
Array Jx 1 add Value1 put
}for
Array
}bind def
/putu16{
3 copy -8 bitshift put
exch 1 add exch 16#ff and put
}bind def
/putu32{
3 copy -16 bitshift putu16
exch 2 add exch 16#ffff and putu16
}bind def
/.readtable{
dup dup 1 and add string
dup 0 4 -1 roll getinterval
3 -1 roll exch
dup()ne{readstring}if pop pop
}bind def
/.readbigtable{
dup maxstring lt{
.readtable
}{
currentuserparams/VMReclaim get -2 vmreclaim
[4 2 roll{
dup maxstring le{exit}if
1 index maxstring string readstring pop 3 1 roll maxstring sub
}loop .readtable]
exch vmreclaim
}ifelse
}bind def
/ReadTTF
{
.opdloadttfontdict begin
/TTFontFile exch def
/TableDir TTFontFile 12 string readstring pop def
/tables TTFontFile TableDir 4 getu16 16 mul string readstring pop def
/tabarray tables length 16 idiv array def
TableDir 0 4 getinterval(ttcf)eq{
QUIET not{(Can't handle TrueType font Collections.)=}if
/.loadttfonttables cvx/invalidfont signalerror
}{
0 16 tables length 1 sub{
dup
tables exch 16 getinterval
exch 16 div cvi exch
tabarray 3 1 roll put
}for
}ifelse
tabarray{exch 8 getu32 exch 8 getu32 gt}.InsertionSort pop
/Read TableDir length tables length add def
/tabs[
tabarray{
dup 8 getu32
Read sub
dup 0 gt{
dup string TTFontFile exch readstring pop pop
Read add/Read exch def
}{
pop
}ifelse
12 getu32
dup Read add
/Read exch def
TTFontFile exch .readbigtable
}forall
]def
end
}bind def
/GetLocaType
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(head)eq{
tabs exch get
50 gets16
/LocaType exch def
exit
}{
pop
}ifelse
}for
}bind def
/GetNumGlyphs
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(maxp)eq{
tabs exch get
4 getu16
/NumGlyphs exch def
exit
}{
pop
}ifelse
}for
}bind def
/StringToLoca
{
/LocaIndex exch def
/StringOffset 0 def
{
dup length StringOffset gt{
dup
LocaType 1 eq{
StringOffset getu32
LocaArray LocaIndex 3 -1 roll put
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 4 add
def
}{
StringOffset getu16 2 mul
LocaArray length LocaIndex gt {LocaArray LocaIndex 3 -1 roll put}{pop}ifelse/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 2 add
def
}ifelse
}{
pop
LocaIndex
exit
}ifelse
}loop
}bind def
/GetSortedLoca
{
NumGlyphs 1 add array/LocaArray exch def
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(loca)eq{
tabs exch get
exit
}{
pop
}ifelse
}for
dup type/stringtype eq{
0 StringToLoca pop
}{
0 exch
{
exch StringToLoca
}forall
pop
}ifelse
LocaArray{gt}.InsertionSort pop
}bind def
/GetWorkingString
{
WorkString 0
GlyfArray GlyfStringIndex get
putinterval
/WorkBytes GlyfArray GlyfStringIndex get length def
/GlyfStringIndex GlyfStringIndex 1 add def
}bind def
/GetWorkingBytes
{
/BytesToRead exch def
WorkString 0 BytesToRead getinterval
dup length string copy
WorkString BytesToRead WorkBytes BytesToRead sub getinterval
dup length string copy
WorkString 0 3 -1 roll putinterval
/WorkBytes WorkBytes BytesToRead sub def
}bind def
/GetGlyfBytes
{
/ToRead exch def
WorkBytes 0 eq{
GetWorkingString
}if
WorkBytes ToRead ge{
ToRead string dup 0
ToRead GetWorkingBytes putinterval
}{
ToRead string
dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
ToRead WorkBytes sub
GetWorkingString
GetWorkingBytes
putinterval
}ifelse
}bind def
/SplitGlyf
{
/GlyfArray exch def
/DestArray GlyfArray length 2 mul array def
/DestArrayIndex 0 def
/LastLoca 0 def
/NextLocaIndex 0 def
/LastLocaIndex 0 def
/GlyfStringIndex 0 def
/WorkString maxstring string def
/WorkBytes 0 def
{
LocaArray NextLocaIndex get
LastLoca sub maxstring gt
{
LocaArray LastLocaIndex get LastLoca sub
GetGlyfBytes
DestArray DestArrayIndex 3 -1 roll put
/DestArrayIndex DestArrayIndex 1 add def
LocaArray LastLocaIndex get/LastLoca exch def
}{
/LastLocaIndex NextLocaIndex def
/NextLocaIndex NextLocaIndex 1 add def
NextLocaIndex NumGlyphs gt
{
WorkBytes
GlyfStringIndex GlyfArray length lt{
GlyfArray GlyfStringIndex get length
add string dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
GetWorkingString
WorkString 0 WorkBytes getinterval
putinterval
}{
pop
WorkString 0 WorkBytes getinterval
}ifelse
dup length string copy
DestArray DestArrayIndex 3 -1 roll put
exit
}if
}ifelse
}loop
DestArray
}bind def
/ProcessTTData
{
.opdloadttfontdict begin
0 1 tabarray length 1 sub{
/ix exch def
tabarray ix get
12 getu32 dup maxstring le{
dup 4 mod 0 ne{
4 div cvi 1 add 4 mul string/newstring exch def
/oldstring tabs ix get def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix newstring put
}{
pop
}ifelse
}{
dup 4 mod 0 ne{
dup maxstring idiv maxstring mul sub
4 idiv 1 add 4 mul string/newstring exch def
tabs ix get
dup length 1 sub dup/iy exch def get/oldstring exch def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix get iy newstring put
}{
pop
}ifelse
}ifelse
}for
0 1 tabarray length 1 sub{
dup tabarray exch get
dup 12 getu32 maxstring gt{
0 4 getinterval dup(glyf)eq{
pop
GetLocaType
GetNumGlyphs
GetSortedLoca
dup tabs exch get
SplitGlyf
tabs 3 1 roll put
}{
(Warning, table )print print( > 64Kb\n)print
pop
}ifelse
}{
pop
pop
}ifelse
}for
end
}bind def
/Makesfnts
{
.opdloadttfontdict begin
0
tabs{
dup type/stringtype eq{
pop
1 add
}{
{
type/stringtype eq{
1 add
}if
}forall
}ifelse
}forall
1 add
/TTOffset
TableDir length
tabarray length 16 mul add
def
0
tabarray{
exch dup 1 add
3 1 roll
dup
tabs exch get
dup type/stringtype eq{
length
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}{
0 exch
{
dup type/stringtype eq{
length add
}{
pop
}ifelse
}forall
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}ifelse
}forall
pop
array
dup 0
TableDir length
tables length add
string
dup 0 TableDir putinterval
dup 12 tables putinterval
put
dup
/ix 1 def
tabs{
dup type/stringtype eq{
ix exch
put dup
/ix ix 1 add def
}{
{
dup type/stringtype eq{
ix exch put dup
/ix ix 1 add def
}{
pop
}ifelse
}forall
}ifelse
}forall
pop
end
}bind def
/MakeType42
{
//PDFR_DEBUG{
(MakeType42 beg)=
}if
10 dict begin
/FontName 1 index/FontName get def
/FontType 42 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox 1 index/FontBBox get def
dup/FontResource get
dup/Encoding known{
//PDFReader/ObtainEncoding get exec
/Encoding get
}{
pop null
}ifelse
/PDFEncoding exch def
/CharStrings 2 index//PDFReader/MakeTTCharStrings get exec def
/sfnts 2 index//MakeStreamReader exec
ReadTTF
ProcessTTData
Makesfnts
def
/Encoding StandardEncoding def
/PaintType 0 def
currentdict end
//PDFR_DEBUG{
(MakeType42 end)=
}if
}bind def
/GetInstalledFont
{
dup//InstalledFonts exch knownget{
exch pop
}{
dup findfont dup 3 1 roll
//InstalledFonts 3 1 roll put
}ifelse
}bind def
/RemoveFontNamePrefix
{//=string cvs true
0 1 5{
2 index exch get//IsUpper exec not{
pop false exit
}if
}for
{(+)search{
pop pop
}if
}if
cvn
}bind def
/CheckFont
{dup/Type get/Font ne{
mark(Resource )3 index( must have /Type/Font .)//error exec
}if
}bind def
/CheckEncoding
{dup type/nametype ne{
dup/Type get/Encoding ne{
mark(Resource )3 index( must have /Type/Encoding .)//error exec
}if
}if
}bind def
/ObtainEncoding
{dup/Encoding known{
dup dup/Encoding//CheckEncoding//ResolveD exec
dup type dup/arraytype eq exch/packedarraytype eq or{
pop pop
}{
dup type/nametype eq{
/Encoding findresource
}{
dup/BaseEncoding//knownget exec not{
/StandardEncoding
}if
/Encoding findresource
exch
/Differences//knownget exec{
exch dup length array copy exch
0 exch
{
dup type/integertype eq{
exch pop
}{
3 copy put pop
1 add
}ifelse
}forall
pop
}if
}ifelse
/Encoding exch put
}ifelse
}{
dup/Encoding/StandardEncoding/Encoding findresource put
}ifelse
}bind def
/ObtainMetrics
{dup/Widths//knownget exec{
1 index/Encoding get
256 dict
3 index/Subtype get/TrueType eq{
1000
}{
1
}ifelse
4 index/MissingWidth//knownget exec not{
0
}if
5 index/FirstChar//knownget exec not{
0
}if
6 5 roll
dup 0 exch 1 exch length 1 sub{
2 copy get
exch 3 index add
7 index exch get
dup dup null ne exch/.notdef ne and{
6 index 3 1 roll exch
6 index div
3 copy pop//knownget exec{
0 eq
}{
true
}ifelse
{put
}{
pop pop pop
}ifelse
}{
pop pop
}ifelse
}for
pop pop pop pop exch pop
1 index exch/Metrics exch put
}{
dup/MissingWidth//knownget exec{
256 dict
2 index/Encoding get{
dup null ne{
3 copy 3 2 roll put
}if
pop
}forall
exch pop
1 index exch/Metrics exch put
}if
}ifelse
}bind def
/NotDef
{
FontMatrix aload pop pop pop exch pop exch pop
1 exch div exch
1 exch div exch
1 index 0 setcharwidth
0 setlinewidth
0 0 moveto
2 copy rlineto
1 index 0 rlineto
neg exch neg exch rlineto
closepath stroke
}bind def
/SaveResourcesToStack{[//PDFReader/OldResources known{//PDFReader/OldResources get}{null}ifelse
//PDFReader/CurrentObject get/Context get/Resources get]//PDFReader/OldResources 3 -1 roll put}bind def
/RestoreResourcesFromStack{//PDFReader/OldResources get dup
0 get//PDFReader/OldResources 3 -1 roll put
1 get//PDFReader/CurrentObject get/Context get/Resources 3 -1 roll put} bind def
/BuildChar
{//PDFR_DEBUG{
(BuildChar )print dup//=only exec( )print
}if
exch begin
Encoding exch get
//PDFR_DEBUG{
dup =
}if
dup null eq{
pop//NotDef exec
}{
CharProcs exch//knownget exec{currentfont/Font get/Resources//knownget exec{exec SaveResourcesToStack//PDFReader/CurrentObject get/Context get/Resources 3 -1 roll put//RunDelayedStream exec RestoreResourcesFromStack}{//RunDelayedStream exec}ifelse}{
//NotDef exec
}ifelse
}ifelse
end
}bind def
/printdict
{(<<)=
{exch = ==}forall
(>>)=
}bind def
/printfont
{
dup{
exch dup =
dup/Encoding eq{
pop =
}{
dup/FontInfo eq exch/Private eq or{
//printdict exec
}{
==
}ifelse
}ifelse
}forall
}bind def
/ScaleMetrics
{1 index{
2 index div
3 index
3 1 roll put
}forall
pop
}bind def
/ResolveAndSetFontAux
{exch dup
//PDFReader/CurrentObject get/Context get/Resources get
/Font//DoNothing//ResolveD exec
exch//CheckFont//ResolveD exec
dup/Font//knownget exec{
exch pop exch pop
}{
{
dup/Subtype get dup dup/Type1 eq exch/TrueType eq or exch/MMType1 eq or{
exch pop
dup/BaseFont get
//RemoveFontNamePrefix exec
//PDFR_DEBUG{
(Font )print dup =
}if
1 index/FontDescriptor known{
//PDFR_DEBUG{
(Font from a font descriptor.)=
}if
1 index
/FontDescriptor//DoNothing//ResolveD exec
/Font//knownget exec{
exch pop
}{
//PDFR_DEBUG{
(Font descriptor has no Font resolved.)=
}if
//GetInstalledFont exec
}ifelse
}{
//GetInstalledFont exec
}ifelse
exch
dup/Encoding known not{
1 index/Encoding get 1 index exch/Encoding exch put
}if
//ObtainEncoding exec
//ObtainMetrics exec
exch
dup length dict copy
dup 2 index/Encoding get
/Encoding exch put
1 index/Metrics//knownget exec{
2 index/Subtype get/TrueType ne{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
0.001 div
//ScaleMetrics exec
}{
1 index/sfnts known not{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
//ScaleMetrics exec
}if
}ifelse
1 index exch/Metrics exch put
}if
1 index/BaseFont get
exch
dup/FID undef
dup/UniqueID undef
definefont
dup 3 1 roll
/Font exch put
exit
}if
dup/Subtype get/Type3 eq{
//ObtainEncoding exec
2 copy exch/FontName exch put
dup/CharProcs get//ResolveDict exec
dup/FontType 3 put
dup/BuildChar//BuildChar put
dup dup/Font exch put
dup 3 1 roll
definefont
2 copy ne{
2 copy/Font exch put
}if
exch pop
exit
}if
dup/Subtype get/Type0 eq{
}if
dup/Subtype get/CIDFontType0 eq{
}if
dup/Subtype get/CIDFontType2 eq{
}if
mark(Unknown font type )2 index/Subtype get//error exec
}loop
}ifelse
exch scalefont setfont
}bind def
/ResolveAndSetFont
{
//ResolveAndSetFontAux exec
}bind def
/.knownget
{2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/.min
{2 copy lt{
exch
}if
pop
}bind def
/.max
{2 copy gt{
exch
}if
pop
}bind def
/.dicttomark
{>>
}bind def
/getu16{
2 copy get 8 bitshift 3 1 roll 1 add get add
}bind def
/gets16{
getu16 16#8000 xor 16#8000 sub
}bind def
/getu32{
2 copy getu16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/gets32{
2 copy gets16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/cmapformats mark
0{
6 256 getinterval{}forall 256 packedarray
}bind
2{
/sHK_sz 2 def
/sH_sz 8 def
dup 2 getu16/cmapf2_tblen exch def
dup 4 getu16/cmapf2_lang exch def
dup 6 256 sHK_sz mul getinterval/sHKs exch def
0
0 1 255{
sHKs exch
2 mul getu16
1 index
1 index
lt{exch}if pop
}for
/sH_len exch def
dup 6 256 sHK_sz mul add
cmapf2_tblen 1 index sub getinterval
/sH_gIA exch def
/cmapf2_glyph_array 65535 array def
/.cmapf2_putGID{
/cmapf2_ch cmapf2_ch_hi 8 bitshift cmapf2_ch_lo add def
firstCode cmapf2_ch_lo le
cmapf2_ch_lo firstCode entryCount add lt
and{
sH_offset idRangeOffset add
cmapf2_ch_lo firstCode sub 2 mul
add 6 add
sH_gIA exch getu16
dup 0 gt{
idDelta add
cmapf2_glyph_array exch cmapf2_ch exch put
}{
pop
}ifelse
}{
}ifelse
}def
16#00 1 16#ff{
/cmapf2_ch_hi exch def
sHKs cmapf2_ch_hi sHK_sz mul getu16
/sH_offset exch def
sH_gIA sH_offset sH_sz getinterval
dup 0 getu16/firstCode exch def
dup 2 getu16/entryCount exch def
dup 4 gets16/idDelta exch def
dup 6 getu16/idRangeOffset exch def
pop
sH_offset 0 eq{
/cmapf2_ch_lo cmapf2_ch_hi def
/cmapf2_ch_hi 0 def
.cmapf2_putGID
}{
16#00 1 16#ff{
/cmapf2_ch_lo exch def
.cmapf2_putGID
}for
}ifelse
}for
pop
0 1 cmapf2_glyph_array length 1 sub{
dup cmapf2_glyph_array exch get
null eq{cmapf2_glyph_array exch 0 put}{pop}ifelse
}for
cmapf2_glyph_array
}bind
4{
/etab exch def
/nseg2 etab 6 getu16 def
14/endc etab 2 index nseg2 getinterval def
2 add
nseg2 add/startc etab 2 index nseg2 getinterval def
nseg2 add/iddelta etab 2 index nseg2 getinterval def
nseg2 add/idroff etab 2 index nseg2 getinterval def
pop
/firstcode startc 0 getu16 16#ff00 and dup 16#f000 ne{pop 0}if def
/lastcode firstcode def
/striptopbyte false def
/putglyph{
glyphs code 3 -1 roll put/code code 1 add def
}bind def
/numcodes 0 def/glyphs 0 0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
ecode lastcode gt {
/lastcode ecode def
}if
}for pop
firstcode 16#f000 ge lastcode firstcode sub 255 le and {
lastcode 255 and
/striptopbyte true def
} {
lastcode
}ifelse
1 add
array def
glyphs length 1024 ge{
.array1024z 0 1024 glyphs length 1023 sub{glyphs exch 2 index putinterval}for
glyphs dup length 1024 sub 3 -1 roll
putinterval
}{
0 1 glyphs length 1 sub{glyphs exch 0 put}for
}ifelse
/numcodes 0 def/code 0 def
0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
numcodes scode firstcode sub
exch sub 0 .max dup/code exch code exch add def
ecode scode sub 1 add add numcodes add/numcodes exch def
/delta iddelta i2 gets16 def
TTFDEBUG{
(scode=)print scode =only
( ecode=)print ecode =only
( delta=)print delta =only
( droff=)print idroff i2 getu16 =
}if
idroff i2 getu16 dup 0 eq{
pop scode delta add 65535 and 1 ecode delta add 65535 and
striptopbyte {
/code scode 255 and def
} {
/code scode def
} ifelse
{putglyph}for
}{
/gloff exch 14 nseg2 3 mul add 2 add i2 add add def
striptopbyte {
/code scode 255 and def
} {
/code scode def
} ifelse
0 1 ecode scode sub{
2 mul gloff add etab exch getu16
dup 0 ne{delta add 65535 and}if putglyph
}for
}ifelse
}for glyphs/glyphs null def
}bind
6{
dup 6 getu16/firstcode exch def dup 8 getu16/ng exch def
firstcode ng add array
0 1 firstcode 1 sub{2 copy 0 put pop}for
dup firstcode ng getinterval
0 1 ng 1 sub{
dup 2 mul 10 add 4 index exch getu16 3 copy put pop pop
}for pop exch pop
}bind
.dicttomark readonly def
/cmaparray{
dup 0 getu16 cmapformats exch .knownget{
TTFDEBUG{
(cmap: format )print 1 index 0 getu16 = flush
}if exec
}{
(Can't handle format )print 0 getu16 = flush
0 1 255{}for 256 packedarray
}ifelse
TTFDEBUG{
(cmap: length=)print dup length = dup ==
}if
}bind def
/postremap mark
/Cdot/Cdotaccent
/Edot/Edotaccent
/Eoverdot/Edotaccent
/Gdot/Gdotaccent
/Ldot/Ldotaccent
/Zdot/Zdotaccent
/cdot/cdotaccent
/edot/edotaccent
/eoverdot/edotaccent
/gdot/gdotaccent
/ldot/ldotaccent
/zdot/zdotaccent
.dicttomark readonly def
/get_from_stringarray
{1 index type/stringtype eq{
get
}{
exch{
2 copy length ge{
length sub
}{
exch get exit
}ifelse
}forall
}ifelse
}bind def
/getinterval_from_stringarray
{
2 index type/stringtype eq{
getinterval
}{
string exch 0
4 3 roll{
dup length
dup 4 index lt{
3 index exch sub
exch pop 3 1 roll exch pop
}{
dup 3 1 roll
4 index sub
5 index length 4 index sub
2 copy gt{exch}if pop
dup 3 1 roll
5 index exch getinterval
5 index 4 index 3 index
getinterval
copy pop
exch pop add exch pop 0 exch
dup 3 index length ge{exit}if
}ifelse
}forall
pop pop
}ifelse
}bind def
/string_array_size
{dup type/stringtype eq{
length
}{
0 exch{length add}forall
}ifelse
}bind def
/postformats mark
16#00010000{
pop MacGlyphEncoding
}
16#00020000{
dup dup type/arraytype eq{0 get}if length 36 lt{
TTFDEBUG{(post format 2.0 invalid.)= flush}if
pop[]
}{
/postglyphs exch def
/post_first postglyphs dup type/arraytype eq{0 get}if def
post_first 32 getu16/numglyphs exch def
/glyphnames numglyphs 2 mul 34 add def
/postpos glyphnames def
/total_length postglyphs//string_array_size exec def
numglyphs array 0 1 numglyphs 1 sub{
postpos total_length ge{
1 numglyphs 1 sub{1 index exch/.notdef put}for
exit
}if
postglyphs postpos//get_from_stringarray exec
postglyphs postpos 1 add 2 index//getinterval_from_stringarray exec cvn
exch postpos add 1 add/postpos exch def
2 index 3 1 roll
put
}for
/postnames exch def
numglyphs array 0 1 numglyphs 1 sub{
dup 2 mul 34 add postglyphs exch 2//getinterval_from_stringarray exec
dup 0 get 8 bitshift exch 1 get add dup 258 lt{
MacGlyphEncoding exch get
}{
dup 32768 ge{
pop/.notdef
}{
258 sub dup postnames length ge{
TTFDEBUG{(   *** warning: glyph index past end of 'post' table)= flush}if
pop
exit
}if
postnames exch get
postremap 1 index .knownget{exch pop}if
}ifelse
}ifelse
2 index 3 1 roll put
}for
}
ifelse
}bind
16#00030000{
pop[]
}bind
.dicttomark readonly def
/first_post_string
{
post dup type/arraytype eq{0 get}if
}bind def
/.getpost{
/glyphencoding post null eq{
TTFDEBUG{(post missing)= flush}if[]
}{
postformats first_post_string 0 getu32 .knownget{
TTFDEBUG{
(post: format )print
first_post_string
dup 0 getu16 =only(,)print 2 getu16 = flush
}if
post exch exec
}{
TTFDEBUG{(post: unknown format )print post 0 getu32 = flush}if[]
}ifelse
}ifelse def
}bind def
/TTParser<<
/Pos 0
/post null
>>def
/readu8
{read not{
mark(Insufficient data in the stream.)//error exec
}if
}bind def
/readu16
{dup//readu8 exec 8 bitshift exch//readu8 exec or
}bind def
/reads16
{//readu16 exec 16#8000 xor 16#8000 sub
}bind def
/readu32
{dup//readu16 exec 16 bitshift exch//readu16 exec or
}bind def
/reads32
{dup//reads16 exec 16 bitshift exch//readu16 exec or
}bind def
/SkipToPosition
{dup//TTParser/Pos get
exch//TTParser exch/Pos exch put
sub
//PDFR_DEBUG{
(Skipping )print dup//=only exec( bytes.)=
}if
dup 0 eq{
pop pop
}{
dup 3 1 roll
()/SubFileDecode filter
exch
{1 index//BlockBuffer readstring pop length
dup 0 eq{pop exch pop exit}if
sub
}loop
0 ne{
mark(Insufficient data in the stream for SkipToPosition.)//error exec
}if
}ifelse
}bind def
/TagBuffer 4 string def
/ParseTTTableDirectory
{//PDFR_DEBUG{
(ParseTTTableDirectory beg)=
}if
15 dict begin
dup//readu32 exec 16#00010000 ne{
mark(Unknown True Type version.)//error exec
}if
dup//readu16 exec/NumTables exch def
dup//readu16 exec/SearchRange exch def
dup//readu16 exec/EntrySelector exch def
dup//readu16 exec/RangeShift exch def
//PDFR_DEBUG{
(NumTables = )print NumTables =
}if
NumTables{
dup//TagBuffer readstring not{
mark(Could not read TT tag.)//error exec
}if
cvn
[2 index//readu32 exec pop
2 index//readu32 exec
3 index//readu32 exec
]
//PDFR_DEBUG{
2 copy exch//=only exec( )print ==
}if
def
}repeat
pop
//TTParser/Pos 12 NumTables 16 mul add put
currentdict end
//PDFR_DEBUG{
(ParseTTTableDirectory end)=
}if
}bind def
/ParseTTcmap
{//PDFR_DEBUG{
(ParseTTcmap beg)=
}if
/cmap get aload pop
3 1 roll
7 dict begin
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(cmap position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos get/TablePos exch def
dup//readu16 exec pop
dup//readu16 exec/NumEncodings exch def
//PDFR_DEBUG{
(NumEncodings = )print NumEncodings =
}if
null
NumEncodings{
1 index//readu32 exec
2 index//readu32 exec
3 array dup 3 2 roll 0 exch put
2 index null ne{
dup 0 get 3 index 0 get sub
3 index exch 1 exch put
}if
dup 4 3 roll pop 3 1 roll
def
}repeat
dup 0 get
4 3 roll exch sub
1 exch put
//PDFR_DEBUG{
currentdict{
exch dup type/integertype eq{
//PrintHex exec( )print ==
}{
pop pop
}ifelse
}forall
}if
4 NumEncodings 8 mul add/HeaderLength exch def
//TTParser/Pos//TTParser/Pos get HeaderLength add put
0
NumEncodings{
16#7FFFFFF null
currentdict{
1 index type/integertype eq{
exch pop dup 0 get
dup 5 index gt{
dup 4 index lt{
4 1 roll
exch pop exch pop
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}forall
//PDFR_DEBUG{
(Obtaining subtable for )print dup ==
}if
3 2 roll pop
3 copy pop
TablePos add//SkipToPosition exec
3 copy exch pop 1 get
//TTParser/Pos//TTParser/Pos get 3 index add put
string
readstring not{
mark(Can't read a cmap subtable.)//error exec
}if
2 exch put
}repeat
pop pop
currentdict end
//PDFR_DEBUG{
(ParseTTcmap end)=
}if
}bind def
/GetTTEncoding
{//PDFR_DEBUG{
(GetTTEncoding beg)=
}if
get
exch pop
2 get
10 dict begin
/TTFDEBUG//PDFR_DEBUG def
//cmaparray exec
end
//PDFR_DEBUG{
(GetTTEncoding end)=
dup ==
}if
}bind def
/InverseEncoding
{
256 dict begin
dup length 1 sub -1 0{
2 copy get
exch
1 index currentdict exch//knownget exec{
dup type/arraytype eq{
aload length 1 add array astore
}{
2 array astore
}ifelse
}if
def
}for
pop
currentdict end
}bind def
/GetMacRomanEncodingInverse
{//PDFReader/MacRomanEncodingInverse get
dup null eq{
pop
MacRomanEncoding//InverseEncoding exec
dup//PDFReader exch/MacRomanEncodingInverse exch put
}if
}bind def
/PutCharStringSingle
{
dup 3 index length lt{
2 index exch get
dup 0 ne{
def
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}bind def
/PutCharString
{1 index type/nametype ne{
mark(Bad charstring name)//error exec
}if
dup type/arraytype eq{
{
3 copy//PutCharStringSingle exec
pop pop
}forall
pop
}{
//PutCharStringSingle exec
}ifelse
}bind def
/ComposeCharStrings
{
//PDFR_DEBUG{
(ComposeCharStrings beg)=
}if
1 index length 1 add dict begin
/.notdef 0 def
exch
//TTParser/post get
dup null ne{
exch
1 index length 1 sub -1 0{
dup 3 index exch get exch
dup 0 eq 2 index/.notdef eq or{
pop pop
}{
def
}ifelse
}for
}if
exch pop exch
{
//PutCharString exec
}forall
pop
currentdict end
//PDFR_DEBUG{
(ComposeCharStrings end)=
}if
}bind def
/ParseTTpost
{
//PDFR_DEBUG{
(ParseTTpost beg)=
}if
/post get aload pop
3 1 roll
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(post position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos//TTParser/Pos get 4 index add put
exch dup 65535 le{
string
readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}{
[3 1 roll
dup 16384 div floor cvi
exch 1 index 16384 mul
sub exch
1 sub 0 1 3 -1 roll
{
1 add index
16384 string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}for
counttomark -2 roll
string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
]
}ifelse
1 dict begin
/post exch def
//.getpost exec
//TTParser/post glyphencoding put
//PDFR_DEBUG{
(ParseTTpost end)=
glyphencoding ==
}if
end
}bind def
/MakeTTCharStrings
{//MakeStreamReader exec
dup dup//ParseTTTableDirectory exec
//TTParser/post null put
dup/post//knownget exec{
0 get
1 index/cmap get 0 get
lt{
2 copy//ParseTTpost exec
//ParseTTcmap exec
}{
2 copy//ParseTTcmap exec
3 1 roll
//ParseTTpost exec
}ifelse
}{
//ParseTTcmap exec
}ifelse
{
dup 16#00030001 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Windows Unicode.)=
}if
16#00030001//GetTTEncoding exec
AdobeGlyphList//ComposeCharStrings exec
exit
}if
dup 16#00010000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Macintosh Roman.)=
}if
16#00010000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
dup 16#00030000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding 3.0 - not sure why Ghostscript writes it since old versions.)=
}if
16#00030000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
mark(True Type cmap has no useful encodings.)//error exec
}loop
//PDFR_DEBUG{
(CharStrings <<)=
dup{
exch
dup type/nametype eq{
//=only exec
}{
==
}ifelse
( )print ==
}forall
(>>)=
}if
}bind def
/ScaleVal
{
aload pop
1 index sub
3 2 roll mul add
}bind def
/ScaleArg
{
aload pop
1 index sub
3 1 roll
sub exch div
}bind def
/ScaleArgN
{
dup length 2 sub -2 0{
2
2 index 3 1 roll getinterval
3 2 roll
exch//ScaleArg exec
1 index length 2 idiv 1 add 1 roll
}for
pop
}bind def
/ComputeFunction_10
{
//PDFR_DEBUG{
(ComputeFunction_10 beg )print 1 index//=only exec( stack=)print count =
}if
exch
dup 1 eq{
pop dup length 1 sub get
}{
1 index length 1 sub mul
dup dup floor sub
dup 0 eq{
pop cvi get
}{
3 1 roll floor cvi
2 getinterval
aload pop
2 index mul 3 2 roll 1 exch sub 3 2 roll mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_10 end )print dup//=only exec( stack=)print count =
}if
}bind def
/ComputeFunction_n0
{
//PDFR_DEBUG{
(ComputeFunction_n0 beg N=)print dup//=only exec( stack=)print count =
}if
dup 0 eq{
pop
}{
dup 2 add -1 roll
dup 3 index length 1 sub ge{
pop 1 sub
exch dup length 1 sub get exch
//PDFReader/ComputeFunction_n0 get exec
}{
dup floor cvi dup
4 index exch get
3 index dup
5 add copy
6 2 roll
pop pop pop pop
1 sub
//PDFReader/ComputeFunction_n0 get exec
3 2 roll pop
exch
4 3 roll exch
4 add 2 roll 1 add
3 2 roll exch get
exch 1 sub
//PDFReader/ComputeFunction_n0 get exec
1 index mul
3 1 roll
1 exch sub mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_n0 end )print dup//=only exec( stack=)print count =
}if
}bind def
/FunctionToProc_x01
{
dup/Domain get exch
dup/Data get 0 get exch
/Size get length
[4 1 roll
//PDFR_DEBUG{
{(function beg, stack =)print count//=only exec(\n)print}/exec load
5 2 roll
}if
dup 1 gt{
{mark exch
3 add 2 roll
//ScaleArgN exec
counttomark dup
3 add -2 roll
pop exch
//ComputeFunction_n0 exec
}/exec load
}{
pop
3 1/roll load//ScaleArg/exec load
/exch load
//ComputeFunction_10/exec load
}ifelse
//PDFR_DEBUG{
(function end, stack =)/print load/count load//=only/exec load(\n)/print load
}if
]cvx
//PDFR_DEBUG{
(Made a procedure for the 1-result function :)=
dup ==
}if
}bind def
/FunctionProcDebugBeg
{(FunctionProcDebugBeg )print count =
}bind def
/FunctionProcDebugEnd
{(FunctionProcDebugEnd )print count =
}bind def
/FunctionToProc_x0n
{
PDFR_DEBUG{
(FunctionToProc_x0n beg m=)print dup =
}if
1 index/Size get length exch
dup 7 mul 2 add array
PDFR_DEBUG{
dup 0//FunctionProcDebugBeg put
}{
dup 0//DoNothing put
}ifelse
dup 1/exec load put
dup 2 5 index/Domain get put
2 index 1 eq{
dup 3//ScaleArg put
}{
dup 3//ScaleArgN put
}ifelse
dup 4/exec load put
1 index 1 sub 0 exch 1 exch{
dup 7 mul 5 add
1 index 4 index 1 sub ne{
dup 3 index exch 6 index put 1 add
dup 3 index exch/copy load put 1 add
}if
[
6 index/Data get 3 index get
6 index 1 eq{
//ComputeFunction_10/exec load
}{
6 index
//ComputeFunction_n0/exec load
}ifelse
]cvx
3 index exch 2 index exch put 1 add
2 index 1 index/exec load put 1 add
1 index 4 index 1 sub ne{
2 index 1 index 6 index 1 add put 1 add
2 index 1 index 1 put 1 add
2 index 1 index/roll load put
}if
pop pop
}for
PDFR_DEBUG{
dup dup length 2 sub//FunctionProcDebugEnd put
}{
dup dup length 2 sub//DoNothing put
}ifelse
dup dup length 1 sub/exec load put
cvx exch pop exch pop exch pop
//PDFR_DEBUG{
(Made a procedure for the n-argument function :)=
dup ==
}if
PDFR_DEBUG{
(FunctionToProc_x0n end)=
}if
}bind def
/MakeTableRec
{
0
exec
}bind def
/MakeTable
{//PDFR_DEBUG{
(MakeTable beg )print count =
}if
1 index/Size get exch
1 sub dup
3 1 roll
get
array
1 index 0 eq{
exch pop exch pop
}{
dup length 1 sub -1 0{
3 index 3 index//MakeTableRec exec
2 index 3 1 roll put
}for
exch pop exch pop
}ifelse
//PDFR_DEBUG{
(MakeTable end )print count =
}if
}bind def
//MakeTableRec 0//MakeTable put
/StoreSample
{
1 sub
dup 0 eq{
pop
}{
-1 1{
I exch get get
}for
}ifelse
I 0 get 3 2 roll put
}bind def
/ReadSample32
{
4{
File read not{
mark(Insufficient data for function.)//error exec
}if
}repeat
pop
3 1 roll exch
256 mul add 256 mul add
//1_24_bitshift_1_sub div
}bind def
/ReadSample
{
Buffer BitsLeft BitsPerSample
{2 copy ge{
exit
}if
3 1 roll
8 add 3 1 roll
256 mul File read not{
mark(Insufficient data for function.)//error exec
}if
add
3 1 roll
}loop
sub dup
2 index exch
neg bitshift
2 copy exch bitshift
4 3 roll exch sub
/Buffer exch def
exch/BitsLeft exch def
Div div
}bind def
/ReadSamplesRec
{0
exec
}bind def
/ReadSamples
{
//PDFR_DEBUG{
(ReadSamples beg )print count =
}if
dup 1 eq{
pop
0 1 Size 0 get 1 sub{
I exch 0 exch put
0 1 M 1 sub{
dup Range exch 2 mul 2 getinterval
//PDFR_DEBUG{
(Will read a sample ... )print
}if
BitsPerSample 32 eq{//ReadSample32}{//ReadSample}ifelse
exec exch//ScaleVal exec
//PDFR_DEBUG{
(value=)print dup =
}if
exch Table exch get
Size length//StoreSample exec
}for
}for
}{
1 sub
dup Size exch get 0 exch 1 exch 1 sub{
I exch 2 index exch put
dup//ReadSamplesRec exec
}for
pop
}ifelse
//PDFR_DEBUG{
(ReadSamples end )print count =
}if
}bind def
//ReadSamplesRec 0//ReadSamples put
/StreamToArray
{//PDFR_DEBUG{
(StreamToArray beg )print count =
}if
userdict/FuncDataReader get begin
dup/BitsPerSample get/BitsPerSample exch def
dup/Size get length/N exch def
dup/Range get length 2 idiv/M exch def
1 BitsPerSample bitshift 1 sub/Div exch def
/BitsLeft 0 def
/Buffer 0 def
dup/Size get/Size exch def
dup/Range get/Range exch def
/File 1 index//MakeStreamReader exec def
/I[N{0}repeat]def
M array
dup length 1 sub -1 0{
2 index N//MakeTable exec
2 index 3 1 roll put
}for
/Table exch def
N//ReadSamples exec
PDFR_DEBUG{
(Table = )print Table ==
}if
/Data Table put
end
//PDFR_DEBUG{
(StreamToArray end )print count =
}if
}bind def
/FunctionToProc10
{
PDFR_DEBUG{
(FunctionToProc10 beg, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
PDFR_DEBUG{
(FunctionToProc10 end)=
}if
}bind def
/FunctionToProc12
{begin
currentdict/C0//knownget exec{length 1 eq}{true}ifelse{
N
currentdict/C0//knownget exec{
0 get
}{
0
}ifelse
currentdict/C1//knownget exec{
0 get
}{
1
}ifelse
1 index sub
[4 1 roll
{
4 2 roll
exp mul add
}aload pop
]cvx
}{
[
0 1 C0 length 1 sub{
N
C0 2 index get
C1 3 index get
4 3 roll pop
1 index sub
[/dup load
5 2 roll
{
4 2 roll
exp mul add
exch
}aload pop
]cvx
/exec load
}for
/pop load
]cvx
}ifelse
end
//PDFR_DEBUG{
(FunctionType2Proc : )print dup ==
}if
}bind def
/FunctionToProc14
{//MakeStreamReader exec cvx exec
//PDFR_DEBUG{
(FunctionType4Proc : )print dup ==
}if
}bind def
/FunctionToProc1
{
dup/FunctionType get
{dup 0 eq{
pop//FunctionToProc10 exec exit
}if
dup 2 eq{
pop//FunctionToProc12 exec exit
}if
dup 4 eq{
pop//FunctionToProc14 exec exit
}if
mark exch(Function type )exch( isn't implemented yet.)//error exec
}loop
}bind def
/FunctionToProc20
{
PDFR_DEBUG{
(FunctionToProc20, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
}bind def
/FunctionToProc
{//PDFR_DEBUG{
(FunctionToProc beg )print count =
}if
dup type/dicttype eq{
dup/Domain get length 2 idiv
{
dup 1 eq{
pop//FunctionToProc1 exec exit
}if
dup 2 eq{
pop//FunctionToProc20 exec exit
}if
mark(Functions with many arguments aren't implemented yet.)//error exec
}loop
}{
//PDFR_DEBUG{(Not a function dict, assume already a procedure.)print}if
}ifelse
//PDFR_DEBUG{
(FunctionToProc end )print count =
}if
}bind def
/spotfunctions mark
/Round{
abs exch abs 2 copy add 1 le{
dup mul exch dup mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}
/Diamond{
abs exch abs 2 copy add .75 le{
dup mul exch dup mul add 1 exch sub
}{
2 copy add 1.23 le{
.85 mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}ifelse
}
/Ellipse{
abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt{
pop dup mul exch .75 div dup mul add 4 div 1 exch sub
}{
dup 1 gt{
pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub
}{
.5 exch sub exch pop exch pop
}ifelse
}ifelse
}
/EllipseA{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseA{dup mul .9 mul exch dup mul add 1 sub}
/EllipseB{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}
/EllipseC{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseC{dup mul .9 mul exch dup mul add 1 sub}
/Line{exch pop abs neg}
/LineX{pop}
/LineY{exch pop}
/Square{abs exch abs 2 copy lt{exch}if pop neg}
/Cross{abs exch abs 2 copy gt{exch}if pop neg}
/Rhomboid{abs exch abs 0.9 mul add 2 div}
/DoubleDot{2{360 mul sin 2 div exch}repeat add}
/InvertedDoubleDot{2{360 mul sin 2 div exch}repeat add neg}
/SimpleDot{dup mul exch dup mul add 1 exch sub}
/InvertedSimpleDot{dup mul exch dup mul add 1 sub}
/CosineDot{180 mul cos exch 180 mul cos add 2 div}
/Double{exch 2 div exch 2{360 mul sin 2 div exch}repeat add}
/InvertedDouble{
exch 2 div exch 2{360 mul sin 2 div exch}repeat add neg
}
.dicttomark readonly def
/CheckColorSpace
{
dup type/arraytype ne{
mark(Resource )3 index( must be an array.)//error exec
}if
}bind def
/SubstitutePDFColorSpaceRec
{0
exec
}bind def
/SubstitutePDFColorSpace
{
{
dup 0 get/Pattern eq{
dup length 1 gt{
dup dup 1//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
1 exch put
}if
exit
}if
dup 0 get/Indexed eq{
exit
}if
dup 0 get/Separation eq{
dup dup 2//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
2 exch put
exit
}if
dup 0 get/CalGray eq{
1 get
dup/Gamma//knownget exec{
[exch[exch/exp load]cvx dup dup]
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedA exch]
exit
}if
dup 0 get/CalRGB eq{
1 get
dup/Matrix//knownget exec{
1 index exch/MatrixLMN exch put
}if
dup/Gamma//knownget exec{
aload pop
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
3 array astore
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedABC exch]
exit
}if
dup 0 get/Lab eq{
1 get
begin
currentdict/Range//knownget exec{aload pop}{-100 100 -100 100}ifelse
0 100 6 2 roll 6 array astore
/RangeABC exch def
/DecodeABC[{16 add 116 div}bind{500 div}bind{200 div}bind]def
/MatrixABC[1 1 1 1 0 0 0 0 -1]def
{dup 6 29 div ge{dup dup mul mul}{4 29 div sub 108 841 div mul}ifelse}
/DecodeLMN[
[3 index aload pop WhitePoint 0 get/mul load]cvx
[4 index aload pop WhitePoint 1 get/mul load]cvx
[5 index aload pop WhitePoint 2 get/mul load]cvx
]def pop
//PDFR_DEBUG{
(Constructed from Lab <<)=
currentdict{exch = ==}forall
(>>)=
}if
[/CIEBasedABC currentdict]
end
exit
pop
}if
dup 0 get/CIEBasedA eq{exit}if
dup 0 get/CIEBasedABC eq{exit}if
mark exch(Unimplemented color space )exch//error exec
}loop
}bind def
//SubstitutePDFColorSpaceRec 0//SubstitutePDFColorSpace put
/ResolveArrayElement
{2 copy get
dup type dup/arraytype eq exch
/packedarraytype eq or{
dup length 1 ge exch xcheck and{
2 copy get
dup 0 get type/integertype eq
1 index 1 get type dup/arraytype
eq exch
/packedarraytype eq or
and{
exec
2 index 4 1 roll put
}{
pop pop
}ifelse
}{
pop
}ifelse
}{
pop pop
}ifelse
}bind def
/ResolveColorSpaceArrayRec
{0
exec
}bind def
/SetColorSpaceSafe
{
PDFR_DEBUG{
(SetColorSpaceSafe beg)=
}if
currentcolorspace dup type/arraytype eq{
1 index type/arraytype eq{
dup length 2 index length eq{
false exch
dup length 0 exch 1 exch 1 sub{
dup
4 index exch get exch
2 index exch get
ne{
exch pop true exch exit
}if
}for
pop
{
setcolorspace
}{
pop
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
PDFR_DEBUG{
(SetColorSpaceSafe end)=
}if
}bind def
/ResolveColorSpaceArray
{
//PDFR_DEBUG{
(ResolveColorSpaceArray beg )print dup ==
}if
dup 0 get/Indexed eq{
1//ResolveArrayElement exec
dup dup 1 get
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArrayRec exec
1 exch put
}{
pop pop
}ifelse
}if
dup 0 get/Separation eq{
dup dup 1 get UnPDFEscape 1 exch put
3//ResolveArrayElement exec
dup 3 get//FunctionToProc exec
2 copy 3 exch put
pop
}if
dup 0 get/Pattern eq{
dup length 1 gt{dup
1 get dup type/arraytype eq{
ResolveColorSpaceArray
1 index 1 3 -1 roll put
}{pop}ifelse}if
}if
PDFR_DEBUG{
(Construcrted color space :)=
dup ==
}if
//PDFR_DEBUG{
(ResolveColorSpaceArray end )print dup ==
}if
}bind def
//ResolveColorSpaceArrayRec 0//ResolveColorSpaceArray put
/ResolveColorSpace
{
//PDFR_DEBUG{
(ResolveColorSpace beg )print dup =
}if
dup//SimpleColorSpaceNames exch known not{
dup//PDFColorSpaces exch//knownget exec{
exch pop
//PDFR_DEBUG{
(ResolveColorSpace known )=
}if
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/ColorSpace//DoNothing//ResolveD exec
exch//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArray exec
dup//PDFColorSpaces 4 2 roll put
}if
}ifelse
}if
//PDFR_DEBUG{
(ResolveColorSpace end )print dup ==
}if
}bind def
/CheckPattern
{
dup/PatternType//knownget exec{
dup 1 ne{
mark(Resource )4 index( is a shading, which can't be handled at level 2. )//error exec
}if
pop
}if
dup/Type knownget{
/Pattern ne{
mark(Resource )4 index( must have /Type/Pattern .)//error exec
}if
}if
}bind def
/PaintProc
{/Context get
//RunDelayedStream exec
}bind def
/ResolvePattern
{
dup
userdict/PDFR_Patterns get
exch//knownget exec{
exch pop
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/Pattern//DoNothing//ResolveD exec
exch//CheckPattern//ResolveD exec
dup dup/Context exch put
dup/Resources//DoNothing//ResolveD exec pop
dup/PaintProc//PaintProc put
gsave userdict/PDFR_InitialGS get setgstate
currentglobal exch false setglobal
dup/Matrix get
makepattern
exch setglobal
grestore
dup userdict/PDFR_Patterns get
4 2 roll
put
}ifelse
}bind def
/SetColor
{//PDFR_DEBUG{
(SetColor beg)=
}if
currentcolorspace dup type/nametype eq{
pop setcolor
}{
0 get/Pattern eq{
//ResolvePattern exec setpattern
}{
setcolor
}ifelse
}ifelse
//PDFR_DEBUG{
(SetColor end)=
}if
}bind def
/ImageKeys 15 dict begin
/BPC/BitsPerComponent def
/CS/ColorSpace def
/D/Decode def
/DP/DecodeParms def
/F/Filter def
/H/Height def
/IM/ImageMask def
/I/Interpolate def
/W/Width def
currentdict end readonly def
/ImageValues 15 dict begin
/G/DeviceGray def
/RGB/DeviceRGB def
/CMYK/DeviceCMYK def
/I/Indexed def
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/GetColorSpaceRange
{2 index/ColorSpace get
dup type/arraytype eq{
1 get
}if
exch//knownget exec{
exch pop
}if
}bind def
/DecodeArrays 15 dict begin
/DeviceGray{[0 1]}def
/DeviceRGB{[0 1 0 1 0 1]}def
/DeviceCMYK{[0 1 0 1 0 1 0 1]}def
/Indexed{
dup/BitsPerComponent get 1 exch bitshift 1 sub[exch 0 exch]
}def
/Separation{[0 1]}def
/CIEBasedA{[0 1]/RangeA//GetColorSpaceRange exec}def
/CIEBasedABC{[0 1 0 1 0 1]/RangeABC//GetColorSpaceRange exec}def
currentdict end readonly def
/Substitute
{1 index//knownget exec{
exch pop
}if
}bind def
/DebugImagePrinting
{
//PDFR_DEBUG{
(Image :)=
dup{exch//=only exec( )print ==
}forall
}if
}bind def
/CompleteImage
{
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec pop
}if
dup/Decode known not{
dup/ColorSpace//knownget exec{
dup type/arraytype eq{
0 get
}if
//DecodeArrays exch get exec
}{
[0 1]
}ifelse
1 index exch/Decode exch put
}if
dup/ImageMatrix[2 index/Width get 0 0 5 index/Height get neg
0 7 index/Height get]put
//DebugImagePrinting exec
}bind def
/CompleteInlineImage
{
//PDFR_DEBUG{
(CompleteInlineImage beg)=
}if
dup/ImageType known not{
dup/ImageType 1 put
}if
dup length dict exch{
exch//ImageKeys//Substitute exec
dup/Filter eq{
exch//ImageValues//Substitute exec exch
}if
dup/ColorSpace eq{
exch
dup//ImageValues exch//knownget exec{
exch pop
}{
//ResolveColorSpace exec
}ifelse
exch
}if
exch
2 index 3 1 roll put
}forall
//CompleteImage exec
dup/DataSource 2 copy get
2 index//AppendFilters exec put
//PDFR_DEBUG{
(CompleteInlineImage end)=
}if
}bind def
/CompleteOutlineImage
{
currentglobal exch dup gcheck setglobal
//PDFR_DEBUG{
(CompleteOutlineImage beg)=
}if
dup dup//MakeStreamReader exec/DataSource exch put
dup/ImageType known not{
//CompleteImage exec
dup/ImageType 1 put
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//ResolveColorSpaceArray exec
//SubstitutePDFColorSpace exec
1 index exch/ColorSpace exch put
}{
pop
}ifelse
}if
}if
//PDFR_DEBUG{
(CompleteOutlineImage end)=
}if
exch setglobal
}bind def
/DoImage
{
//PDFR_DEBUG{
(DoImage beg)=
}if
gsave
dup/ColorSpace//knownget exec{setcolorspace}if
dup/ImageMask//knownget exec not{false}if
{imagemask}{image}ifelse
grestore
//PDFR_DEBUG{
(DoImage end)=
}if
}bind def
/GSave
{
gsave
//PDFReader/GraphicStateStackPointer get
dup//GraphicStateStack exch get null eq{
dup//GraphicStateStack exch//InitialGraphicState length dict put
}if
dup//GraphicStateStack exch get
//GraphicState exch copy pop
1 add//PDFReader exch/GraphicStateStackPointer exch put
}bind def
/GRestore
{
grestore
//PDFReader/GraphicStateStackPointer get
1 sub dup
//PDFReader exch/GraphicStateStackPointer exch put
//GraphicStateStack exch get
//GraphicState copy pop
}bind def
/SetFont
{dup//GraphicState exch/FontSize exch put
//ResolveAndSetFont exec
//GraphicState/FontMatrixNonHV currentfont/FontMatrix get 1 get 0 ne put
}bind def
/ShowText
{//GraphicState/TextRenderingMode get 0 eq{
//GraphicState/WordSpacing get 0
32
//GraphicState/CharacterSpacing get 0
6 5 roll
//GraphicState/FontMatrixNonHV get{
[
7 -2 roll pop
5 -2 roll pop
5 -1 roll
{
exch
pop
3 index add
exch 2 index eq{3 index add}if
4 1 roll
}
currentfont/FontMatrix get 0 get 0 ne{
1 1 index length 1 sub getinterval cvx
}if
5 index
cshow
pop pop pop]
xshow
}{
awidthshow
}ifelse
}{
//GraphicState/CharacterSpacing get 0 eq
//GraphicState/FontMatrixNonHV get not and
//GraphicState/WordSpacing get 0 eq and{
true charpath
}{
{
exch
pop 0
currentpoint 5 4 roll
( )dup 0 3 index put true charpath
5 1 roll
moveto rmoveto
//GraphicState/CharacterSpacing get 0 rmoveto
32 eq{
//GraphicState/WordSpacing get 0 rmoveto
}if
}
//GraphicState/FontMatrixNonHV get dup not exch{
pop currentfont/FontMatrix get 0 get 0 ne
}if{
1 1 index length 1 sub getinterval cvx
}if
exch cshow
}ifelse
}ifelse
}bind def
/ShowTextBeg
{//GraphicState/TextRenderingMode get 0 ne{
currentpoint newpath moveto
}if
}bind def
/ShowTextEnd
{//GraphicState/TextRenderingMode get
{dup 1 eq{
stroke exit
}if
dup 2 eq{
gsave fill grestore stroke exit
}if
dup 3 eq{
currentpoint newpath moveto
}if
dup 4 eq{
gsave fill grestore clip exit
}if
dup 5 eq{
gsave stroke grestore clip exit
}if
dup 6 eq{
gsave fill grestore gsave stroke grestore fill exit
}if
dup 7 eq{
clip exit
}if
exit
}loop
pop
}bind def
/ShowTextWithGlyphPositioning
{//ShowTextBeg exec
{dup type/stringtype eq{
//ShowText exec
}{
neg 1000 div//GraphicState/FontSize get mul 0 rmoveto
}ifelse
}forall
//ShowTextEnd exec
}bind def
/CheckFont
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/SetTransfer
{
//PDFR_DEBUG{(SetTransfer beg )print count =}if
dup type/arraytype eq 1 index xcheck not and{
0 4 getinterval aload pop
setcolortransfer
}{
settransfer
}ifelse
//PDFR_DEBUG{(SetTransfer end )print count =}if
}bind def
/CheckExtGState
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/CheckHalftone
{dup/HalftoneType known not{
mark(Resource )3 index( must have /HalftoneType.)//error exec
}if
}bind def
/ResolveFunction
{
//PDFR_DEBUG{(ResolveFunction beg )print dup = count =}if
2 copy get//IsObjRef exec{
2 copy//DoNothing//ResolveD exec
3 copy put pop
}if
2 copy get dup type/arraytype eq exch xcheck and not{
2 copy get
dup type/arraytype eq 1 index xcheck not and{
dup length 1 sub -1 0{
2 copy//DoNothing ResolveA
dup/Identity eq{
pop 2 copy{}put
}{
//FunctionToProc exec
3 copy put pop
}ifelse
pop
}for
}{
dup/Default eq{
}{
dup/Identity eq{
pop{}
}{dup type/nametype eq{
//spotfunctions exch get
}{
//FunctionToProc exec
}ifelse
}ifelse
}ifelse
}ifelse
3 copy put
exch pop
}{
1 index exch get
}ifelse
//PDFR_DEBUG{(ResolveFunction end )print dup == count =}if
}bind def
/ResolveFunctionSafe
{2 copy known{
//ResolveFunction exec
}if
pop
}bind def
/CreateHalftoneThresholds
{
dup/Thresholds known not{
dup/HalftoneType get 10 eq{
dup dup//MakeStreamReader exec
/Thresholds exch put
}if
dup/HalftoneType get dup 3 eq exch 6 eq or{
dup dup//MakeStreamReader exec
//BlockBuffer readstring pop
dup length
dup 0 eq{
mark(Could not read Thresholds)//error exec
}if
string copy/Thresholds exch put
dup/HalftoneType 3 put
}if
}if
}bind def
/SetExtGState
{
//PDFReader/CurrentObject get/Context get/Resources get
/ExtGState//DoNothing//ResolveD exec
exch//CheckExtGState//ResolveD exec
dup/LW//knownget exec{
setlinewidth
}if
dup/LC//knownget exec{
setlinecap
}if
dup/LJ//knownget exec{
setlinejoin
}if
dup/ML//knownget exec{
setmeterlimit
}if
dup/D//knownget exec{
setdash
}if
dup/RI//knownget exec{
mark(Unimplemented ExtGState.RI)//error exec
}if
dup/OP//knownget exec{
setoverprint
}if
dup/op//knownget exec{
setoverprint
}if
dup/OPM//knownget exec{
mark(Unimplemented ExtGState.OPM)//error exec
}if
dup/Font//knownget exec{
mark(Unimplemented ExtGState.Font)//error exec
}if
dup/BG known{
/BG//ResolveFunction exec
setblackgeneration
}if
dup/BG2 known{
/BG2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/BG2 get
}if
setblackgeneration
}if
dup/UCR known{
/UCR//ResolveFunction exec
setundercolorremoval
}if
dup/UCR2 known{
/UCR2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/UCR2 get
}if
setundercolorremoval
}if
dup/TR known{
/TR//ResolveFunction exec
//SetTransfer exec
}if
dup/TR2 known{
/TR2//ResolveFunction exec
dup/Default eq{
pop//InitialExtGState/TR2 get
aload pop setcolortransfer
}{
//SetTransfer exec
}ifelse
}if
dup/HT//knownget exec{
dup/Default eq{
pop//InitialExtGState/HT get
sethalftone
}{
//PDFR_DEBUG{(Ht beg)=}if
pop dup/HT//CheckHalftone//ResolveD exec
/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
null exch
dup/HalftoneType get dup 5 eq exch dup 4 eq exch 2 eq or or{
dup{
dup//IsObjRef exec{
pop
1 index exch//CheckHalftone ResolveD
}if
dup type/dicttype eq{
dup/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
//CreateHalftoneThresholds exec
dup/HalftoneType get 5 gt{
4 3 roll pop
dup 4 1 roll
}if
}if
pop pop
}forall
}if
//CreateHalftoneThresholds exec
//PDFR_DEBUG{
(HT:)=
dup{
1 index/Default eq{
(Default <<)=
exch pop
{exch = ==}forall
(>>)=
}{
exch = ==
}ifelse
}forall
(HT end)= flush
}if
exch dup null ne{
(Warning: Ignoring a halftone with a Level 3 component halftone Type )print dup/HalftoneType get =
pop pop
}{
pop
dup/HalftoneType get 5 gt{
(Warning: Ignoring a Level 3 halftone Type )print dup/HalftoneType get =
pop
}{
sethalftone
}ifelse
}ifelse
//PDFR_DEBUG{(HT set)= flush}if
}ifelse
}if
dup/FL//knownget exec{
setflattness
}if
dup/SM//knownget exec{
setsmoothness
}if
dup/SA//knownget exec{
setstrokeadjust
}if
dup/BM//knownget exec{
mark(Unimplemented ExtGState.BM)//error exec
}if
dup/SMask//knownget exec{
mark(Unimplemented ExtGState.SMask)//error exec
}if
dup/CA//knownget exec{
mark(Unimplemented ExtGState.CA)//error exec
}if
dup/ca//knownget exec{
mark(Unimplemented ExtGState.ca)//error exec
}if
dup/AIS//knownget exec{
mark(Unimplemented ExtGState.AIS)//error exec
}if
dup/TK//knownget exec{
mark(Unimplemented ExtGState.TK)//error exec
}if
pop
}bind def
/CheckXObject
{dup/Subtype get dup/Image ne exch dup/Form ne exch/PS ne and and{
mark(Resource )3 index( must have /Subtype /Image or /Form or /PS.)//error exec
}if
}bind def
/DoXObject
{
//PDFReader/CurrentObject get/Context get/Resources get
/XObject//DoNothing//ResolveD exec
exch//CheckXObject//ResolveD exec
dup/Subtype get
dup/Image eq{
pop
//CompleteOutlineImage exec
//DoImage exec
}{
dup/PS eq{
PDFR_DEBUG{
(Executing a PS Xobject)=
}if
pop
//RunDelayedStream exec
}{
dup/Form eq{
pop
PDFR_DEBUG{
(Executing a Form XObject)=
}if
//PDFReader/CurrentObject get exch
dup//PDFReader exch<< exch/Context exch >>/CurrentObject exch put
dup/Matrix get concat
dup/BBox get aload pop exch 3 index sub exch 2 index sub rectclip
//RunDelayedStream exec
//PDFReader exch/CurrentObject exch put
}{
mark exch(unimplemented XObject type )exch//error exec
}ifelse
}ifelse
}ifelse
}bind def
/Operators 50 dict begin
/q{//GSave exec}bind def
/Q{//GRestore exec}bind def
/cm{//TempMatrix astore concat}bind def
/i{1 .min setflat}bind def
/J/setlinecap load def
/d/setdash load def
/j/setlinejoin load def
/w/setlinewidth load def
/M/setmiterlimit load def
/gs{SetExtGState}bind def
/g/setgray load def
/rg/setrgbcolor load def
/k/setcmykcolor load def
/cs{//ResolveColorSpace exec//SetColorSpaceSafe exec
}bind def
/sc/setcolor load def
/scn{//SetColor exec}bind def
/G/setgray load def
/RG/setrgbcolor load def
/K/setcmykcolor load def
/CS//cs def
/ri{SetColorRenderingIntent}bind def
/SC/setcolor load def
/SCN{//SetColor exec}bind def
/m/moveto load def
/l/lineto load def
/c/curveto load def
/v{currentpoint 6 2 roll curveto}bind def
/y{2 copy curveto}bind def
/re{
4 2 roll moveto exch dup 0 rlineto 0 3 -1 roll rlineto neg 0 rlineto
closepath
}def
/h/closepath load def
/n/newpath load def
/S/stroke load def
/s{closepath stroke}bind def
/f/fill load def
/f*/eofill load def
/B{gsave fill grestore stroke}bind def
/b{closepath gsave fill grestore stroke}bind def
/B*{gsave eofill grestore stroke}bind def
/b*{closepath gsave eofill grestore stroke}bind def
/W/clip load def
/W*/eoclip load def
/sh{
ResolveShading
dup/Background known{
gsave
dup/ColorSpace get setcolorspace
dup/Background get aload pop setcolor
pathbbox
2 index sub exch 3 index sub exch
rectfill
grestore
}if
shfill
}bind def
/Do{//DoXObject exec}bind def
/BI{currentglobal false setglobal<<}bind def
/ID{>>
dup/DataSource currentfile
2 index/F//knownget exec{
/A85 eq{
0(~>)/SubFileDecode filter
}if
}if
put
//CompleteInlineImage exec
exch setglobal
//DoImage exec
}bind def
/EI{}bind def
/BT{gsave//GraphicState/InitialTextMatrix get currentmatrix pop}bind def
/ET{grestore}bind def
/Tc{//GraphicState exch/CharacterSpacing exch put}bind def
/TL{//GraphicState exch/TextLeading exch put}bind def
/Tr{//GraphicState exch/TextRenderingMode exch put}bind def
/Ts{
mark(Unimplemented SetTextRise)//error exec
}bind def
/Tw{//GraphicState exch/WordSpacing exch put}bind def
/Tz{
mark(Unimplemented SetHorizontalTextScaling)//error exec
}bind def
/Td{translate 0 0 moveto}bind def
/TD{dup neg//TL exec//Td exec}bind def
/Tm{//GraphicState/InitialTextMatrix get setmatrix
//TempMatrix astore concat
0 0 moveto}bind def
/T*{0//GraphicState/TextLeading get neg//Td exec}bind def
/Tj{//ShowTextBeg exec//ShowText exec//ShowTextEnd exec}bind def
/'{//T* exec//ShowText exec//ShowTextEnd exec}bind def
/"{3 2 roll//Tw exec exch//Tc exec//' exec}bind def
/TJ//ShowTextWithGlyphPositioning def
/Tf//SetFont def
/d0/setcharwidth load def
/d1/setcachedevice load def
/BDC{pop pop}bind def
/BMC{pop}bind def
/EMC{}bind def
/BX{BeginCompatibilitySection}bind def
/EX{EndCompatibilitySection}bind def
/DP{DefineMarkedContentPointWithPropertyList}bind def
/MP{DefineMarkedContentPoint}bind def
/PS{cvx exec}bind def
currentdict end def
//PDFR_STREAM{
//Operators length dict begin
//Operators{
exch dup
[exch//=only/exec load
( )/print load
8 7 roll
dup type/arraytype eq{
/exec load
}if
( )/print load
]cvx
def
}forall
currentdict end/Operators exch def
}if
/.registerencoding
{pop pop
}bind def
/.defineencoding
{def
}bind def
/.findencoding
{load
}bind def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
256 packedarray
5 1 index .registerencoding
.defineencoding
exec
/AdobeGlyphList mark
/A 16#0041
/AE 16#00c6
/AEacute 16#01fc
/AEmacron 16#01e2
/AEsmall 16#f7e6
/Aacute 16#00c1
/Aacutesmall 16#f7e1
/Abreve 16#0102
/Abreveacute 16#1eae
/Abrevecyrillic 16#04d0
/Abrevedotbelow 16#1eb6
/Abrevegrave 16#1eb0
/Abrevehookabove 16#1eb2
/Abrevetilde 16#1eb4
/Acaron 16#01cd
/Acircle 16#24b6
/Acircumflex 16#00c2
/Acircumflexacute 16#1ea4
/Acircumflexdotbelow 16#1eac
/Acircumflexgrave 16#1ea6
/Acircumflexhookabove 16#1ea8
/Acircumflexsmall 16#f7e2
/Acircumflextilde 16#1eaa
/Acute 16#f6c9
/Acutesmall 16#f7b4
/Acyrillic 16#0410
/Adblgrave 16#0200
/Adieresis 16#00c4
/Adieresiscyrillic 16#04d2
/Adieresismacron 16#01de
/Adieresissmall 16#f7e4
/Adotbelow 16#1ea0
/Adotmacron 16#01e0
/Agrave 16#00c0
/Agravesmall 16#f7e0
/Ahookabove 16#1ea2
/Aiecyrillic 16#04d4
/Ainvertedbreve 16#0202
/Alpha 16#0391
/Alphatonos 16#0386
/Amacron 16#0100
/Amonospace 16#ff21
/Aogonek 16#0104
/Aring 16#00c5
/Aringacute 16#01fa
/Aringbelow 16#1e00
/Aringsmall 16#f7e5
/Asmall 16#f761
/Atilde 16#00c3
/Atildesmall 16#f7e3
/Aybarmenian 16#0531
/B 16#0042
/Bcircle 16#24b7
/Bdotaccent 16#1e02
/Bdotbelow 16#1e04
/Becyrillic 16#0411
/Benarmenian 16#0532
/Beta 16#0392
/Bhook 16#0181
/Blinebelow 16#1e06
/Bmonospace 16#ff22
/Brevesmall 16#f6f4
/Bsmall 16#f762
/Btopbar 16#0182
/C 16#0043
/Caarmenian 16#053e
/Cacute 16#0106
/Caron 16#f6ca
/Caronsmall 16#f6f5
/Ccaron 16#010c
/Ccedilla 16#00c7
/Ccedillaacute 16#1e08
/Ccedillasmall 16#f7e7
/Ccircle 16#24b8
/Ccircumflex 16#0108
/Cdot 16#010a
/Cdotaccent 16#010a
/Cedillasmall 16#f7b8
/Chaarmenian 16#0549
/Cheabkhasiancyrillic 16#04bc
/Checyrillic 16#0427
/Chedescenderabkhasiancyrillic 16#04be
/Chedescendercyrillic 16#04b6
/Chedieresiscyrillic 16#04f4
/Cheharmenian 16#0543
/Chekhakassiancyrillic 16#04cb
/Cheverticalstrokecyrillic 16#04b8
/Chi 16#03a7
/Chook 16#0187
/Circumflexsmall 16#f6f6
/Cmonospace 16#ff23
/Coarmenian 16#0551
/Csmall 16#f763
/D 16#0044
/DZ 16#01f1
/DZcaron 16#01c4
/Daarmenian 16#0534
/Dafrican 16#0189
/Dcaron 16#010e
/Dcedilla 16#1e10
/Dcircle 16#24b9
/Dcircumflexbelow 16#1e12
/Dcroat 16#0110
/Ddotaccent 16#1e0a
/Ddotbelow 16#1e0c
/Decyrillic 16#0414
/Deicoptic 16#03ee
/Delta 16#2206
/Deltagreek 16#0394
/Dhook 16#018a
/Dieresis 16#f6cb
/DieresisAcute 16#f6cc
/DieresisGrave 16#f6cd
/Dieresissmall 16#f7a8
/Digammagreek 16#03dc
/Djecyrillic 16#0402
/Dlinebelow 16#1e0e
/Dmonospace 16#ff24
/Dotaccentsmall 16#f6f7
/Dslash 16#0110
/Dsmall 16#f764
/Dtopbar 16#018b
/Dz 16#01f2
/Dzcaron 16#01c5
/Dzeabkhasiancyrillic 16#04e0
/Dzecyrillic 16#0405
/Dzhecyrillic 16#040f
/E 16#0045
/Eacute 16#00c9
/Eacutesmall 16#f7e9
/Ebreve 16#0114
/Ecaron 16#011a
/Ecedillabreve 16#1e1c
/Echarmenian 16#0535
/Ecircle 16#24ba
/Ecircumflex 16#00ca
/Ecircumflexacute 16#1ebe
/Ecircumflexbelow 16#1e18
/Ecircumflexdotbelow 16#1ec6
/Ecircumflexgrave 16#1ec0
/Ecircumflexhookabove 16#1ec2
/Ecircumflexsmall 16#f7ea
/Ecircumflextilde 16#1ec4
/Ecyrillic 16#0404
/Edblgrave 16#0204
/Edieresis 16#00cb
/Edieresissmall 16#f7eb
/Edot 16#0116
/Edotaccent 16#0116
/Edotbelow 16#1eb8
/Efcyrillic 16#0424
/Egrave 16#00c8
/Egravesmall 16#f7e8
/Eharmenian 16#0537
/Ehookabove 16#1eba
/Eightroman 16#2167
/Einvertedbreve 16#0206
/Eiotifiedcyrillic 16#0464
/Elcyrillic 16#041b
/Elevenroman 16#216a
/Emacron 16#0112
/Emacronacute 16#1e16
/Emacrongrave 16#1e14
/Emcyrillic 16#041c
/Emonospace 16#ff25
/Encyrillic 16#041d
/Endescendercyrillic 16#04a2
/Eng 16#014a
/Enghecyrillic 16#04a4
/Enhookcyrillic 16#04c7
/Eogonek 16#0118
/Eopen 16#0190
/Epsilon 16#0395
/Epsilontonos 16#0388
/Ercyrillic 16#0420
/Ereversed 16#018e
/Ereversedcyrillic 16#042d
/Escyrillic 16#0421
/Esdescendercyrillic 16#04aa
/Esh 16#01a9
/Esmall 16#f765
/Eta 16#0397
/Etarmenian 16#0538
/Etatonos 16#0389
/Eth 16#00d0
/Ethsmall 16#f7f0
/Etilde 16#1ebc
/Etildebelow 16#1e1a
/Euro 16#20ac
/Ezh 16#01b7
/Ezhcaron 16#01ee
/Ezhreversed 16#01b8
/F 16#0046
/Fcircle 16#24bb
/Fdotaccent 16#1e1e
/Feharmenian 16#0556
/Feicoptic 16#03e4
/Fhook 16#0191
/Fitacyrillic 16#0472
/Fiveroman 16#2164
/Fmonospace 16#ff26
/Fourroman 16#2163
/Fsmall 16#f766
/G 16#0047
/GBsquare 16#3387
/Gacute 16#01f4
/Gamma 16#0393
/Gammaafrican 16#0194
/Gangiacoptic 16#03ea
/Gbreve 16#011e
/Gcaron 16#01e6
/Gcedilla 16#0122
/Gcircle 16#24bc
/Gcircumflex 16#011c
/Gcommaaccent 16#0122
/Gdot 16#0120
/Gdotaccent 16#0120
/Gecyrillic 16#0413
/Ghadarmenian 16#0542
/Ghemiddlehookcyrillic 16#0494
/Ghestrokecyrillic 16#0492
/Gheupturncyrillic 16#0490
/Ghook 16#0193
/Gimarmenian 16#0533
/Gjecyrillic 16#0403
/Gmacron 16#1e20
/Gmonospace 16#ff27
/Grave 16#f6ce
/Gravesmall 16#f760
/Gsmall 16#f767
/Gsmallhook 16#029b
/Gstroke 16#01e4
/H 16#0048
/H18533 16#25cf
/H18543 16#25aa
/H18551 16#25ab
/H22073 16#25a1
/HPsquare 16#33cb
/Haabkhasiancyrillic 16#04a8
/Hadescendercyrillic 16#04b2
/Hardsigncyrillic 16#042a
/Hbar 16#0126
/Hbrevebelow 16#1e2a
/Hcedilla 16#1e28
/Hcircle 16#24bd
/Hcircumflex 16#0124
/Hdieresis 16#1e26
/Hdotaccent 16#1e22
/Hdotbelow 16#1e24
/Hmonospace 16#ff28
/Hoarmenian 16#0540
/Horicoptic 16#03e8
/Hsmall 16#f768
/Hungarumlaut 16#f6cf
/Hungarumlautsmall 16#f6f8
/Hzsquare 16#3390
/I 16#0049
/IAcyrillic 16#042f
/IJ 16#0132
/IUcyrillic 16#042e
/Iacute 16#00cd
/Iacutesmall 16#f7ed
/Ibreve 16#012c
/Icaron 16#01cf
/Icircle 16#24be
/Icircumflex 16#00ce
/Icircumflexsmall 16#f7ee
/Icyrillic 16#0406
/Idblgrave 16#0208
/Idieresis 16#00cf
/Idieresisacute 16#1e2e
/Idieresiscyrillic 16#04e4
/Idieresissmall 16#f7ef
/Idot 16#0130
/Idotaccent 16#0130
/Idotbelow 16#1eca
/Iebrevecyrillic 16#04d6
/Iecyrillic 16#0415
/Ifraktur 16#2111
/Igrave 16#00cc
/Igravesmall 16#f7ec
/Ihookabove 16#1ec8
/Iicyrillic 16#0418
/Iinvertedbreve 16#020a
/Iishortcyrillic 16#0419
/Imacron 16#012a
/Imacroncyrillic 16#04e2
/Imonospace 16#ff29
/Iniarmenian 16#053b
/Iocyrillic 16#0401
/Iogonek 16#012e
/Iota 16#0399
/Iotaafrican 16#0196
/Iotadieresis 16#03aa
/Iotatonos 16#038a
/Ismall 16#f769
/Istroke 16#0197
/Itilde 16#0128
/Itildebelow 16#1e2c
/Izhitsacyrillic 16#0474
/Izhitsadblgravecyrillic 16#0476
/J 16#004a
/Jaarmenian 16#0541
/Jcircle 16#24bf
/Jcircumflex 16#0134
/Jecyrillic 16#0408
/Jheharmenian 16#054b
/Jmonospace 16#ff2a
/Jsmall 16#f76a
/K 16#004b
/KBsquare 16#3385
/KKsquare 16#33cd
/Kabashkircyrillic 16#04a0
/Kacute 16#1e30
/Kacyrillic 16#041a
/Kadescendercyrillic 16#049a
/Kahookcyrillic 16#04c3
/Kappa 16#039a
/Kastrokecyrillic 16#049e
/Kaverticalstrokecyrillic 16#049c
/Kcaron 16#01e8
/Kcedilla 16#0136
/Kcircle 16#24c0
/Kcommaaccent 16#0136
/Kdotbelow 16#1e32
/Keharmenian 16#0554
/Kenarmenian 16#053f
/Khacyrillic 16#0425
/Kheicoptic 16#03e6
/Khook 16#0198
/Kjecyrillic 16#040c
/Klinebelow 16#1e34
/Kmonospace 16#ff2b
/Koppacyrillic 16#0480
/Koppagreek 16#03de
/Ksicyrillic 16#046e
/Ksmall 16#f76b
/L 16#004c
/LJ 16#01c7
/LL 16#f6bf
/Lacute 16#0139
/Lambda 16#039b
/Lcaron 16#013d
/Lcedilla 16#013b
/Lcircle 16#24c1
/Lcircumflexbelow 16#1e3c
/Lcommaaccent 16#013b
/Ldot 16#013f
/Ldotaccent 16#013f
/Ldotbelow 16#1e36
/Ldotbelowmacron 16#1e38
/Liwnarmenian 16#053c
/Lj 16#01c8
/Ljecyrillic 16#0409
/Llinebelow 16#1e3a
/Lmonospace 16#ff2c
/Lslash 16#0141
/Lslashsmall 16#f6f9
/Lsmall 16#f76c
/M 16#004d
/MBsquare 16#3386
/Macron 16#f6d0
/Macronsmall 16#f7af
/Macute 16#1e3e
/Mcircle 16#24c2
/Mdotaccent 16#1e40
/Mdotbelow 16#1e42
/Menarmenian 16#0544
/Mmonospace 16#ff2d
/Msmall 16#f76d
/Mturned 16#019c
/Mu 16#039c
/N 16#004e
/NJ 16#01ca
/Nacute 16#0143
/Ncaron 16#0147
/Ncedilla 16#0145
/Ncircle 16#24c3
/Ncircumflexbelow 16#1e4a
/Ncommaaccent 16#0145
/Ndotaccent 16#1e44
/Ndotbelow 16#1e46
/Nhookleft 16#019d
/Nineroman 16#2168
/Nj 16#01cb
/Njecyrillic 16#040a
/Nlinebelow 16#1e48
/Nmonospace 16#ff2e
/Nowarmenian 16#0546
/Nsmall 16#f76e
/Ntilde 16#00d1
/Ntildesmall 16#f7f1
/Nu 16#039d
/O 16#004f
/OE 16#0152
/OEsmall 16#f6fa
/Oacute 16#00d3
/Oacutesmall 16#f7f3
/Obarredcyrillic 16#04e8
/Obarreddieresiscyrillic 16#04ea
/Obreve 16#014e
/Ocaron 16#01d1
/Ocenteredtilde 16#019f
/Ocircle 16#24c4
/Ocircumflex 16#00d4
/Ocircumflexacute 16#1ed0
/Ocircumflexdotbelow 16#1ed8
/Ocircumflexgrave 16#1ed2
/Ocircumflexhookabove 16#1ed4
/Ocircumflexsmall 16#f7f4
/Ocircumflextilde 16#1ed6
/Ocyrillic 16#041e
/Odblacute 16#0150
/Odblgrave 16#020c
/Odieresis 16#00d6
/Odieresiscyrillic 16#04e6
/Odieresissmall 16#f7f6
/Odotbelow 16#1ecc
/Ogoneksmall 16#f6fb
/Ograve 16#00d2
/Ogravesmall 16#f7f2
/Oharmenian 16#0555
/Ohm 16#2126
/Ohookabove 16#1ece
/Ohorn 16#01a0
/Ohornacute 16#1eda
/Ohorndotbelow 16#1ee2
/Ohorngrave 16#1edc
/Ohornhookabove 16#1ede
/Ohorntilde 16#1ee0
/Ohungarumlaut 16#0150
/Oi 16#01a2
/Oinvertedbreve 16#020e
/Omacron 16#014c
/Omacronacute 16#1e52
/Omacrongrave 16#1e50
/Omega 16#2126
/Omegacyrillic 16#0460
/Omegagreek 16#03a9
/Omegaroundcyrillic 16#047a
/Omegatitlocyrillic 16#047c
/Omegatonos 16#038f
/Omicron 16#039f
/Omicrontonos 16#038c
/Omonospace 16#ff2f
/Oneroman 16#2160
/Oogonek 16#01ea
/Oogonekmacron 16#01ec
/Oopen 16#0186
/Oslash 16#00d8
/Oslashacute 16#01fe
/Oslashsmall 16#f7f8
/Osmall 16#f76f
/Ostrokeacute 16#01fe
/Otcyrillic 16#047e
/Otilde 16#00d5
/Otildeacute 16#1e4c
/Otildedieresis 16#1e4e
/Otildesmall 16#f7f5
/P 16#0050
/Pacute 16#1e54
/Pcircle 16#24c5
/Pdotaccent 16#1e56
/Pecyrillic 16#041f
/Peharmenian 16#054a
/Pemiddlehookcyrillic 16#04a6
/Phi 16#03a6
/Phook 16#01a4
/Pi 16#03a0
/Piwrarmenian 16#0553
/Pmonospace 16#ff30
/Psi 16#03a8
/Psicyrillic 16#0470
/Psmall 16#f770
/Q 16#0051
/Qcircle 16#24c6
/Qmonospace 16#ff31
/Qsmall 16#f771
/R 16#0052
/Raarmenian 16#054c
/Racute 16#0154
/Rcaron 16#0158
/Rcedilla 16#0156
/Rcircle 16#24c7
/Rcommaaccent 16#0156
/Rdblgrave 16#0210
/Rdotaccent 16#1e58
/Rdotbelow 16#1e5a
/Rdotbelowmacron 16#1e5c
/Reharmenian 16#0550
/Rfraktur 16#211c
/Rho 16#03a1
/Ringsmall 16#f6fc
/Rinvertedbreve 16#0212
/Rlinebelow 16#1e5e
/Rmonospace 16#ff32
/Rsmall 16#f772
/Rsmallinverted 16#0281
/Rsmallinvertedsuperior 16#02b6
/S 16#0053
/SF010000 16#250c
/SF020000 16#2514
/SF030000 16#2510
/SF040000 16#2518
/SF050000 16#253c
/SF060000 16#252c
/SF070000 16#2534
/SF080000 16#251c
/SF090000 16#2524
/SF100000 16#2500
/SF110000 16#2502
/SF190000 16#2561
/SF200000 16#2562
/SF210000 16#2556
/SF220000 16#2555
/SF230000 16#2563
/SF240000 16#2551
/SF250000 16#2557
/SF260000 16#255d
/SF270000 16#255c
/SF280000 16#255b
/SF360000 16#255e
/SF370000 16#255f
/SF380000 16#255a
/SF390000 16#2554
/SF400000 16#2569
/SF410000 16#2566
/SF420000 16#2560
/SF430000 16#2550
/SF440000 16#256c
/SF450000 16#2567
/SF460000 16#2568
/SF470000 16#2564
/SF480000 16#2565
/SF490000 16#2559
/SF500000 16#2558
/SF510000 16#2552
/SF520000 16#2553
/SF530000 16#256b
/SF540000 16#256a
/Sacute 16#015a
/Sacutedotaccent 16#1e64
/Sampigreek 16#03e0
/Scaron 16#0160
/Scarondotaccent 16#1e66
/Scaronsmall 16#f6fd
/Scedilla 16#015e
/Schwa 16#018f
/Schwacyrillic 16#04d8
/Schwadieresiscyrillic 16#04da
/Scircle 16#24c8
/Scircumflex 16#015c
/Scommaaccent 16#0218
/Sdotaccent 16#1e60
/Sdotbelow 16#1e62
/Sdotbelowdotaccent 16#1e68
/Seharmenian 16#054d
/Sevenroman 16#2166
/Shaarmenian 16#0547
/Shacyrillic 16#0428
/Shchacyrillic 16#0429
/Sheicoptic 16#03e2
/Shhacyrillic 16#04ba
/Shimacoptic 16#03ec
/Sigma 16#03a3
/Sixroman 16#2165
/Smonospace 16#ff33
/Softsigncyrillic 16#042c
/Ssmall 16#f773
/Stigmagreek 16#03da
/T 16#0054
/Tau 16#03a4
/Tbar 16#0166
/Tcaron 16#0164
/Tcedilla 16#0162
/Tcircle 16#24c9
/Tcircumflexbelow 16#1e70
/Tcommaaccent 16#0162
/Tdotaccent 16#1e6a
/Tdotbelow 16#1e6c
/Tecyrillic 16#0422
/Tedescendercyrillic 16#04ac
/Tenroman 16#2169
/Tetsecyrillic 16#04b4
/Theta 16#0398
/Thook 16#01ac
/Thorn 16#00de
/Thornsmall 16#f7fe
/Threeroman 16#2162
/Tildesmall 16#f6fe
/Tiwnarmenian 16#054f
/Tlinebelow 16#1e6e
/Tmonospace 16#ff34
/Toarmenian 16#0539
/Tonefive 16#01bc
/Tonesix 16#0184
/Tonetwo 16#01a7
/Tretroflexhook 16#01ae
/Tsecyrillic 16#0426
/Tshecyrillic 16#040b
/Tsmall 16#f774
/Twelveroman 16#216b
/Tworoman 16#2161
/U 16#0055
/Uacute 16#00da
/Uacutesmall 16#f7fa
/Ubreve 16#016c
/Ucaron 16#01d3
/Ucircle 16#24ca
/Ucircumflex 16#00db
/Ucircumflexbelow 16#1e76
/Ucircumflexsmall 16#f7fb
/Ucyrillic 16#0423
/Udblacute 16#0170
/Udblgrave 16#0214
/Udieresis 16#00dc
/Udieresisacute 16#01d7
/Udieresisbelow 16#1e72
/Udieresiscaron 16#01d9
/Udieresiscyrillic 16#04f0
/Udieresisgrave 16#01db
/Udieresismacron 16#01d5
/Udieresissmall 16#f7fc
/Udotbelow 16#1ee4
/Ugrave 16#00d9
/Ugravesmall 16#f7f9
/Uhookabove 16#1ee6
/Uhorn 16#01af
/Uhornacute 16#1ee8
/Uhorndotbelow 16#1ef0
/Uhorngrave 16#1eea
/Uhornhookabove 16#1eec
/Uhorntilde 16#1eee
/Uhungarumlaut 16#0170
/Uhungarumlautcyrillic 16#04f2
/Uinvertedbreve 16#0216
/Ukcyrillic 16#0478
/Umacron 16#016a
/Umacroncyrillic 16#04ee
/Umacrondieresis 16#1e7a
/Umonospace 16#ff35
/Uogonek 16#0172
/Upsilon 16#03a5
/Upsilon1 16#03d2
/Upsilonacutehooksymbolgreek 16#03d3
/Upsilonafrican 16#01b1
/Upsilondieresis 16#03ab
/Upsilondieresishooksymbolgreek 16#03d4
/Upsilonhooksymbol 16#03d2
/Upsilontonos 16#038e
/Uring 16#016e
/Ushortcyrillic 16#040e
/Usmall 16#f775
/Ustraightcyrillic 16#04ae
/Ustraightstrokecyrillic 16#04b0
/Utilde 16#0168
/Utildeacute 16#1e78
/Utildebelow 16#1e74
/V 16#0056
/Vcircle 16#24cb
/Vdotbelow 16#1e7e
/Vecyrillic 16#0412
/Vewarmenian 16#054e
/Vhook 16#01b2
/Vmonospace 16#ff36
/Voarmenian 16#0548
/Vsmall 16#f776
/Vtilde 16#1e7c
/W 16#0057
/Wacute 16#1e82
/Wcircle 16#24cc
/Wcircumflex 16#0174
/Wdieresis 16#1e84
/Wdotaccent 16#1e86
/Wdotbelow 16#1e88
/Wgrave 16#1e80
/Wmonospace 16#ff37
/Wsmall 16#f777
/X 16#0058
/Xcircle 16#24cd
/Xdieresis 16#1e8c
/Xdotaccent 16#1e8a
/Xeharmenian 16#053d
/Xi 16#039e
/Xmonospace 16#ff38
/Xsmall 16#f778
/Y 16#0059
/Yacute 16#00dd
/Yacutesmall 16#f7fd
/Yatcyrillic 16#0462
/Ycircle 16#24ce
/Ycircumflex 16#0176
/Ydieresis 16#0178
/Ydieresissmall 16#f7ff
/Ydotaccent 16#1e8e
/Ydotbelow 16#1ef4
/Yericyrillic 16#042b
/Yerudieresiscyrillic 16#04f8
/Ygrave 16#1ef2
/Yhook 16#01b3
/Yhookabove 16#1ef6
/Yiarmenian 16#0545
/Yicyrillic 16#0407
/Yiwnarmenian 16#0552
/Ymonospace 16#ff39
/Ysmall 16#f779
/Ytilde 16#1ef8
/Yusbigcyrillic 16#046a
/Yusbigiotifiedcyrillic 16#046c
/Yuslittlecyrillic 16#0466
/Yuslittleiotifiedcyrillic 16#0468
/Z 16#005a
/Zaarmenian 16#0536
/Zacute 16#0179
/Zcaron 16#017d
/Zcaronsmall 16#f6ff
/Zcircle 16#24cf
/Zcircumflex 16#1e90
/Zdot 16#017b
/Zdotaccent 16#017b
/Zdotbelow 16#1e92
/Zecyrillic 16#0417
/Zedescendercyrillic 16#0498
/Zedieresiscyrillic 16#04de
/Zeta 16#0396
/Zhearmenian 16#053a
/Zhebrevecyrillic 16#04c1
/Zhecyrillic 16#0416
/Zhedescendercyrillic 16#0496
/Zhedieresiscyrillic 16#04dc
/Zlinebelow 16#1e94
/Zmonospace 16#ff3a
/Zsmall 16#f77a
/Zstroke 16#01b5
/a 16#0061
/aabengali 16#0986
/aacute 16#00e1
/aadeva 16#0906
/aagujarati 16#0a86
/aagurmukhi 16#0a06
/aamatragurmukhi 16#0a3e
/aarusquare 16#3303
/aavowelsignbengali 16#09be
/aavowelsigndeva 16#093e
/aavowelsigngujarati 16#0abe
/abbreviationmarkarmenian 16#055f
/abbreviationsigndeva 16#0970
/abengali 16#0985
/abopomofo 16#311a
/abreve 16#0103
/abreveacute 16#1eaf
/abrevecyrillic 16#04d1
/abrevedotbelow 16#1eb7
/abrevegrave 16#1eb1
/abrevehookabove 16#1eb3
/abrevetilde 16#1eb5
/acaron 16#01ce
/acircle 16#24d0
/acircumflex 16#00e2
/acircumflexacute 16#1ea5
/acircumflexdotbelow 16#1ead
/acircumflexgrave 16#1ea7
/acircumflexhookabove 16#1ea9
/acircumflextilde 16#1eab
/acute 16#00b4
/acutebelowcmb 16#0317
/acutecmb 16#0301
/acutecomb 16#0301
/acutedeva 16#0954
/acutelowmod 16#02cf
/acutetonecmb 16#0341
/acyrillic 16#0430
/adblgrave 16#0201
/addakgurmukhi 16#0a71
/adeva 16#0905
/adieresis 16#00e4
/adieresiscyrillic 16#04d3
/adieresismacron 16#01df
/adotbelow 16#1ea1
/adotmacron 16#01e1
/ae 16#00e6
/aeacute 16#01fd
/aekorean 16#3150
/aemacron 16#01e3
/afii00208 16#2015
/afii08941 16#20a4
/afii10017 16#0410
/afii10018 16#0411
/afii10019 16#0412
/afii10020 16#0413
/afii10021 16#0414
/afii10022 16#0415
/afii10023 16#0401
/afii10024 16#0416
/afii10025 16#0417
/afii10026 16#0418
/afii10027 16#0419
/afii10028 16#041a
/afii10029 16#041b
/afii10030 16#041c
/afii10031 16#041d
/afii10032 16#041e
/afii10033 16#041f
/afii10034 16#0420
/afii10035 16#0421
/afii10036 16#0422
/afii10037 16#0423
/afii10038 16#0424
/afii10039 16#0425
/afii10040 16#0426
/afii10041 16#0427
/afii10042 16#0428
/afii10043 16#0429
/afii10044 16#042a
/afii10045 16#042b
/afii10046 16#042c
/afii10047 16#042d
/afii10048 16#042e
/afii10049 16#042f
/afii10050 16#0490
/afii10051 16#0402
/afii10052 16#0403
/afii10053 16#0404
/afii10054 16#0405
/afii10055 16#0406
/afii10056 16#0407
/afii10057 16#0408
/afii10058 16#0409
/afii10059 16#040a
/afii10060 16#040b
/afii10061 16#040c
/afii10062 16#040e
/afii10063 16#f6c4
/afii10064 16#f6c5
/afii10065 16#0430
/afii10066 16#0431
/afii10067 16#0432
/afii10068 16#0433
/afii10069 16#0434
/afii10070 16#0435
/afii10071 16#0451
/afii10072 16#0436
/afii10073 16#0437
/afii10074 16#0438
/afii10075 16#0439
/afii10076 16#043a
/afii10077 16#043b
/afii10078 16#043c
/afii10079 16#043d
/afii10080 16#043e
/afii10081 16#043f
/afii10082 16#0440
/afii10083 16#0441
/afii10084 16#0442
/afii10085 16#0443
/afii10086 16#0444
/afii10087 16#0445
/afii10088 16#0446
/afii10089 16#0447
/afii10090 16#0448
/afii10091 16#0449
/afii10092 16#044a
/afii10093 16#044b
/afii10094 16#044c
/afii10095 16#044d
/afii10096 16#044e
/afii10097 16#044f
/afii10098 16#0491
/afii10099 16#0452
/afii10100 16#0453
/afii10101 16#0454
/afii10102 16#0455
/afii10103 16#0456
/afii10104 16#0457
/afii10105 16#0458
/afii10106 16#0459
/afii10107 16#045a
/afii10108 16#045b
/afii10109 16#045c
/afii10110 16#045e
/afii10145 16#040f
/afii10146 16#0462
/afii10147 16#0472
/afii10148 16#0474
/afii10192 16#f6c6
/afii10193 16#045f
/afii10194 16#0463
/afii10195 16#0473
/afii10196 16#0475
/afii10831 16#f6c7
/afii10832 16#f6c8
/afii10846 16#04d9
/afii299 16#200e
/afii300 16#200f
/afii301 16#200d
/afii57381 16#066a
/afii57388 16#060c
/afii57392 16#0660
/afii57393 16#0661
/afii57394 16#0662
/afii57395 16#0663
/afii57396 16#0664
/afii57397 16#0665
/afii57398 16#0666
/afii57399 16#0667
/afii57400 16#0668
/afii57401 16#0669
/afii57403 16#061b
/afii57407 16#061f
/afii57409 16#0621
/afii57410 16#0622
/afii57411 16#0623
/afii57412 16#0624
/afii57413 16#0625
/afii57414 16#0626
/afii57415 16#0627
/afii57416 16#0628
/afii57417 16#0629
/afii57418 16#062a
/afii57419 16#062b
/afii57420 16#062c
/afii57421 16#062d
/afii57422 16#062e
/afii57423 16#062f
/afii57424 16#0630
/afii57425 16#0631
/afii57426 16#0632
/afii57427 16#0633
/afii57428 16#0634
/afii57429 16#0635
/afii57430 16#0636
/afii57431 16#0637
/afii57432 16#0638
/afii57433 16#0639
/afii57434 16#063a
/afii57440 16#0640
/afii57441 16#0641
/afii57442 16#0642
/afii57443 16#0643
/afii57444 16#0644
/afii57445 16#0645
/afii57446 16#0646
/afii57448 16#0648
/afii57449 16#0649
/afii57450 16#064a
/afii57451 16#064b
/afii57452 16#064c
/afii57453 16#064d
/afii57454 16#064e
/afii57455 16#064f
/afii57456 16#0650
/afii57457 16#0651
/afii57458 16#0652
/afii57470 16#0647
/afii57505 16#06a4
/afii57506 16#067e
/afii57507 16#0686
/afii57508 16#0698
/afii57509 16#06af
/afii57511 16#0679
/afii57512 16#0688
/afii57513 16#0691
/afii57514 16#06ba
/afii57519 16#06d2
/afii57534 16#06d5
/afii57636 16#20aa
/afii57645 16#05be
/afii57658 16#05c3
/afii57664 16#05d0
/afii57665 16#05d1
/afii57666 16#05d2
/afii57667 16#05d3
/afii57668 16#05d4
/afii57669 16#05d5
/afii57670 16#05d6
/afii57671 16#05d7
/afii57672 16#05d8
/afii57673 16#05d9
/afii57674 16#05da
/afii57675 16#05db
/afii57676 16#05dc
/afii57677 16#05dd
/afii57678 16#05de
/afii57679 16#05df
/afii57680 16#05e0
/afii57681 16#05e1
/afii57682 16#05e2
/afii57683 16#05e3
/afii57684 16#05e4
/afii57685 16#05e5
/afii57686 16#05e6
/afii57687 16#05e7
/afii57688 16#05e8
/afii57689 16#05e9
/afii57690 16#05ea
/afii57694 16#fb2a
/afii57695 16#fb2b
/afii57700 16#fb4b
/afii57705 16#fb1f
/afii57716 16#05f0
/afii57717 16#05f1
/afii57718 16#05f2
/afii57723 16#fb35
/afii57793 16#05b4
/afii57794 16#05b5
/afii57795 16#05b6
/afii57796 16#05bb
/afii57797 16#05b8
/afii57798 16#05b7
/afii57799 16#05b0
/afii57800 16#05b2
/afii57801 16#05b1
/afii57802 16#05b3
/afii57803 16#05c2
/afii57804 16#05c1
/afii57806 16#05b9
/afii57807 16#05bc
/afii57839 16#05bd
/afii57841 16#05bf
/afii57842 16#05c0
/afii57929 16#02bc
/afii61248 16#2105
/afii61289 16#2113
/afii61352 16#2116
/afii61573 16#202c
/afii61574 16#202d
/afii61575 16#202e
/afii61664 16#200c
/afii63167 16#066d
/afii64937 16#02bd
/agrave 16#00e0
/agujarati 16#0a85
/agurmukhi 16#0a05
/ahiragana 16#3042
/ahookabove 16#1ea3
/aibengali 16#0990
/aibopomofo 16#311e
/aideva 16#0910
/aiecyrillic 16#04d5
/aigujarati 16#0a90
/aigurmukhi 16#0a10
/aimatragurmukhi 16#0a48
/ainarabic 16#0639
/ainfinalarabic 16#feca
/aininitialarabic 16#fecb
/ainmedialarabic 16#fecc
/ainvertedbreve 16#0203
/aivowelsignbengali 16#09c8
/aivowelsigndeva 16#0948
/aivowelsigngujarati 16#0ac8
/akatakana 16#30a2
/akatakanahalfwidth 16#ff71
/akorean 16#314f
/alef 16#05d0
/alefarabic 16#0627
/alefdageshhebrew 16#fb30
/aleffinalarabic 16#fe8e
/alefhamzaabovearabic 16#0623
/alefhamzaabovefinalarabic 16#fe84
/alefhamzabelowarabic 16#0625
/alefhamzabelowfinalarabic 16#fe88
/alefhebrew 16#05d0
/aleflamedhebrew 16#fb4f
/alefmaddaabovearabic 16#0622
/alefmaddaabovefinalarabic 16#fe82
/alefmaksuraarabic 16#0649
/alefmaksurafinalarabic 16#fef0
/alefmaksurainitialarabic 16#fef3
/alefmaksuramedialarabic 16#fef4
/alefpatahhebrew 16#fb2e
/alefqamatshebrew 16#fb2f
/aleph 16#2135
/allequal 16#224c
/alpha 16#03b1
/alphatonos 16#03ac
/amacron 16#0101
/amonospace 16#ff41
/ampersand 16#0026
/ampersandmonospace 16#ff06
/ampersandsmall 16#f726
/amsquare 16#33c2
/anbopomofo 16#3122
/angbopomofo 16#3124
/angkhankhuthai 16#0e5a
/angle 16#2220
/anglebracketleft 16#3008
/anglebracketleftvertical 16#fe3f
/anglebracketright 16#3009
/anglebracketrightvertical 16#fe40
/angleleft 16#2329
/angleright 16#232a
/angstrom 16#212b
/anoteleia 16#0387
/anudattadeva 16#0952
/anusvarabengali 16#0982
/anusvaradeva 16#0902
/anusvaragujarati 16#0a82
/aogonek 16#0105
/apaatosquare 16#3300
/aparen 16#249c
/apostrophearmenian 16#055a
/apostrophemod 16#02bc
/apple 16#f8ff
/approaches 16#2250
/approxequal 16#2248
/approxequalorimage 16#2252
/approximatelyequal 16#2245
/araeaekorean 16#318e
/araeakorean 16#318d
/arc 16#2312
/arighthalfring 16#1e9a
/aring 16#00e5
/aringacute 16#01fb
/aringbelow 16#1e01
/arrowboth 16#2194
/arrowdashdown 16#21e3
/arrowdashleft 16#21e0
/arrowdashright 16#21e2
/arrowdashup 16#21e1
/arrowdblboth 16#21d4
/arrowdbldown 16#21d3
/arrowdblleft 16#21d0
/arrowdblright 16#21d2
/arrowdblup 16#21d1
/arrowdown 16#2193
/arrowdownleft 16#2199
/arrowdownright 16#2198
/arrowdownwhite 16#21e9
/arrowheaddownmod 16#02c5
/arrowheadleftmod 16#02c2
/arrowheadrightmod 16#02c3
/arrowheadupmod 16#02c4
/arrowhorizex 16#f8e7
/arrowleft 16#2190
/arrowleftdbl 16#21d0
/arrowleftdblstroke 16#21cd
/arrowleftoverright 16#21c6
/arrowleftwhite 16#21e6
/arrowright 16#2192
/arrowrightdblstroke 16#21cf
/arrowrightheavy 16#279e
/arrowrightoverleft 16#21c4
/arrowrightwhite 16#21e8
/arrowtableft 16#21e4
/arrowtabright 16#21e5
/arrowup 16#2191
/arrowupdn 16#2195
/arrowupdnbse 16#21a8
/arrowupdownbase 16#21a8
/arrowupleft 16#2196
/arrowupleftofdown 16#21c5
/arrowupright 16#2197
/arrowupwhite 16#21e7
/arrowvertex 16#f8e6
/asciicircum 16#005e
/asciicircummonospace 16#ff3e
/asciitilde 16#007e
/asciitildemonospace 16#ff5e
/ascript 16#0251
/ascriptturned 16#0252
/asmallhiragana 16#3041
/asmallkatakana 16#30a1
/asmallkatakanahalfwidth 16#ff67
/asterisk 16#002a
/asteriskaltonearabic 16#066d
/asteriskarabic 16#066d
/asteriskmath 16#2217
/asteriskmonospace 16#ff0a
/asterisksmall 16#fe61
/asterism 16#2042
/asuperior 16#f6e9
/asymptoticallyequal 16#2243
/at 16#0040
/atilde 16#00e3
/atmonospace 16#ff20
/atsmall 16#fe6b
/aturned 16#0250
/aubengali 16#0994
/aubopomofo 16#3120
/audeva 16#0914
/augujarati 16#0a94
/augurmukhi 16#0a14
/aulengthmarkbengali 16#09d7
/aumatragurmukhi 16#0a4c
/auvowelsignbengali 16#09cc
/auvowelsigndeva 16#094c
/auvowelsigngujarati 16#0acc
/avagrahadeva 16#093d
/aybarmenian 16#0561
/ayin 16#05e2
/ayinaltonehebrew 16#fb20
/ayinhebrew 16#05e2
/b 16#0062
/babengali 16#09ac
/backslash 16#005c
/backslashmonospace 16#ff3c
/badeva 16#092c
/bagujarati 16#0aac
/bagurmukhi 16#0a2c
/bahiragana 16#3070
/bahtthai 16#0e3f
/bakatakana 16#30d0
/bar 16#007c
/barmonospace 16#ff5c
/bbopomofo 16#3105
/bcircle 16#24d1
/bdotaccent 16#1e03
/bdotbelow 16#1e05
/beamedsixteenthnotes 16#266c
/because 16#2235
/becyrillic 16#0431
/beharabic 16#0628
/behfinalarabic 16#fe90
/behinitialarabic 16#fe91
/behiragana 16#3079
/behmedialarabic 16#fe92
/behmeeminitialarabic 16#fc9f
/behmeemisolatedarabic 16#fc08
/behnoonfinalarabic 16#fc6d
/bekatakana 16#30d9
/benarmenian 16#0562
/bet 16#05d1
/beta 16#03b2
/betasymbolgreek 16#03d0
/betdagesh 16#fb31
/betdageshhebrew 16#fb31
/bethebrew 16#05d1
/betrafehebrew 16#fb4c
/bhabengali 16#09ad
/bhadeva 16#092d
/bhagujarati 16#0aad
/bhagurmukhi 16#0a2d
/bhook 16#0253
/bihiragana 16#3073
/bikatakana 16#30d3
/bilabialclick 16#0298
/bindigurmukhi 16#0a02
/birusquare 16#3331
/blackcircle 16#25cf
/blackdiamond 16#25c6
/blackdownpointingtriangle 16#25bc
/blackleftpointingpointer 16#25c4
/blackleftpointingtriangle 16#25c0
/blacklenticularbracketleft 16#3010
/blacklenticularbracketleftvertical 16#fe3b
/blacklenticularbracketright 16#3011
/blacklenticularbracketrightvertical 16#fe3c
/blacklowerlefttriangle 16#25e3
/blacklowerrighttriangle 16#25e2
/blackrectangle 16#25ac
/blackrightpointingpointer 16#25ba
/blackrightpointingtriangle 16#25b6
/blacksmallsquare 16#25aa
/blacksmilingface 16#263b
/blacksquare 16#25a0
/blackstar 16#2605
/blackupperlefttriangle 16#25e4
/blackupperrighttriangle 16#25e5
/blackuppointingsmalltriangle 16#25b4
/blackuppointingtriangle 16#25b2
/blank 16#2423
/blinebelow 16#1e07
/block 16#2588
/bmonospace 16#ff42
/bobaimaithai 16#0e1a
/bohiragana 16#307c
/bokatakana 16#30dc
/bparen 16#249d
/bqsquare 16#33c3
/braceex 16#f8f4
/braceleft 16#007b
/braceleftbt 16#f8f3
/braceleftmid 16#f8f2
/braceleftmonospace 16#ff5b
/braceleftsmall 16#fe5b
/bracelefttp 16#f8f1
/braceleftvertical 16#fe37
/braceright 16#007d
/bracerightbt 16#f8fe
/bracerightmid 16#f8fd
/bracerightmonospace 16#ff5d
/bracerightsmall 16#fe5c
/bracerighttp 16#f8fc
/bracerightvertical 16#fe38
/bracketleft 16#005b
/bracketleftbt 16#f8f0
/bracketleftex 16#f8ef
/bracketleftmonospace 16#ff3b
/bracketlefttp 16#f8ee
/bracketright 16#005d
/bracketrightbt 16#f8fb
/bracketrightex 16#f8fa
/bracketrightmonospace 16#ff3d
/bracketrighttp 16#f8f9
/breve 16#02d8
/brevebelowcmb 16#032e
/brevecmb 16#0306
/breveinvertedbelowcmb 16#032f
/breveinvertedcmb 16#0311
/breveinverteddoublecmb 16#0361
/bridgebelowcmb 16#032a
/bridgeinvertedbelowcmb 16#033a
/brokenbar 16#00a6
/bstroke 16#0180
/bsuperior 16#f6ea
/btopbar 16#0183
/buhiragana 16#3076
/bukatakana 16#30d6
/bullet 16#2022
/bulletinverse 16#25d8
/bulletoperator 16#2219
/bullseye 16#25ce
/c 16#0063
/caarmenian 16#056e
/cabengali 16#099a
/cacute 16#0107
/cadeva 16#091a
/cagujarati 16#0a9a
/cagurmukhi 16#0a1a
/calsquare 16#3388
/candrabindubengali 16#0981
/candrabinducmb 16#0310
/candrabindudeva 16#0901
/candrabindugujarati 16#0a81
/capslock 16#21ea
/careof 16#2105
/caron 16#02c7
/caronbelowcmb 16#032c
/caroncmb 16#030c
/carriagereturn 16#21b5
/cbopomofo 16#3118
/ccaron 16#010d
/ccedilla 16#00e7
/ccedillaacute 16#1e09
/ccircle 16#24d2
/ccircumflex 16#0109
/ccurl 16#0255
/cdot 16#010b
/cdotaccent 16#010b
/cdsquare 16#33c5
/cedilla 16#00b8
/cedillacmb 16#0327
/cent 16#00a2
/centigrade 16#2103
/centinferior 16#f6df
/centmonospace 16#ffe0
/centoldstyle 16#f7a2
/centsuperior 16#f6e0
/chaarmenian 16#0579
/chabengali 16#099b
/chadeva 16#091b
/chagujarati 16#0a9b
/chagurmukhi 16#0a1b
/chbopomofo 16#3114
/cheabkhasiancyrillic 16#04bd
/checkmark 16#2713
/checyrillic 16#0447
/chedescenderabkhasiancyrillic 16#04bf
/chedescendercyrillic 16#04b7
/chedieresiscyrillic 16#04f5
/cheharmenian 16#0573
/chekhakassiancyrillic 16#04cc
/cheverticalstrokecyrillic 16#04b9
/chi 16#03c7
/chieuchacirclekorean 16#3277
/chieuchaparenkorean 16#3217
/chieuchcirclekorean 16#3269
/chieuchkorean 16#314a
/chieuchparenkorean 16#3209
/chochangthai 16#0e0a
/chochanthai 16#0e08
/chochingthai 16#0e09
/chochoethai 16#0e0c
/chook 16#0188
/cieucacirclekorean 16#3276
/cieucaparenkorean 16#3216
/cieuccirclekorean 16#3268
/cieuckorean 16#3148
/cieucparenkorean 16#3208
/cieucuparenkorean 16#321c
/circle 16#25cb
/circlemultiply 16#2297
/circleot 16#2299
/circleplus 16#2295
/circlepostalmark 16#3036
/circlewithlefthalfblack 16#25d0
/circlewithrighthalfblack 16#25d1
/circumflex 16#02c6
/circumflexbelowcmb 16#032d
/circumflexcmb 16#0302
/clear 16#2327
/clickalveolar 16#01c2
/clickdental 16#01c0
/clicklateral 16#01c1
/clickretroflex 16#01c3
/club 16#2663
/clubsuitblack 16#2663
/clubsuitwhite 16#2667
/cmcubedsquare 16#33a4
/cmonospace 16#ff43
/cmsquaredsquare 16#33a0
/coarmenian 16#0581
/colon 16#003a
/colonmonetary 16#20a1
/colonmonospace 16#ff1a
/colonsign 16#20a1
/colonsmall 16#fe55
/colontriangularhalfmod 16#02d1
/colontriangularmod 16#02d0
/comma 16#002c
/commaabovecmb 16#0313
/commaaboverightcmb 16#0315
/commaaccent 16#f6c3
/commaarabic 16#060c
/commaarmenian 16#055d
/commainferior 16#f6e1
/commamonospace 16#ff0c
/commareversedabovecmb 16#0314
/commareversedmod 16#02bd
/commasmall 16#fe50
/commasuperior 16#f6e2
/commaturnedabovecmb 16#0312
/commaturnedmod 16#02bb
/compass 16#263c
/congruent 16#2245
/contourintegral 16#222e
/control 16#2303
/controlACK 16#0006
/controlBEL 16#0007
/controlBS 16#0008
/controlCAN 16#0018
/controlCR 16#000d
/controlDC1 16#0011
/controlDC2 16#0012
/controlDC3 16#0013
/controlDC4 16#0014
/controlDEL 16#007f
/controlDLE 16#0010
/controlEM 16#0019
/controlENQ 16#0005
/controlEOT 16#0004
/controlESC 16#001b
/controlETB 16#0017
/controlETX 16#0003
/controlFF 16#000c
/controlFS 16#001c
/controlGS 16#001d
/controlHT 16#0009
/controlLF 16#000a
/controlNAK 16#0015
/controlRS 16#001e
/controlSI 16#000f
/controlSO 16#000e
/controlSOT 16#0002
/controlSTX 16#0001
/controlSUB 16#001a
/controlSYN 16#0016
/controlUS 16#001f
/controlVT 16#000b
/copyright 16#00a9
/copyrightsans 16#f8e9
/copyrightserif 16#f6d9
/cornerbracketleft 16#300c
/cornerbracketlefthalfwidth 16#ff62
/cornerbracketleftvertical 16#fe41
/cornerbracketright 16#300d
/cornerbracketrighthalfwidth 16#ff63
/cornerbracketrightvertical 16#fe42
/corporationsquare 16#337f
/cosquare 16#33c7
/coverkgsquare 16#33c6
/cparen 16#249e
/cruzeiro 16#20a2
/cstretched 16#0297
/curlyand 16#22cf
/curlyor 16#22ce
/currency 16#00a4
/cyrBreve 16#f6d1
/cyrFlex 16#f6d2
/cyrbreve 16#f6d4
/cyrflex 16#f6d5
/d 16#0064
/daarmenian 16#0564
/dabengali 16#09a6
/dadarabic 16#0636
/dadeva 16#0926
/dadfinalarabic 16#febe
/dadinitialarabic 16#febf
/dadmedialarabic 16#fec0
/dagesh 16#05bc
/dageshhebrew 16#05bc
/dagger 16#2020
/daggerdbl 16#2021
/dagujarati 16#0aa6
/dagurmukhi 16#0a26
/dahiragana 16#3060
/dakatakana 16#30c0
/dalarabic 16#062f
/dalet 16#05d3
/daletdagesh 16#fb33
/daletdageshhebrew 16#fb33
/dalethebrew 16#05d3
/dalfinalarabic 16#feaa
/dammaarabic 16#064f
/dammalowarabic 16#064f
/dammatanaltonearabic 16#064c
/dammatanarabic 16#064c
/danda 16#0964
/dargahebrew 16#05a7
/dargalefthebrew 16#05a7
/dasiapneumatacyrilliccmb 16#0485
/dblGrave 16#f6d3
/dblanglebracketleft 16#300a
/dblanglebracketleftvertical 16#fe3d
/dblanglebracketright 16#300b
/dblanglebracketrightvertical 16#fe3e
/dblarchinvertedbelowcmb 16#032b
/dblarrowleft 16#21d4
/dblarrowright 16#21d2
/dbldanda 16#0965
/dblgrave 16#f6d6
/dblgravecmb 16#030f
/dblintegral 16#222c
/dbllowline 16#2017
/dbllowlinecmb 16#0333
/dbloverlinecmb 16#033f
/dblprimemod 16#02ba
/dblverticalbar 16#2016
/dblverticallineabovecmb 16#030e
/dbopomofo 16#3109
/dbsquare 16#33c8
/dcaron 16#010f
/dcedilla 16#1e11
/dcircle 16#24d3
/dcircumflexbelow 16#1e13
/dcroat 16#0111
/ddabengali 16#09a1
/ddadeva 16#0921
/ddagujarati 16#0aa1
/ddagurmukhi 16#0a21
/ddalarabic 16#0688
/ddalfinalarabic 16#fb89
/dddhadeva 16#095c
/ddhabengali 16#09a2
/ddhadeva 16#0922
/ddhagujarati 16#0aa2
/ddhagurmukhi 16#0a22
/ddotaccent 16#1e0b
/ddotbelow 16#1e0d
/decimalseparatorarabic 16#066b
/decimalseparatorpersian 16#066b
/decyrillic 16#0434
/degree 16#00b0
/dehihebrew 16#05ad
/dehiragana 16#3067
/deicoptic 16#03ef
/dekatakana 16#30c7
/deleteleft 16#232b
/deleteright 16#2326
/delta 16#03b4
/deltaturned 16#018d
/denominatorminusonenumeratorbengali 16#09f8
/dezh 16#02a4
/dhabengali 16#09a7
/dhadeva 16#0927
/dhagujarati 16#0aa7
/dhagurmukhi 16#0a27
/dhook 16#0257
/dialytikatonos 16#0385
/dialytikatonoscmb 16#0344
/diamond 16#2666
/diamondsuitwhite 16#2662
/dieresis 16#00a8
/dieresisacute 16#f6d7
/dieresisbelowcmb 16#0324
/dieresiscmb 16#0308
/dieresisgrave 16#f6d8
/dieresistonos 16#0385
/dihiragana 16#3062
/dikatakana 16#30c2
/dittomark 16#3003
/divide 16#00f7
/divides 16#2223
/divisionslash 16#2215
/djecyrillic 16#0452
/dkshade 16#2593
/dlinebelow 16#1e0f
/dlsquare 16#3397
/dmacron 16#0111
/dmonospace 16#ff44
/dnblock 16#2584
/dochadathai 16#0e0e
/dodekthai 16#0e14
/dohiragana 16#3069
/dokatakana 16#30c9
/dollar 16#0024
/dollarinferior 16#f6e3
/dollarmonospace 16#ff04
/dollaroldstyle 16#f724
/dollarsmall 16#fe69
/dollarsuperior 16#f6e4
/dong 16#20ab
/dorusquare 16#3326
/dotaccent 16#02d9
/dotaccentcmb 16#0307
/dotbelowcmb 16#0323
/dotbelowcomb 16#0323
/dotkatakana 16#30fb
/dotlessi 16#0131
/dotlessj 16#f6be
/dotlessjstrokehook 16#0284
/dotmath 16#22c5
/dottedcircle 16#25cc
/doubleyodpatah 16#fb1f
/doubleyodpatahhebrew 16#fb1f
/downtackbelowcmb 16#031e
/downtackmod 16#02d5
/dparen 16#249f
/dsuperior 16#f6eb
/dtail 16#0256
/dtopbar 16#018c
/duhiragana 16#3065
/dukatakana 16#30c5
/dz 16#01f3
/dzaltone 16#02a3
/dzcaron 16#01c6
/dzcurl 16#02a5
/dzeabkhasiancyrillic 16#04e1
/dzecyrillic 16#0455
/dzhecyrillic 16#045f
/e 16#0065
/eacute 16#00e9
/earth 16#2641
/ebengali 16#098f
/ebopomofo 16#311c
/ebreve 16#0115
/ecandradeva 16#090d
/ecandragujarati 16#0a8d
/ecandravowelsigndeva 16#0945
/ecandravowelsigngujarati 16#0ac5
/ecaron 16#011b
/ecedillabreve 16#1e1d
/echarmenian 16#0565
/echyiwnarmenian 16#0587
/ecircle 16#24d4
/ecircumflex 16#00ea
/ecircumflexacute 16#1ebf
/ecircumflexbelow 16#1e19
/ecircumflexdotbelow 16#1ec7
/ecircumflexgrave 16#1ec1
/ecircumflexhookabove 16#1ec3
/ecircumflextilde 16#1ec5
/ecyrillic 16#0454
/edblgrave 16#0205
/edeva 16#090f
/edieresis 16#00eb
/edot 16#0117
/edotaccent 16#0117
/edotbelow 16#1eb9
/eegurmukhi 16#0a0f
/eematragurmukhi 16#0a47
/efcyrillic 16#0444
/egrave 16#00e8
/egujarati 16#0a8f
/eharmenian 16#0567
/ehbopomofo 16#311d
/ehiragana 16#3048
/ehookabove 16#1ebb
/eibopomofo 16#311f
/eight 16#0038
/eightarabic 16#0668
/eightbengali 16#09ee
/eightcircle 16#2467
/eightcircleinversesansserif 16#2791
/eightdeva 16#096e
/eighteencircle 16#2471
/eighteenparen 16#2485
/eighteenperiod 16#2499
/eightgujarati 16#0aee
/eightgurmukhi 16#0a6e
/eighthackarabic 16#0668
/eighthangzhou 16#3028
/eighthnotebeamed 16#266b
/eightideographicparen 16#3227
/eightinferior 16#2088
/eightmonospace 16#ff18
/eightoldstyle 16#f738
/eightparen 16#247b
/eightperiod 16#248f
/eightpersian 16#06f8
/eightroman 16#2177
/eightsuperior 16#2078
/eightthai 16#0e58
/einvertedbreve 16#0207
/eiotifiedcyrillic 16#0465
/ekatakana 16#30a8
/ekatakanahalfwidth 16#ff74
/ekonkargurmukhi 16#0a74
/ekorean 16#3154
/elcyrillic 16#043b
/element 16#2208
/elevencircle 16#246a
/elevenparen 16#247e
/elevenperiod 16#2492
/elevenroman 16#217a
/ellipsis 16#2026
/ellipsisvertical 16#22ee
/emacron 16#0113
/emacronacute 16#1e17
/emacrongrave 16#1e15
/emcyrillic 16#043c
/emdash 16#2014
/emdashvertical 16#fe31
/emonospace 16#ff45
/emphasismarkarmenian 16#055b
/emptyset 16#2205
/enbopomofo 16#3123
/encyrillic 16#043d
/endash 16#2013
/endashvertical 16#fe32
/endescendercyrillic 16#04a3
/eng 16#014b
/engbopomofo 16#3125
/enghecyrillic 16#04a5
/enhookcyrillic 16#04c8
/enspace 16#2002
/eogonek 16#0119
/eokorean 16#3153
/eopen 16#025b
/eopenclosed 16#029a
/eopenreversed 16#025c
/eopenreversedclosed 16#025e
/eopenreversedhook 16#025d
/eparen 16#24a0
/epsilon 16#03b5
/epsilontonos 16#03ad
/equal 16#003d
/equalmonospace 16#ff1d
/equalsmall 16#fe66
/equalsuperior 16#207c
/equivalence 16#2261
/erbopomofo 16#3126
/ercyrillic 16#0440
/ereversed 16#0258
/ereversedcyrillic 16#044d
/escyrillic 16#0441
/esdescendercyrillic 16#04ab
/esh 16#0283
/eshcurl 16#0286
/eshortdeva 16#090e
/eshortvowelsigndeva 16#0946
/eshreversedloop 16#01aa
/eshsquatreversed 16#0285
/esmallhiragana 16#3047
/esmallkatakana 16#30a7
/esmallkatakanahalfwidth 16#ff6a
/estimated 16#212e
/esuperior 16#f6ec
/eta 16#03b7
/etarmenian 16#0568
/etatonos 16#03ae
/eth 16#00f0
/etilde 16#1ebd
/etildebelow 16#1e1b
/etnahtafoukhhebrew 16#0591
/etnahtafoukhlefthebrew 16#0591
/etnahtahebrew 16#0591
/etnahtalefthebrew 16#0591
/eturned 16#01dd
/eukorean 16#3161
/euro 16#20ac
/evowelsignbengali 16#09c7
/evowelsigndeva 16#0947
/evowelsigngujarati 16#0ac7
/exclam 16#0021
/exclamarmenian 16#055c
/exclamdbl 16#203c
/exclamdown 16#00a1
/exclamdownsmall 16#f7a1
/exclammonospace 16#ff01
/exclamsmall 16#f721
/existential 16#2203
/ezh 16#0292
/ezhcaron 16#01ef
/ezhcurl 16#0293
/ezhreversed 16#01b9
/ezhtail 16#01ba
/f 16#0066
/fadeva 16#095e
/fagurmukhi 16#0a5e
/fahrenheit 16#2109
/fathaarabic 16#064e
/fathalowarabic 16#064e
/fathatanarabic 16#064b
/fbopomofo 16#3108
/fcircle 16#24d5
/fdotaccent 16#1e1f
/feharabic 16#0641
/feharmenian 16#0586
/fehfinalarabic 16#fed2
/fehinitialarabic 16#fed3
/fehmedialarabic 16#fed4
/feicoptic 16#03e5
/female 16#2640
/ff 16#fb00
/ffi 16#fb03
/ffl 16#fb04
/fi 16#fb01
/fifteencircle 16#246e
/fifteenparen 16#2482
/fifteenperiod 16#2496
/figuredash 16#2012
/filledbox 16#25a0
/filledrect 16#25ac
/finalkaf 16#05da
/finalkafdagesh 16#fb3a
/finalkafdageshhebrew 16#fb3a
/finalkafhebrew 16#05da
/finalmem 16#05dd
/finalmemhebrew 16#05dd
/finalnun 16#05df
/finalnunhebrew 16#05df
/finalpe 16#05e3
/finalpehebrew 16#05e3
/finaltsadi 16#05e5
/finaltsadihebrew 16#05e5
/firsttonechinese 16#02c9
/fisheye 16#25c9
/fitacyrillic 16#0473
/five 16#0035
/fivearabic 16#0665
/fivebengali 16#09eb
/fivecircle 16#2464
/fivecircleinversesansserif 16#278e
/fivedeva 16#096b
/fiveeighths 16#215d
/fivegujarati 16#0aeb
/fivegurmukhi 16#0a6b
/fivehackarabic 16#0665
/fivehangzhou 16#3025
/fiveideographicparen 16#3224
/fiveinferior 16#2085
/fivemonospace 16#ff15
/fiveoldstyle 16#f735
/fiveparen 16#2478
/fiveperiod 16#248c
/fivepersian 16#06f5
/fiveroman 16#2174
/fivesuperior 16#2075
/fivethai 16#0e55
/fl 16#fb02
/florin 16#0192
/fmonospace 16#ff46
/fmsquare 16#3399
/fofanthai 16#0e1f
/fofathai 16#0e1d
/fongmanthai 16#0e4f
/forall 16#2200
/four 16#0034
/fourarabic 16#0664
/fourbengali 16#09ea
/fourcircle 16#2463
/fourcircleinversesansserif 16#278d
/fourdeva 16#096a
/fourgujarati 16#0aea
/fourgurmukhi 16#0a6a
/fourhackarabic 16#0664
/fourhangzhou 16#3024
/fourideographicparen 16#3223
/fourinferior 16#2084
/fourmonospace 16#ff14
/fournumeratorbengali 16#09f7
/fouroldstyle 16#f734
/fourparen 16#2477
/fourperiod 16#248b
/fourpersian 16#06f4
/fourroman 16#2173
/foursuperior 16#2074
/fourteencircle 16#246d
/fourteenparen 16#2481
/fourteenperiod 16#2495
/fourthai 16#0e54
/fourthtonechinese 16#02cb
/fparen 16#24a1
/fraction 16#2044
/franc 16#20a3
/g 16#0067
/gabengali 16#0997
/gacute 16#01f5
/gadeva 16#0917
/gafarabic 16#06af
/gaffinalarabic 16#fb93
/gafinitialarabic 16#fb94
/gafmedialarabic 16#fb95
/gagujarati 16#0a97
/gagurmukhi 16#0a17
/gahiragana 16#304c
/gakatakana 16#30ac
/gamma 16#03b3
/gammalatinsmall 16#0263
/gammasuperior 16#02e0
/gangiacoptic 16#03eb
/gbopomofo 16#310d
/gbreve 16#011f
/gcaron 16#01e7
/gcedilla 16#0123
/gcircle 16#24d6
/gcircumflex 16#011d
/gcommaaccent 16#0123
/gdot 16#0121
/gdotaccent 16#0121
/gecyrillic 16#0433
/gehiragana 16#3052
/gekatakana 16#30b2
/geometricallyequal 16#2251
/gereshaccenthebrew 16#059c
/gereshhebrew 16#05f3
/gereshmuqdamhebrew 16#059d
/germandbls 16#00df
/gershayimaccenthebrew 16#059e
/gershayimhebrew 16#05f4
/getamark 16#3013
/ghabengali 16#0998
/ghadarmenian 16#0572
/ghadeva 16#0918
/ghagujarati 16#0a98
/ghagurmukhi 16#0a18
/ghainarabic 16#063a
/ghainfinalarabic 16#fece
/ghaininitialarabic 16#fecf
/ghainmedialarabic 16#fed0
/ghemiddlehookcyrillic 16#0495
/ghestrokecyrillic 16#0493
/gheupturncyrillic 16#0491
/ghhadeva 16#095a
/ghhagurmukhi 16#0a5a
/ghook 16#0260
/ghzsquare 16#3393
/gihiragana 16#304e
/gikatakana 16#30ae
/gimarmenian 16#0563
/gimel 16#05d2
/gimeldagesh 16#fb32
/gimeldageshhebrew 16#fb32
/gimelhebrew 16#05d2
/gjecyrillic 16#0453
/glottalinvertedstroke 16#01be
/glottalstop 16#0294
/glottalstopinverted 16#0296
/glottalstopmod 16#02c0
/glottalstopreversed 16#0295
/glottalstopreversedmod 16#02c1
/glottalstopreversedsuperior 16#02e4
/glottalstopstroke 16#02a1
/glottalstopstrokereversed 16#02a2
/gmacron 16#1e21
/gmonospace 16#ff47
/gohiragana 16#3054
/gokatakana 16#30b4
/gparen 16#24a2
/gpasquare 16#33ac
/gradient 16#2207
/grave 16#0060
/gravebelowcmb 16#0316
/gravecmb 16#0300
/gravecomb 16#0300
/gravedeva 16#0953
/gravelowmod 16#02ce
/gravemonospace 16#ff40
/gravetonecmb 16#0340
/greater 16#003e
/greaterequal 16#2265
/greaterequalorless 16#22db
/greatermonospace 16#ff1e
/greaterorequivalent 16#2273
/greaterorless 16#2277
/greateroverequal 16#2267
/greatersmall 16#fe65
/gscript 16#0261
/gstroke 16#01e5
/guhiragana 16#3050
/guillemotleft 16#00ab
/guillemotright 16#00bb
/guilsinglleft 16#2039
/guilsinglright 16#203a
/gukatakana 16#30b0
/guramusquare 16#3318
/gysquare 16#33c9
/h 16#0068
/haabkhasiancyrillic 16#04a9
/haaltonearabic 16#06c1
/habengali 16#09b9
/hadescendercyrillic 16#04b3
/hadeva 16#0939
/hagujarati 16#0ab9
/hagurmukhi 16#0a39
/haharabic 16#062d
/hahfinalarabic 16#fea2
/hahinitialarabic 16#fea3
/hahiragana 16#306f
/hahmedialarabic 16#fea4
/haitusquare 16#332a
/hakatakana 16#30cf
/hakatakanahalfwidth 16#ff8a
/halantgurmukhi 16#0a4d
/hamzaarabic 16#0621
/hamzalowarabic 16#0621
/hangulfiller 16#3164
/hardsigncyrillic 16#044a
/harpoonleftbarbup 16#21bc
/harpoonrightbarbup 16#21c0
/hasquare 16#33ca
/hatafpatah 16#05b2
/hatafpatah16 16#05b2
/hatafpatah23 16#05b2
/hatafpatah2f 16#05b2
/hatafpatahhebrew 16#05b2
/hatafpatahnarrowhebrew 16#05b2
/hatafpatahquarterhebrew 16#05b2
/hatafpatahwidehebrew 16#05b2
/hatafqamats 16#05b3
/hatafqamats1b 16#05b3
/hatafqamats28 16#05b3
/hatafqamats34 16#05b3
/hatafqamatshebrew 16#05b3
/hatafqamatsnarrowhebrew 16#05b3
/hatafqamatsquarterhebrew 16#05b3
/hatafqamatswidehebrew 16#05b3
/hatafsegol 16#05b1
/hatafsegol17 16#05b1
/hatafsegol24 16#05b1
/hatafsegol30 16#05b1
/hatafsegolhebrew 16#05b1
/hatafsegolnarrowhebrew 16#05b1
/hatafsegolquarterhebrew 16#05b1
/hatafsegolwidehebrew 16#05b1
/hbar 16#0127
/hbopomofo 16#310f
/hbrevebelow 16#1e2b
/hcedilla 16#1e29
/hcircle 16#24d7
/hcircumflex 16#0125
/hdieresis 16#1e27
/hdotaccent 16#1e23
/hdotbelow 16#1e25
/he 16#05d4
/heart 16#2665
/heartsuitblack 16#2665
/heartsuitwhite 16#2661
/hedagesh 16#fb34
/hedageshhebrew 16#fb34
/hehaltonearabic 16#06c1
/heharabic 16#0647
/hehebrew 16#05d4
/hehfinalaltonearabic 16#fba7
/hehfinalalttwoarabic 16#feea
/hehfinalarabic 16#feea
/hehhamzaabovefinalarabic 16#fba5
/hehhamzaaboveisolatedarabic 16#fba4
/hehinitialaltonearabic 16#fba8
/hehinitialarabic 16#feeb
/hehiragana 16#3078
/hehmedialaltonearabic 16#fba9
/hehmedialarabic 16#feec
/heiseierasquare 16#337b
/hekatakana 16#30d8
/hekatakanahalfwidth 16#ff8d
/hekutaarusquare 16#3336
/henghook 16#0267
/herutusquare 16#3339
/het 16#05d7
/hethebrew 16#05d7
/hhook 16#0266
/hhooksuperior 16#02b1
/hieuhacirclekorean 16#327b
/hieuhaparenkorean 16#321b
/hieuhcirclekorean 16#326d
/hieuhkorean 16#314e
/hieuhparenkorean 16#320d
/hihiragana 16#3072
/hikatakana 16#30d2
/hikatakanahalfwidth 16#ff8b
/hiriq 16#05b4
/hiriq14 16#05b4
/hiriq21 16#05b4
/hiriq2d 16#05b4
/hiriqhebrew 16#05b4
/hiriqnarrowhebrew 16#05b4
/hiriqquarterhebrew 16#05b4
/hiriqwidehebrew 16#05b4
/hlinebelow 16#1e96
/hmonospace 16#ff48
/hoarmenian 16#0570
/hohipthai 16#0e2b
/hohiragana 16#307b
/hokatakana 16#30db
/hokatakanahalfwidth 16#ff8e
/holam 16#05b9
/holam19 16#05b9
/holam26 16#05b9
/holam32 16#05b9
/holamhebrew 16#05b9
/holamnarrowhebrew 16#05b9
/holamquarterhebrew 16#05b9
/holamwidehebrew 16#05b9
/honokhukthai 16#0e2e
/hookabovecomb 16#0309
/hookcmb 16#0309
/hookpalatalizedbelowcmb 16#0321
/hookretroflexbelowcmb 16#0322
/hoonsquare 16#3342
/horicoptic 16#03e9
/horizontalbar 16#2015
/horncmb 16#031b
/hotsprings 16#2668
/house 16#2302
/hparen 16#24a3
/hsuperior 16#02b0
/hturned 16#0265
/huhiragana 16#3075
/huiitosquare 16#3333
/hukatakana 16#30d5
/hukatakanahalfwidth 16#ff8c
/hungarumlaut 16#02dd
/hungarumlautcmb 16#030b
/hv 16#0195
/hyphen 16#002d
/hypheninferior 16#f6e5
/hyphenmonospace 16#ff0d
/hyphensmall 16#fe63
/hyphensuperior 16#f6e6
/hyphentwo 16#2010
/i 16#0069
/iacute 16#00ed
/iacyrillic 16#044f
/ibengali 16#0987
/ibopomofo 16#3127
/ibreve 16#012d
/icaron 16#01d0
/icircle 16#24d8
/icircumflex 16#00ee
/icyrillic 16#0456
/idblgrave 16#0209
/ideographearthcircle 16#328f
/ideographfirecircle 16#328b
/ideographicallianceparen 16#323f
/ideographiccallparen 16#323a
/ideographiccentrecircle 16#32a5
/ideographicclose 16#3006
/ideographiccomma 16#3001
/ideographiccommaleft 16#ff64
/ideographiccongratulationparen 16#3237
/ideographiccorrectcircle 16#32a3
/ideographicearthparen 16#322f
/ideographicenterpriseparen 16#323d
/ideographicexcellentcircle 16#329d
/ideographicfestivalparen 16#3240
/ideographicfinancialcircle 16#3296
/ideographicfinancialparen 16#3236
/ideographicfireparen 16#322b
/ideographichaveparen 16#3232
/ideographichighcircle 16#32a4
/ideographiciterationmark 16#3005
/ideographiclaborcircle 16#3298
/ideographiclaborparen 16#3238
/ideographicleftcircle 16#32a7
/ideographiclowcircle 16#32a6
/ideographicmedicinecircle 16#32a9
/ideographicmetalparen 16#322e
/ideographicmoonparen 16#322a
/ideographicnameparen 16#3234
/ideographicperiod 16#3002
/ideographicprintcircle 16#329e
/ideographicreachparen 16#3243
/ideographicrepresentparen 16#3239
/ideographicresourceparen 16#323e
/ideographicrightcircle 16#32a8
/ideographicsecretcircle 16#3299
/ideographicselfparen 16#3242
/ideographicsocietyparen 16#3233
/ideographicspace 16#3000
/ideographicspecialparen 16#3235
/ideographicstockparen 16#3231
/ideographicstudyparen 16#323b
/ideographicsunparen 16#3230
/ideographicsuperviseparen 16#323c
/ideographicwaterparen 16#322c
/ideographicwoodparen 16#322d
/ideographiczero 16#3007
/ideographmetalcircle 16#328e
/ideographmooncircle 16#328a
/ideographnamecircle 16#3294
/ideographsuncircle 16#3290
/ideographwatercircle 16#328c
/ideographwoodcircle 16#328d
/ideva 16#0907
/idieresis 16#00ef
/idieresisacute 16#1e2f
/idieresiscyrillic 16#04e5
/idotbelow 16#1ecb
/iebrevecyrillic 16#04d7
/iecyrillic 16#0435
/ieungacirclekorean 16#3275
/ieungaparenkorean 16#3215
/ieungcirclekorean 16#3267
/ieungkorean 16#3147
/ieungparenkorean 16#3207
/igrave 16#00ec
/igujarati 16#0a87
/igurmukhi 16#0a07
/ihiragana 16#3044
/ihookabove 16#1ec9
/iibengali 16#0988
/iicyrillic 16#0438
/iideva 16#0908
/iigujarati 16#0a88
/iigurmukhi 16#0a08
/iimatragurmukhi 16#0a40
/iinvertedbreve 16#020b
/iishortcyrillic 16#0439
/iivowelsignbengali 16#09c0
/iivowelsigndeva 16#0940
/iivowelsigngujarati 16#0ac0
/ij 16#0133
/ikatakana 16#30a4
/ikatakanahalfwidth 16#ff72
/ikorean 16#3163
/ilde 16#02dc
/iluyhebrew 16#05ac
/imacron 16#012b
/imacroncyrillic 16#04e3
/imageorapproximatelyequal 16#2253
/imatragurmukhi 16#0a3f
/imonospace 16#ff49
/increment 16#2206
/infinity 16#221e
/iniarmenian 16#056b
/integral 16#222b
/integralbottom 16#2321
/integralbt 16#2321
/integralex 16#f8f5
/integraltop 16#2320
/integraltp 16#2320
/intersection 16#2229
/intisquare 16#3305
/invbullet 16#25d8
/invcircle 16#25d9
/invsmileface 16#263b
/iocyrillic 16#0451
/iogonek 16#012f
/iota 16#03b9
/iotadieresis 16#03ca
/iotadieresistonos 16#0390
/iotalatin 16#0269
/iotatonos 16#03af
/iparen 16#24a4
/irigurmukhi 16#0a72
/ismallhiragana 16#3043
/ismallkatakana 16#30a3
/ismallkatakanahalfwidth 16#ff68
/issharbengali 16#09fa
/istroke 16#0268
/isuperior 16#f6ed
/iterationhiragana 16#309d
/iterationkatakana 16#30fd
/itilde 16#0129
/itildebelow 16#1e2d
/iubopomofo 16#3129
/iucyrillic 16#044e
/ivowelsignbengali 16#09bf
/ivowelsigndeva 16#093f
/ivowelsigngujarati 16#0abf
/izhitsacyrillic 16#0475
/izhitsadblgravecyrillic 16#0477
/j 16#006a
/jaarmenian 16#0571
/jabengali 16#099c
/jadeva 16#091c
/jagujarati 16#0a9c
/jagurmukhi 16#0a1c
/jbopomofo 16#3110
/jcaron 16#01f0
/jcircle 16#24d9
/jcircumflex 16#0135
/jcrossedtail 16#029d
/jdotlessstroke 16#025f
/jecyrillic 16#0458
/jeemarabic 16#062c
/jeemfinalarabic 16#fe9e
/jeeminitialarabic 16#fe9f
/jeemmedialarabic 16#fea0
/jeharabic 16#0698
/jehfinalarabic 16#fb8b
/jhabengali 16#099d
/jhadeva 16#091d
/jhagujarati 16#0a9d
/jhagurmukhi 16#0a1d
/jheharmenian 16#057b
/jis 16#3004
/jmonospace 16#ff4a
/jparen 16#24a5
/jsuperior 16#02b2
/k 16#006b
/kabashkircyrillic 16#04a1
/kabengali 16#0995
/kacute 16#1e31
/kacyrillic 16#043a
/kadescendercyrillic 16#049b
/kadeva 16#0915
/kaf 16#05db
/kafarabic 16#0643
/kafdagesh 16#fb3b
/kafdageshhebrew 16#fb3b
/kaffinalarabic 16#feda
/kafhebrew 16#05db
/kafinitialarabic 16#fedb
/kafmedialarabic 16#fedc
/kafrafehebrew 16#fb4d
/kagujarati 16#0a95
/kagurmukhi 16#0a15
/kahiragana 16#304b
/kahookcyrillic 16#04c4
/kakatakana 16#30ab
/kakatakanahalfwidth 16#ff76
/kappa 16#03ba
/kappasymbolgreek 16#03f0
/kapyeounmieumkorean 16#3171
/kapyeounphieuphkorean 16#3184
/kapyeounpieupkorean 16#3178
/kapyeounssangpieupkorean 16#3179
/karoriisquare 16#330d
/kashidaautoarabic 16#0640
/kashidaautonosidebearingarabic 16#0640
/kasmallkatakana 16#30f5
/kasquare 16#3384
/kasraarabic 16#0650
/kasratanarabic 16#064d
/kastrokecyrillic 16#049f
/katahiraprolongmarkhalfwidth 16#ff70
/kaverticalstrokecyrillic 16#049d
/kbopomofo 16#310e
/kcalsquare 16#3389
/kcaron 16#01e9
/kcedilla 16#0137
/kcircle 16#24da
/kcommaaccent 16#0137
/kdotbelow 16#1e33
/keharmenian 16#0584
/kehiragana 16#3051
/kekatakana 16#30b1
/kekatakanahalfwidth 16#ff79
/kenarmenian 16#056f
/kesmallkatakana 16#30f6
/kgreenlandic 16#0138
/khabengali 16#0996
/khacyrillic 16#0445
/khadeva 16#0916
/khagujarati 16#0a96
/khagurmukhi 16#0a16
/khaharabic 16#062e
/khahfinalarabic 16#fea6
/khahinitialarabic 16#fea7
/khahmedialarabic 16#fea8
/kheicoptic 16#03e7
/khhadeva 16#0959
/khhagurmukhi 16#0a59
/khieukhacirclekorean 16#3278
/khieukhaparenkorean 16#3218
/khieukhcirclekorean 16#326a
/khieukhkorean 16#314b
/khieukhparenkorean 16#320a
/khokhaithai 16#0e02
/khokhonthai 16#0e05
/khokhuatthai 16#0e03
/khokhwaithai 16#0e04
/khomutthai 16#0e5b
/khook 16#0199
/khorakhangthai 16#0e06
/khzsquare 16#3391
/kihiragana 16#304d
/kikatakana 16#30ad
/kikatakanahalfwidth 16#ff77
/kiroguramusquare 16#3315
/kiromeetorusquare 16#3316
/kirosquare 16#3314
/kiyeokacirclekorean 16#326e
/kiyeokaparenkorean 16#320e
/kiyeokcirclekorean 16#3260
/kiyeokkorean 16#3131
/kiyeokparenkorean 16#3200
/kiyeoksioskorean 16#3133
/kjecyrillic 16#045c
/klinebelow 16#1e35
/klsquare 16#3398
/kmcubedsquare 16#33a6
/kmonospace 16#ff4b
/kmsquaredsquare 16#33a2
/kohiragana 16#3053
/kohmsquare 16#33c0
/kokaithai 16#0e01
/kokatakana 16#30b3
/kokatakanahalfwidth 16#ff7a
/kooposquare 16#331e
/koppacyrillic 16#0481
/koreanstandardsymbol 16#327f
/koroniscmb 16#0343
/kparen 16#24a6
/kpasquare 16#33aa
/ksicyrillic 16#046f
/ktsquare 16#33cf
/kturned 16#029e
/kuhiragana 16#304f
/kukatakana 16#30af
/kukatakanahalfwidth 16#ff78
/kvsquare 16#33b8
/kwsquare 16#33be
/l 16#006c
/labengali 16#09b2
/lacute 16#013a
/ladeva 16#0932
/lagujarati 16#0ab2
/lagurmukhi 16#0a32
/lakkhangyaothai 16#0e45
/lamaleffinalarabic 16#fefc
/lamalefhamzaabovefinalarabic 16#fef8
/lamalefhamzaaboveisolatedarabic 16#fef7
/lamalefhamzabelowfinalarabic 16#fefa
/lamalefhamzabelowisolatedarabic 16#fef9
/lamalefisolatedarabic 16#fefb
/lamalefmaddaabovefinalarabic 16#fef6
/lamalefmaddaaboveisolatedarabic 16#fef5
/lamarabic 16#0644
/lambda 16#03bb
/lambdastroke 16#019b
/lamed 16#05dc
/lameddagesh 16#fb3c
/lameddageshhebrew 16#fb3c
/lamedhebrew 16#05dc
/lamfinalarabic 16#fede
/lamhahinitialarabic 16#fcca
/laminitialarabic 16#fedf
/lamjeeminitialarabic 16#fcc9
/lamkhahinitialarabic 16#fccb
/lamlamhehisolatedarabic 16#fdf2
/lammedialarabic 16#fee0
/lammeemhahinitialarabic 16#fd88
/lammeeminitialarabic 16#fccc
/largecircle 16#25ef
/lbar 16#019a
/lbelt 16#026c
/lbopomofo 16#310c
/lcaron 16#013e
/lcedilla 16#013c
/lcircle 16#24db
/lcircumflexbelow 16#1e3d
/lcommaaccent 16#013c
/ldot 16#0140
/ldotaccent 16#0140
/ldotbelow 16#1e37
/ldotbelowmacron 16#1e39
/leftangleabovecmb 16#031a
/lefttackbelowcmb 16#0318
/less 16#003c
/lessequal 16#2264
/lessequalorgreater 16#22da
/lessmonospace 16#ff1c
/lessorequivalent 16#2272
/lessorgreater 16#2276
/lessoverequal 16#2266
/lesssmall 16#fe64
/lezh 16#026e
/lfblock 16#258c
/lhookretroflex 16#026d
/lira 16#20a4
/liwnarmenian 16#056c
/lj 16#01c9
/ljecyrillic 16#0459
/ll 16#f6c0
/lladeva 16#0933
/llagujarati 16#0ab3
/llinebelow 16#1e3b
/llladeva 16#0934
/llvocalicbengali 16#09e1
/llvocalicdeva 16#0961
/llvocalicvowelsignbengali 16#09e3
/llvocalicvowelsigndeva 16#0963
/lmiddletilde 16#026b
/lmonospace 16#ff4c
/lmsquare 16#33d0
/lochulathai 16#0e2c
/logicaland 16#2227
/logicalnot 16#00ac
/logicalnotreversed 16#2310
/logicalor 16#2228
/lolingthai 16#0e25
/longs 16#017f
/lowlinecenterline 16#fe4e
/lowlinecmb 16#0332
/lowlinedashed 16#fe4d
/lozenge 16#25ca
/lparen 16#24a7
/lslash 16#0142
/lsquare 16#2113
/lsuperior 16#f6ee
/ltshade 16#2591
/luthai 16#0e26
/lvocalicbengali 16#098c
/lvocalicdeva 16#090c
/lvocalicvowelsignbengali 16#09e2
/lvocalicvowelsigndeva 16#0962
/lxsquare 16#33d3
/m 16#006d
/mabengali 16#09ae
/macron 16#00af
/macronbelowcmb 16#0331
/macroncmb 16#0304
/macronlowmod 16#02cd
/macronmonospace 16#ffe3
/macute 16#1e3f
/madeva 16#092e
/magujarati 16#0aae
/magurmukhi 16#0a2e
/mahapakhhebrew 16#05a4
/mahapakhlefthebrew 16#05a4
/mahiragana 16#307e
/maichattawalowleftthai 16#f895
/maichattawalowrightthai 16#f894
/maichattawathai 16#0e4b
/maichattawaupperleftthai 16#f893
/maieklowleftthai 16#f88c
/maieklowrightthai 16#f88b
/maiekthai 16#0e48
/maiekupperleftthai 16#f88a
/maihanakatleftthai 16#f884
/maihanakatthai 16#0e31
/maitaikhuleftthai 16#f889
/maitaikhuthai 16#0e47
/maitholowleftthai 16#f88f
/maitholowrightthai 16#f88e
/maithothai 16#0e49
/maithoupperleftthai 16#f88d
/maitrilowleftthai 16#f892
/maitrilowrightthai 16#f891
/maitrithai 16#0e4a
/maitriupperleftthai 16#f890
/maiyamokthai 16#0e46
/makatakana 16#30de
/makatakanahalfwidth 16#ff8f
/male 16#2642
/mansyonsquare 16#3347
/maqafhebrew 16#05be
/mars 16#2642
/masoracirclehebrew 16#05af
/masquare 16#3383
/mbopomofo 16#3107
/mbsquare 16#33d4
/mcircle 16#24dc
/mcubedsquare 16#33a5
/mdotaccent 16#1e41
/mdotbelow 16#1e43
/meemarabic 16#0645
/meemfinalarabic 16#fee2
/meeminitialarabic 16#fee3
/meemmedialarabic 16#fee4
/meemmeeminitialarabic 16#fcd1
/meemmeemisolatedarabic 16#fc48
/meetorusquare 16#334d
/mehiragana 16#3081
/meizierasquare 16#337e
/mekatakana 16#30e1
/mekatakanahalfwidth 16#ff92
/mem 16#05de
/memdagesh 16#fb3e
/memdageshhebrew 16#fb3e
/memhebrew 16#05de
/menarmenian 16#0574
/merkhahebrew 16#05a5
/merkhakefulahebrew 16#05a6
/merkhakefulalefthebrew 16#05a6
/merkhalefthebrew 16#05a5
/mhook 16#0271
/mhzsquare 16#3392
/middledotkatakanahalfwidth 16#ff65
/middot 16#00b7
/mieumacirclekorean 16#3272
/mieumaparenkorean 16#3212
/mieumcirclekorean 16#3264
/mieumkorean 16#3141
/mieumpansioskorean 16#3170
/mieumparenkorean 16#3204
/mieumpieupkorean 16#316e
/mieumsioskorean 16#316f
/mihiragana 16#307f
/mikatakana 16#30df
/mikatakanahalfwidth 16#ff90
/minus 16#2212
/minusbelowcmb 16#0320
/minuscircle 16#2296
/minusmod 16#02d7
/minusplus 16#2213
/minute 16#2032
/miribaarusquare 16#334a
/mirisquare 16#3349
/mlonglegturned 16#0270
/mlsquare 16#3396
/mmcubedsquare 16#33a3
/mmonospace 16#ff4d
/mmsquaredsquare 16#339f
/mohiragana 16#3082
/mohmsquare 16#33c1
/mokatakana 16#30e2
/mokatakanahalfwidth 16#ff93
/molsquare 16#33d6
/momathai 16#0e21
/moverssquare 16#33a7
/moverssquaredsquare 16#33a8
/mparen 16#24a8
/mpasquare 16#33ab
/mssquare 16#33b3
/msuperior 16#f6ef
/mturned 16#026f
/mu 16#00b5
/mu1 16#00b5
/muasquare 16#3382
/muchgreater 16#226b
/muchless 16#226a
/mufsquare 16#338c
/mugreek 16#03bc
/mugsquare 16#338d
/muhiragana 16#3080
/mukatakana 16#30e0
/mukatakanahalfwidth 16#ff91
/mulsquare 16#3395
/multiply 16#00d7
/mumsquare 16#339b
/munahhebrew 16#05a3
/munahlefthebrew 16#05a3
/musicalnote 16#266a
/musicalnotedbl 16#266b
/musicflatsign 16#266d
/musicsharpsign 16#266f
/mussquare 16#33b2
/muvsquare 16#33b6
/muwsquare 16#33bc
/mvmegasquare 16#33b9
/mvsquare 16#33b7
/mwmegasquare 16#33bf
/mwsquare 16#33bd
/n 16#006e
/nabengali 16#09a8
/nabla 16#2207
/nacute 16#0144
/nadeva 16#0928
/nagujarati 16#0aa8
/nagurmukhi 16#0a28
/nahiragana 16#306a
/nakatakana 16#30ca
/nakatakanahalfwidth 16#ff85
/napostrophe 16#0149
/nasquare 16#3381
/nbopomofo 16#310b
/nbspace 16#00a0
/ncaron 16#0148
/ncedilla 16#0146
/ncircle 16#24dd
/ncircumflexbelow 16#1e4b
/ncommaaccent 16#0146
/ndotaccent 16#1e45
/ndotbelow 16#1e47
/nehiragana 16#306d
/nekatakana 16#30cd
/nekatakanahalfwidth 16#ff88
/newsheqelsign 16#20aa
/nfsquare 16#338b
/ngabengali 16#0999
/ngadeva 16#0919
/ngagujarati 16#0a99
/ngagurmukhi 16#0a19
/ngonguthai 16#0e07
/nhiragana 16#3093
/nhookleft 16#0272
/nhookretroflex 16#0273
/nieunacirclekorean 16#326f
/nieunaparenkorean 16#320f
/nieuncieuckorean 16#3135
/nieuncirclekorean 16#3261
/nieunhieuhkorean 16#3136
/nieunkorean 16#3134
/nieunpansioskorean 16#3168
/nieunparenkorean 16#3201
/nieunsioskorean 16#3167
/nieuntikeutkorean 16#3166
/nihiragana 16#306b
/nikatakana 16#30cb
/nikatakanahalfwidth 16#ff86
/nikhahitleftthai 16#f899
/nikhahitthai 16#0e4d
/nine 16#0039
/ninearabic 16#0669
/ninebengali 16#09ef
/ninecircle 16#2468
/ninecircleinversesansserif 16#2792
/ninedeva 16#096f
/ninegujarati 16#0aef
/ninegurmukhi 16#0a6f
/ninehackarabic 16#0669
/ninehangzhou 16#3029
/nineideographicparen 16#3228
/nineinferior 16#2089
/ninemonospace 16#ff19
/nineoldstyle 16#f739
/nineparen 16#247c
/nineperiod 16#2490
/ninepersian 16#06f9
/nineroman 16#2178
/ninesuperior 16#2079
/nineteencircle 16#2472
/nineteenparen 16#2486
/nineteenperiod 16#249a
/ninethai 16#0e59
/nj 16#01cc
/njecyrillic 16#045a
/nkatakana 16#30f3
/nkatakanahalfwidth 16#ff9d
/nlegrightlong 16#019e
/nlinebelow 16#1e49
/nmonospace 16#ff4e
/nmsquare 16#339a
/nnabengali 16#09a3
/nnadeva 16#0923
/nnagujarati 16#0aa3
/nnagurmukhi 16#0a23
/nnnadeva 16#0929
/nohiragana 16#306e
/nokatakana 16#30ce
/nokatakanahalfwidth 16#ff89
/nonbreakingspace 16#00a0
/nonenthai 16#0e13
/nonuthai 16#0e19
/noonarabic 16#0646
/noonfinalarabic 16#fee6
/noonghunnaarabic 16#06ba
/noonghunnafinalarabic 16#fb9f
/nooninitialarabic 16#fee7
/noonjeeminitialarabic 16#fcd2
/noonjeemisolatedarabic 16#fc4b
/noonmedialarabic 16#fee8
/noonmeeminitialarabic 16#fcd5
/noonmeemisolatedarabic 16#fc4e
/noonnoonfinalarabic 16#fc8d
/notcontains 16#220c
/notelement 16#2209
/notelementof 16#2209
/notequal 16#2260
/notgreater 16#226f
/notgreaternorequal 16#2271
/notgreaternorless 16#2279
/notidentical 16#2262
/notless 16#226e
/notlessnorequal 16#2270
/notparallel 16#2226
/notprecedes 16#2280
/notsubset 16#2284
/notsucceeds 16#2281
/notsuperset 16#2285
/nowarmenian 16#0576
/nparen 16#24a9
/nssquare 16#33b1
/nsuperior 16#207f
/ntilde 16#00f1
/nu 16#03bd
/nuhiragana 16#306c
/nukatakana 16#30cc
/nukatakanahalfwidth 16#ff87
/nuktabengali 16#09bc
/nuktadeva 16#093c
/nuktagujarati 16#0abc
/nuktagurmukhi 16#0a3c
/numbersign 16#0023
/numbersignmonospace 16#ff03
/numbersignsmall 16#fe5f
/numeralsigngreek 16#0374
/numeralsignlowergreek 16#0375
/numero 16#2116
/nun 16#05e0
/nundagesh 16#fb40
/nundageshhebrew 16#fb40
/nunhebrew 16#05e0
/nvsquare 16#33b5
/nwsquare 16#33bb
/nyabengali 16#099e
/nyadeva 16#091e
/nyagujarati 16#0a9e
/nyagurmukhi 16#0a1e
/o 16#006f
/oacute 16#00f3
/oangthai 16#0e2d
/obarred 16#0275
/obarredcyrillic 16#04e9
/obarreddieresiscyrillic 16#04eb
/obengali 16#0993
/obopomofo 16#311b
/obreve 16#014f
/ocandradeva 16#0911
/ocandragujarati 16#0a91
/ocandravowelsigndeva 16#0949
/ocandravowelsigngujarati 16#0ac9
/ocaron 16#01d2
/ocircle 16#24de
/ocircumflex 16#00f4
/ocircumflexacute 16#1ed1
/ocircumflexdotbelow 16#1ed9
/ocircumflexgrave 16#1ed3
/ocircumflexhookabove 16#1ed5
/ocircumflextilde 16#1ed7
/ocyrillic 16#043e
/odblacute 16#0151
/odblgrave 16#020d
/odeva 16#0913
/odieresis 16#00f6
/odieresiscyrillic 16#04e7
/odotbelow 16#1ecd
/oe 16#0153
/oekorean 16#315a
/ogonek 16#02db
/ogonekcmb 16#0328
/ograve 16#00f2
/ogujarati 16#0a93
/oharmenian 16#0585
/ohiragana 16#304a
/ohookabove 16#1ecf
/ohorn 16#01a1
/ohornacute 16#1edb
/ohorndotbelow 16#1ee3
/ohorngrave 16#1edd
/ohornhookabove 16#1edf
/ohorntilde 16#1ee1
/ohungarumlaut 16#0151
/oi 16#01a3
/oinvertedbreve 16#020f
/okatakana 16#30aa
/okatakanahalfwidth 16#ff75
/okorean 16#3157
/olehebrew 16#05ab
/omacron 16#014d
/omacronacute 16#1e53
/omacrongrave 16#1e51
/omdeva 16#0950
/omega 16#03c9
/omega1 16#03d6
/omegacyrillic 16#0461
/omegalatinclosed 16#0277
/omegaroundcyrillic 16#047b
/omegatitlocyrillic 16#047d
/omegatonos 16#03ce
/omgujarati 16#0ad0
/omicron 16#03bf
/omicrontonos 16#03cc
/omonospace 16#ff4f
/one 16#0031
/onearabic 16#0661
/onebengali 16#09e7
/onecircle 16#2460
/onecircleinversesansserif 16#278a
/onedeva 16#0967
/onedotenleader 16#2024
/oneeighth 16#215b
/onefitted 16#f6dc
/onegujarati 16#0ae7
/onegurmukhi 16#0a67
/onehackarabic 16#0661
/onehalf 16#00bd
/onehangzhou 16#3021
/oneideographicparen 16#3220
/oneinferior 16#2081
/onemonospace 16#ff11
/onenumeratorbengali 16#09f4
/oneoldstyle 16#f731
/oneparen 16#2474
/oneperiod 16#2488
/onepersian 16#06f1
/onequarter 16#00bc
/oneroman 16#2170
/onesuperior 16#00b9
/onethai 16#0e51
/onethird 16#2153
/oogonek 16#01eb
/oogonekmacron 16#01ed
/oogurmukhi 16#0a13
/oomatragurmukhi 16#0a4b
/oopen 16#0254
/oparen 16#24aa
/openbullet 16#25e6
/option 16#2325
/ordfeminine 16#00aa
/ordmasculine 16#00ba
/orthogonal 16#221f
/oshortdeva 16#0912
/oshortvowelsigndeva 16#094a
/oslash 16#00f8
/oslashacute 16#01ff
/osmallhiragana 16#3049
/osmallkatakana 16#30a9
/osmallkatakanahalfwidth 16#ff6b
/ostrokeacute 16#01ff
/osuperior 16#f6f0
/otcyrillic 16#047f
/otilde 16#00f5
/otildeacute 16#1e4d
/otildedieresis 16#1e4f
/oubopomofo 16#3121
/overline 16#203e
/overlinecenterline 16#fe4a
/overlinecmb 16#0305
/overlinedashed 16#fe49
/overlinedblwavy 16#fe4c
/overlinewavy 16#fe4b
/overscore 16#00af
/ovowelsignbengali 16#09cb
/ovowelsigndeva 16#094b
/ovowelsigngujarati 16#0acb
/p 16#0070
/paampssquare 16#3380
/paasentosquare 16#332b
/pabengali 16#09aa
/pacute 16#1e55
/padeva 16#092a
/pagedown 16#21df
/pageup 16#21de
/pagujarati 16#0aaa
/pagurmukhi 16#0a2a
/pahiragana 16#3071
/paiyannoithai 16#0e2f
/pakatakana 16#30d1
/palatalizationcyrilliccmb 16#0484
/palochkacyrillic 16#04c0
/pansioskorean 16#317f
/paragraph 16#00b6
/parallel 16#2225
/parenleft 16#0028
/parenleftaltonearabic 16#fd3e
/parenleftbt 16#f8ed
/parenleftex 16#f8ec
/parenleftinferior 16#208d
/parenleftmonospace 16#ff08
/parenleftsmall 16#fe59
/parenleftsuperior 16#207d
/parenlefttp 16#f8eb
/parenleftvertical 16#fe35
/parenright 16#0029
/parenrightaltonearabic 16#fd3f
/parenrightbt 16#f8f8
/parenrightex 16#f8f7
/parenrightinferior 16#208e
/parenrightmonospace 16#ff09
/parenrightsmall 16#fe5a
/parenrightsuperior 16#207e
/parenrighttp 16#f8f6
/parenrightvertical 16#fe36
/partialdiff 16#2202
/paseqhebrew 16#05c0
/pashtahebrew 16#0599
/pasquare 16#33a9
/patah 16#05b7
/patah11 16#05b7
/patah1d 16#05b7
/patah2a 16#05b7
/patahhebrew 16#05b7
/patahnarrowhebrew 16#05b7
/patahquarterhebrew 16#05b7
/patahwidehebrew 16#05b7
/pazerhebrew 16#05a1
/pbopomofo 16#3106
/pcircle 16#24df
/pdotaccent 16#1e57
/pe 16#05e4
/pecyrillic 16#043f
/pedagesh 16#fb44
/pedageshhebrew 16#fb44
/peezisquare 16#333b
/pefinaldageshhebrew 16#fb43
/peharabic 16#067e
/peharmenian 16#057a
/pehebrew 16#05e4
/pehfinalarabic 16#fb57
/pehinitialarabic 16#fb58
/pehiragana 16#307a
/pehmedialarabic 16#fb59
/pekatakana 16#30da
/pemiddlehookcyrillic 16#04a7
/perafehebrew 16#fb4e
/percent 16#0025
/percentarabic 16#066a
/percentmonospace 16#ff05
/percentsmall 16#fe6a
/period 16#002e
/periodarmenian 16#0589
/periodcentered 16#00b7
/periodhalfwidth 16#ff61
/periodinferior 16#f6e7
/periodmonospace 16#ff0e
/periodsmall 16#fe52
/periodsuperior 16#f6e8
/perispomenigreekcmb 16#0342
/perpendicular 16#22a5
/perthousand 16#2030
/peseta 16#20a7
/pfsquare 16#338a
/phabengali 16#09ab
/phadeva 16#092b
/phagujarati 16#0aab
/phagurmukhi 16#0a2b
/phi 16#03c6
/phi1 16#03d5
/phieuphacirclekorean 16#327a
/phieuphaparenkorean 16#321a
/phieuphcirclekorean 16#326c
/phieuphkorean 16#314d
/phieuphparenkorean 16#320c
/philatin 16#0278
/phinthuthai 16#0e3a
/phisymbolgreek 16#03d5
/phook 16#01a5
/phophanthai 16#0e1e
/phophungthai 16#0e1c
/phosamphaothai 16#0e20
/pi 16#03c0
/pieupacirclekorean 16#3273
/pieupaparenkorean 16#3213
/pieupcieuckorean 16#3176
/pieupcirclekorean 16#3265
/pieupkiyeokkorean 16#3172
/pieupkorean 16#3142
/pieupparenkorean 16#3205
/pieupsioskiyeokkorean 16#3174
/pieupsioskorean 16#3144
/pieupsiostikeutkorean 16#3175
/pieupthieuthkorean 16#3177
/pieuptikeutkorean 16#3173
/pihiragana 16#3074
/pikatakana 16#30d4
/pisymbolgreek 16#03d6
/piwrarmenian 16#0583
/plus 16#002b
/plusbelowcmb 16#031f
/pluscircle 16#2295
/plusminus 16#00b1
/plusmod 16#02d6
/plusmonospace 16#ff0b
/plussmall 16#fe62
/plussuperior 16#207a
/pmonospace 16#ff50
/pmsquare 16#33d8
/pohiragana 16#307d
/pointingindexdownwhite 16#261f
/pointingindexleftwhite 16#261c
/pointingindexrightwhite 16#261e
/pointingindexupwhite 16#261d
/pokatakana 16#30dd
/poplathai 16#0e1b
/postalmark 16#3012
/postalmarkface 16#3020
/pparen 16#24ab
/precedes 16#227a
/prescription 16#211e
/primemod 16#02b9
/primereversed 16#2035
/product 16#220f
/projective 16#2305
/prolongedkana 16#30fc
/propellor 16#2318
/propersubset 16#2282
/propersuperset 16#2283
/proportion 16#2237
/proportional 16#221d
/psi 16#03c8
/psicyrillic 16#0471
/psilipneumatacyrilliccmb 16#0486
/pssquare 16#33b0
/puhiragana 16#3077
/pukatakana 16#30d7
/pvsquare 16#33b4
/pwsquare 16#33ba
/q 16#0071
/qadeva 16#0958
/qadmahebrew 16#05a8
/qafarabic 16#0642
/qaffinalarabic 16#fed6
/qafinitialarabic 16#fed7
/qafmedialarabic 16#fed8
/qamats 16#05b8
/qamats10 16#05b8
/qamats1a 16#05b8
/qamats1c 16#05b8
/qamats27 16#05b8
/qamats29 16#05b8
/qamats33 16#05b8
/qamatsde 16#05b8
/qamatshebrew 16#05b8
/qamatsnarrowhebrew 16#05b8
/qamatsqatanhebrew 16#05b8
/qamatsqatannarrowhebrew 16#05b8
/qamatsqatanquarterhebrew 16#05b8
/qamatsqatanwidehebrew 16#05b8
/qamatsquarterhebrew 16#05b8
/qamatswidehebrew 16#05b8
/qarneyparahebrew 16#059f
/qbopomofo 16#3111
/qcircle 16#24e0
/qhook 16#02a0
/qmonospace 16#ff51
/qof 16#05e7
/qofdagesh 16#fb47
/qofdageshhebrew 16#fb47
/qofhebrew 16#05e7
/qparen 16#24ac
/quarternote 16#2669
/qubuts 16#05bb
/qubuts18 16#05bb
/qubuts25 16#05bb
/qubuts31 16#05bb
/qubutshebrew 16#05bb
/qubutsnarrowhebrew 16#05bb
/qubutsquarterhebrew 16#05bb
/qubutswidehebrew 16#05bb
/question 16#003f
/questionarabic 16#061f
/questionarmenian 16#055e
/questiondown 16#00bf
/questiondownsmall 16#f7bf
/questiongreek 16#037e
/questionmonospace 16#ff1f
/questionsmall 16#f73f
/quotedbl 16#0022
/quotedblbase 16#201e
/quotedblleft 16#201c
/quotedblmonospace 16#ff02
/quotedblprime 16#301e
/quotedblprimereversed 16#301d
/quotedblright 16#201d
/quoteleft 16#2018
/quoteleftreversed 16#201b
/quotereversed 16#201b
/quoteright 16#2019
/quoterightn 16#0149
/quotesinglbase 16#201a
/quotesingle 16#0027
/quotesinglemonospace 16#ff07
/r 16#0072
/raarmenian 16#057c
/rabengali 16#09b0
/racute 16#0155
/radeva 16#0930
/radical 16#221a
/radicalex 16#f8e5
/radoverssquare 16#33ae
/radoverssquaredsquare 16#33af
/radsquare 16#33ad
/rafe 16#05bf
/rafehebrew 16#05bf
/ragujarati 16#0ab0
/ragurmukhi 16#0a30
/rahiragana 16#3089
/rakatakana 16#30e9
/rakatakanahalfwidth 16#ff97
/ralowerdiagonalbengali 16#09f1
/ramiddlediagonalbengali 16#09f0
/ramshorn 16#0264
/ratio 16#2236
/rbopomofo 16#3116
/rcaron 16#0159
/rcedilla 16#0157
/rcircle 16#24e1
/rcommaaccent 16#0157
/rdblgrave 16#0211
/rdotaccent 16#1e59
/rdotbelow 16#1e5b
/rdotbelowmacron 16#1e5d
/referencemark 16#203b
/reflexsubset 16#2286
/reflexsuperset 16#2287
/registered 16#00ae
/registersans 16#f8e8
/registerserif 16#f6da
/reharabic 16#0631
/reharmenian 16#0580
/rehfinalarabic 16#feae
/rehiragana 16#308c
/rekatakana 16#30ec
/rekatakanahalfwidth 16#ff9a
/resh 16#05e8
/reshdageshhebrew 16#fb48
/reshhebrew 16#05e8
/reversedtilde 16#223d
/reviahebrew 16#0597
/reviamugrashhebrew 16#0597
/revlogicalnot 16#2310
/rfishhook 16#027e
/rfishhookreversed 16#027f
/rhabengali 16#09dd
/rhadeva 16#095d
/rho 16#03c1
/rhook 16#027d
/rhookturned 16#027b
/rhookturnedsuperior 16#02b5
/rhosymbolgreek 16#03f1
/rhotichookmod 16#02de
/rieulacirclekorean 16#3271
/rieulaparenkorean 16#3211
/rieulcirclekorean 16#3263
/rieulhieuhkorean 16#3140
/rieulkiyeokkorean 16#313a
/rieulkiyeoksioskorean 16#3169
/rieulkorean 16#3139
/rieulmieumkorean 16#313b
/rieulpansioskorean 16#316c
/rieulparenkorean 16#3203
/rieulphieuphkorean 16#313f
/rieulpieupkorean 16#313c
/rieulpieupsioskorean 16#316b
/rieulsioskorean 16#313d
/rieulthieuthkorean 16#313e
/rieultikeutkorean 16#316a
/rieulyeorinhieuhkorean 16#316d
/rightangle 16#221f
/righttackbelowcmb 16#0319
/righttriangle 16#22bf
/rihiragana 16#308a
/rikatakana 16#30ea
/rikatakanahalfwidth 16#ff98
/ring 16#02da
/ringbelowcmb 16#0325
/ringcmb 16#030a
/ringhalfleft 16#02bf
/ringhalfleftarmenian 16#0559
/ringhalfleftbelowcmb 16#031c
/ringhalfleftcentered 16#02d3
/ringhalfright 16#02be
/ringhalfrightbelowcmb 16#0339
/ringhalfrightcentered 16#02d2
/rinvertedbreve 16#0213
/rittorusquare 16#3351
/rlinebelow 16#1e5f
/rlongleg 16#027c
/rlonglegturned 16#027a
/rmonospace 16#ff52
/rohiragana 16#308d
/rokatakana 16#30ed
/rokatakanahalfwidth 16#ff9b
/roruathai 16#0e23
/rparen 16#24ad
/rrabengali 16#09dc
/rradeva 16#0931
/rragurmukhi 16#0a5c
/rreharabic 16#0691
/rrehfinalarabic 16#fb8d
/rrvocalicbengali 16#09e0
/rrvocalicdeva 16#0960
/rrvocalicgujarati 16#0ae0
/rrvocalicvowelsignbengali 16#09c4
/rrvocalicvowelsigndeva 16#0944
/rrvocalicvowelsigngujarati 16#0ac4
/rsuperior 16#f6f1
/rtblock 16#2590
/rturned 16#0279
/rturnedsuperior 16#02b4
/ruhiragana 16#308b
/rukatakana 16#30eb
/rukatakanahalfwidth 16#ff99
/rupeemarkbengali 16#09f2
/rupeesignbengali 16#09f3
/rupiah 16#f6dd
/ruthai 16#0e24
/rvocalicbengali 16#098b
/rvocalicdeva 16#090b
/rvocalicgujarati 16#0a8b
/rvocalicvowelsignbengali 16#09c3
/rvocalicvowelsigndeva 16#0943
/rvocalicvowelsigngujarati 16#0ac3
/s 16#0073
/sabengali 16#09b8
/sacute 16#015b
/sacutedotaccent 16#1e65
/sadarabic 16#0635
/sadeva 16#0938
/sadfinalarabic 16#feba
/sadinitialarabic 16#febb
/sadmedialarabic 16#febc
/sagujarati 16#0ab8
/sagurmukhi 16#0a38
/sahiragana 16#3055
/sakatakana 16#30b5
/sakatakanahalfwidth 16#ff7b
/sallallahoualayhewasallamarabic 16#fdfa
/samekh 16#05e1
/samekhdagesh 16#fb41
/samekhdageshhebrew 16#fb41
/samekhhebrew 16#05e1
/saraaathai 16#0e32
/saraaethai 16#0e41
/saraaimaimalaithai 16#0e44
/saraaimaimuanthai 16#0e43
/saraamthai 16#0e33
/saraathai 16#0e30
/saraethai 16#0e40
/saraiileftthai 16#f886
/saraiithai 16#0e35
/saraileftthai 16#f885
/saraithai 16#0e34
/saraothai 16#0e42
/saraueeleftthai 16#f888
/saraueethai 16#0e37
/saraueleftthai 16#f887
/sarauethai 16#0e36
/sarauthai 16#0e38
/sarauuthai 16#0e39
/sbopomofo 16#3119
/scaron 16#0161
/scarondotaccent 16#1e67
/scedilla 16#015f
/schwa 16#0259
/schwacyrillic 16#04d9
/schwadieresiscyrillic 16#04db
/schwahook 16#025a
/scircle 16#24e2
/scircumflex 16#015d
/scommaaccent 16#0219
/sdotaccent 16#1e61
/sdotbelow 16#1e63
/sdotbelowdotaccent 16#1e69
/seagullbelowcmb 16#033c
/second 16#2033
/secondtonechinese 16#02ca
/section 16#00a7
/seenarabic 16#0633
/seenfinalarabic 16#feb2
/seeninitialarabic 16#feb3
/seenmedialarabic 16#feb4
/segol 16#05b6
/segol13 16#05b6
/segol1f 16#05b6
/segol2c 16#05b6
/segolhebrew 16#05b6
/segolnarrowhebrew 16#05b6
/segolquarterhebrew 16#05b6
/segoltahebrew 16#0592
/segolwidehebrew 16#05b6
/seharmenian 16#057d
/sehiragana 16#305b
/sekatakana 16#30bb
/sekatakanahalfwidth 16#ff7e
/semicolon 16#003b
/semicolonarabic 16#061b
/semicolonmonospace 16#ff1b
/semicolonsmall 16#fe54
/semivoicedmarkkana 16#309c
/semivoicedmarkkanahalfwidth 16#ff9f
/sentisquare 16#3322
/sentosquare 16#3323
/seven 16#0037
/sevenarabic 16#0667
/sevenbengali 16#09ed
/sevencircle 16#2466
/sevencircleinversesansserif 16#2790
/sevendeva 16#096d
/seveneighths 16#215e
/sevengujarati 16#0aed
/sevengurmukhi 16#0a6d
/sevenhackarabic 16#0667
/sevenhangzhou 16#3027
/sevenideographicparen 16#3226
/seveninferior 16#2087
/sevenmonospace 16#ff17
/sevenoldstyle 16#f737
/sevenparen 16#247a
/sevenperiod 16#248e
/sevenpersian 16#06f7
/sevenroman 16#2176
/sevensuperior 16#2077
/seventeencircle 16#2470
/seventeenparen 16#2484
/seventeenperiod 16#2498
/seventhai 16#0e57
/sfthyphen 16#00ad
/shaarmenian 16#0577
/shabengali 16#09b6
/shacyrillic 16#0448
/shaddaarabic 16#0651
/shaddadammaarabic 16#fc61
/shaddadammatanarabic 16#fc5e
/shaddafathaarabic 16#fc60
/shaddakasraarabic 16#fc62
/shaddakasratanarabic 16#fc5f
/shade 16#2592
/shadedark 16#2593
/shadelight 16#2591
/shademedium 16#2592
/shadeva 16#0936
/shagujarati 16#0ab6
/shagurmukhi 16#0a36
/shalshelethebrew 16#0593
/shbopomofo 16#3115
/shchacyrillic 16#0449
/sheenarabic 16#0634
/sheenfinalarabic 16#feb6
/sheeninitialarabic 16#feb7
/sheenmedialarabic 16#feb8
/sheicoptic 16#03e3
/sheqel 16#20aa
/sheqelhebrew 16#20aa
/sheva 16#05b0
/sheva115 16#05b0
/sheva15 16#05b0
/sheva22 16#05b0
/sheva2e 16#05b0
/shevahebrew 16#05b0
/shevanarrowhebrew 16#05b0
/shevaquarterhebrew 16#05b0
/shevawidehebrew 16#05b0
/shhacyrillic 16#04bb
/shimacoptic 16#03ed
/shin 16#05e9
/shindagesh 16#fb49
/shindageshhebrew 16#fb49
/shindageshshindot 16#fb2c
/shindageshshindothebrew 16#fb2c
/shindageshsindot 16#fb2d
/shindageshsindothebrew 16#fb2d
/shindothebrew 16#05c1
/shinhebrew 16#05e9
/shinshindot 16#fb2a
/shinshindothebrew 16#fb2a
/shinsindot 16#fb2b
/shinsindothebrew 16#fb2b
/shook 16#0282
/sigma 16#03c3
/sigma1 16#03c2
/sigmafinal 16#03c2
/sigmalunatesymbolgreek 16#03f2
/sihiragana 16#3057
/sikatakana 16#30b7
/sikatakanahalfwidth 16#ff7c
/siluqhebrew 16#05bd
/siluqlefthebrew 16#05bd
/similar 16#223c
/sindothebrew 16#05c2
/siosacirclekorean 16#3274
/siosaparenkorean 16#3214
/sioscieuckorean 16#317e
/sioscirclekorean 16#3266
/sioskiyeokkorean 16#317a
/sioskorean 16#3145
/siosnieunkorean 16#317b
/siosparenkorean 16#3206
/siospieupkorean 16#317d
/siostikeutkorean 16#317c
/six 16#0036
/sixarabic 16#0666
/sixbengali 16#09ec
/sixcircle 16#2465
/sixcircleinversesansserif 16#278f
/sixdeva 16#096c
/sixgujarati 16#0aec
/sixgurmukhi 16#0a6c
/sixhackarabic 16#0666
/sixhangzhou 16#3026
/sixideographicparen 16#3225
/sixinferior 16#2086
/sixmonospace 16#ff16
/sixoldstyle 16#f736
/sixparen 16#2479
/sixperiod 16#248d
/sixpersian 16#06f6
/sixroman 16#2175
/sixsuperior 16#2076
/sixteencircle 16#246f
/sixteencurrencydenominatorbengali 16#09f9
/sixteenparen 16#2483
/sixteenperiod 16#2497
/sixthai 16#0e56
/slash 16#002f
/slashmonospace 16#ff0f
/slong 16#017f
/slongdotaccent 16#1e9b
/smileface 16#263a
/smonospace 16#ff53
/sofpasuqhebrew 16#05c3
/softhyphen 16#00ad
/softsigncyrillic 16#044c
/sohiragana 16#305d
/sokatakana 16#30bd
/sokatakanahalfwidth 16#ff7f
/soliduslongoverlaycmb 16#0338
/solidusshortoverlaycmb 16#0337
/sorusithai 16#0e29
/sosalathai 16#0e28
/sosothai 16#0e0b
/sosuathai 16#0e2a
/space 16#0020
/spacehackarabic 16#0020
/spade 16#2660
/spadesuitblack 16#2660
/spadesuitwhite 16#2664
/sparen 16#24ae
/squarebelowcmb 16#033b
/squarecc 16#33c4
/squarecm 16#339d
/squarediagonalcrosshatchfill 16#25a9
/squarehorizontalfill 16#25a4
/squarekg 16#338f
/squarekm 16#339e
/squarekmcapital 16#33ce
/squareln 16#33d1
/squarelog 16#33d2
/squaremg 16#338e
/squaremil 16#33d5
/squaremm 16#339c
/squaremsquared 16#33a1
/squareorthogonalcrosshatchfill 16#25a6
/squareupperlefttolowerrightfill 16#25a7
/squareupperrighttolowerleftfill 16#25a8
/squareverticalfill 16#25a5
/squarewhitewithsmallblack 16#25a3
/srsquare 16#33db
/ssabengali 16#09b7
/ssadeva 16#0937
/ssagujarati 16#0ab7
/ssangcieuckorean 16#3149
/ssanghieuhkorean 16#3185
/ssangieungkorean 16#3180
/ssangkiyeokkorean 16#3132
/ssangnieunkorean 16#3165
/ssangpieupkorean 16#3143
/ssangsioskorean 16#3146
/ssangtikeutkorean 16#3138
/ssuperior 16#f6f2
/sterling 16#00a3
/sterlingmonospace 16#ffe1
/strokelongoverlaycmb 16#0336
/strokeshortoverlaycmb 16#0335
/subset 16#2282
/subsetnotequal 16#228a
/subsetorequal 16#2286
/succeeds 16#227b
/suchthat 16#220b
/suhiragana 16#3059
/sukatakana 16#30b9
/sukatakanahalfwidth 16#ff7d
/sukunarabic 16#0652
/summation 16#2211
/sun 16#263c
/superset 16#2283
/supersetnotequal 16#228b
/supersetorequal 16#2287
/svsquare 16#33dc
/syouwaerasquare 16#337c
/t 16#0074
/tabengali 16#09a4
/tackdown 16#22a4
/tackleft 16#22a3
/tadeva 16#0924
/tagujarati 16#0aa4
/tagurmukhi 16#0a24
/taharabic 16#0637
/tahfinalarabic 16#fec2
/tahinitialarabic 16#fec3
/tahiragana 16#305f
/tahmedialarabic 16#fec4
/taisyouerasquare 16#337d
/takatakana 16#30bf
/takatakanahalfwidth 16#ff80
/tatweelarabic 16#0640
/tau 16#03c4
/tav 16#05ea
/tavdages 16#fb4a
/tavdagesh 16#fb4a
/tavdageshhebrew 16#fb4a
/tavhebrew 16#05ea
/tbar 16#0167
/tbopomofo 16#310a
/tcaron 16#0165
/tccurl 16#02a8
/tcedilla 16#0163
/tcheharabic 16#0686
/tchehfinalarabic 16#fb7b
/tchehinitialarabic 16#fb7c
/tchehmedialarabic 16#fb7d
/tcircle 16#24e3
/tcircumflexbelow 16#1e71
/tcommaaccent 16#0163
/tdieresis 16#1e97
/tdotaccent 16#1e6b
/tdotbelow 16#1e6d
/tecyrillic 16#0442
/tedescendercyrillic 16#04ad
/teharabic 16#062a
/tehfinalarabic 16#fe96
/tehhahinitialarabic 16#fca2
/tehhahisolatedarabic 16#fc0c
/tehinitialarabic 16#fe97
/tehiragana 16#3066
/tehjeeminitialarabic 16#fca1
/tehjeemisolatedarabic 16#fc0b
/tehmarbutaarabic 16#0629
/tehmarbutafinalarabic 16#fe94
/tehmedialarabic 16#fe98
/tehmeeminitialarabic 16#fca4
/tehmeemisolatedarabic 16#fc0e
/tehnoonfinalarabic 16#fc73
/tekatakana 16#30c6
/tekatakanahalfwidth 16#ff83
/telephone 16#2121
/telephoneblack 16#260e
/telishagedolahebrew 16#05a0
/telishaqetanahebrew 16#05a9
/tencircle 16#2469
/tenideographicparen 16#3229
/tenparen 16#247d
/tenperiod 16#2491
/tenroman 16#2179
/tesh 16#02a7
/tet 16#05d8
/tetdagesh 16#fb38
/tetdageshhebrew 16#fb38
/tethebrew 16#05d8
/tetsecyrillic 16#04b5
/tevirhebrew 16#059b
/tevirlefthebrew 16#059b
/thabengali 16#09a5
/thadeva 16#0925
/thagujarati 16#0aa5
/thagurmukhi 16#0a25
/thalarabic 16#0630
/thalfinalarabic 16#feac
/thanthakhatlowleftthai 16#f898
/thanthakhatlowrightthai 16#f897
/thanthakhatthai 16#0e4c
/thanthakhatupperleftthai 16#f896
/theharabic 16#062b
/thehfinalarabic 16#fe9a
/thehinitialarabic 16#fe9b
/thehmedialarabic 16#fe9c
/thereexists 16#2203
/therefore 16#2234
/theta 16#03b8
/theta1 16#03d1
/thetasymbolgreek 16#03d1
/thieuthacirclekorean 16#3279
/thieuthaparenkorean 16#3219
/thieuthcirclekorean 16#326b
/thieuthkorean 16#314c
/thieuthparenkorean 16#320b
/thirteencircle 16#246c
/thirteenparen 16#2480
/thirteenperiod 16#2494
/thonangmonthothai 16#0e11
/thook 16#01ad
/thophuthaothai 16#0e12
/thorn 16#00fe
/thothahanthai 16#0e17
/thothanthai 16#0e10
/thothongthai 16#0e18
/thothungthai 16#0e16
/thousandcyrillic 16#0482
/thousandsseparatorarabic 16#066c
/thousandsseparatorpersian 16#066c
/three 16#0033
/threearabic 16#0663
/threebengali 16#09e9
/threecircle 16#2462
/threecircleinversesansserif 16#278c
/threedeva 16#0969
/threeeighths 16#215c
/threegujarati 16#0ae9
/threegurmukhi 16#0a69
/threehackarabic 16#0663
/threehangzhou 16#3023
/threeideographicparen 16#3222
/threeinferior 16#2083
/threemonospace 16#ff13
/threenumeratorbengali 16#09f6
/threeoldstyle 16#f733
/threeparen 16#2476
/threeperiod 16#248a
/threepersian 16#06f3
/threequarters 16#00be
/threequartersemdash 16#f6de
/threeroman 16#2172
/threesuperior 16#00b3
/threethai 16#0e53
/thzsquare 16#3394
/tihiragana 16#3061
/tikatakana 16#30c1
/tikatakanahalfwidth 16#ff81
/tikeutacirclekorean 16#3270
/tikeutaparenkorean 16#3210
/tikeutcirclekorean 16#3262
/tikeutkorean 16#3137
/tikeutparenkorean 16#3202
/tilde 16#02dc
/tildebelowcmb 16#0330
/tildecmb 16#0303
/tildecomb 16#0303
/tildedoublecmb 16#0360
/tildeoperator 16#223c
/tildeoverlaycmb 16#0334
/tildeverticalcmb 16#033e
/timescircle 16#2297
/tipehahebrew 16#0596
/tipehalefthebrew 16#0596
/tippigurmukhi 16#0a70
/titlocyrilliccmb 16#0483
/tiwnarmenian 16#057f
/tlinebelow 16#1e6f
/tmonospace 16#ff54
/toarmenian 16#0569
/tohiragana 16#3068
/tokatakana 16#30c8
/tokatakanahalfwidth 16#ff84
/tonebarextrahighmod 16#02e5
/tonebarextralowmod 16#02e9
/tonebarhighmod 16#02e6
/tonebarlowmod 16#02e8
/tonebarmidmod 16#02e7
/tonefive 16#01bd
/tonesix 16#0185
/tonetwo 16#01a8
/tonos 16#0384
/tonsquare 16#3327
/topatakthai 16#0e0f
/tortoiseshellbracketleft 16#3014
/tortoiseshellbracketleftsmall 16#fe5d
/tortoiseshellbracketleftvertical 16#fe39
/tortoiseshellbracketright 16#3015
/tortoiseshellbracketrightsmall 16#fe5e
/tortoiseshellbracketrightvertical 16#fe3a
/totaothai 16#0e15
/tpalatalhook 16#01ab
/tparen 16#24af
/trademark 16#2122
/trademarksans 16#f8ea
/trademarkserif 16#f6db
/tretroflexhook 16#0288
/triagdn 16#25bc
/triaglf 16#25c4
/triagrt 16#25ba
/triagup 16#25b2
/ts 16#02a6
/tsadi 16#05e6
/tsadidagesh 16#fb46
/tsadidageshhebrew 16#fb46
/tsadihebrew 16#05e6
/tsecyrillic 16#0446
/tsere 16#05b5
/tsere12 16#05b5
/tsere1e 16#05b5
/tsere2b 16#05b5
/tserehebrew 16#05b5
/tserenarrowhebrew 16#05b5
/tserequarterhebrew 16#05b5
/tserewidehebrew 16#05b5
/tshecyrillic 16#045b
/tsuperior 16#f6f3
/ttabengali 16#099f
/ttadeva 16#091f
/ttagujarati 16#0a9f
/ttagurmukhi 16#0a1f
/tteharabic 16#0679
/ttehfinalarabic 16#fb67
/ttehinitialarabic 16#fb68
/ttehmedialarabic 16#fb69
/tthabengali 16#09a0
/tthadeva 16#0920
/tthagujarati 16#0aa0
/tthagurmukhi 16#0a20
/tturned 16#0287
/tuhiragana 16#3064
/tukatakana 16#30c4
/tukatakanahalfwidth 16#ff82
/tusmallhiragana 16#3063
/tusmallkatakana 16#30c3
/tusmallkatakanahalfwidth 16#ff6f
/twelvecircle 16#246b
/twelveparen 16#247f
/twelveperiod 16#2493
/twelveroman 16#217b
/twentycircle 16#2473
/twentyhangzhou 16#5344
/twentyparen 16#2487
/twentyperiod 16#249b
/two 16#0032
/twoarabic 16#0662
/twobengali 16#09e8
/twocircle 16#2461
/twocircleinversesansserif 16#278b
/twodeva 16#0968
/twodotenleader 16#2025
/twodotleader 16#2025
/twodotleadervertical 16#fe30
/twogujarati 16#0ae8
/twogurmukhi 16#0a68
/twohackarabic 16#0662
/twohangzhou 16#3022
/twoideographicparen 16#3221
/twoinferior 16#2082
/twomonospace 16#ff12
/twonumeratorbengali 16#09f5
/twooldstyle 16#f732
/twoparen 16#2475
/twoperiod 16#2489
/twopersian 16#06f2
/tworoman 16#2171
/twostroke 16#01bb
/twosuperior 16#00b2
/twothai 16#0e52
/twothirds 16#2154
/u 16#0075
/uacute 16#00fa
/ubar 16#0289
/ubengali 16#0989
/ubopomofo 16#3128
/ubreve 16#016d
/ucaron 16#01d4
/ucircle 16#24e4
/ucircumflex 16#00fb
/ucircumflexbelow 16#1e77
/ucyrillic 16#0443
/udattadeva 16#0951
/udblacute 16#0171
/udblgrave 16#0215
/udeva 16#0909
/udieresis 16#00fc
/udieresisacute 16#01d8
/udieresisbelow 16#1e73
/udieresiscaron 16#01da
/udieresiscyrillic 16#04f1
/udieresisgrave 16#01dc
/udieresismacron 16#01d6
/udotbelow 16#1ee5
/ugrave 16#00f9
/ugujarati 16#0a89
/ugurmukhi 16#0a09
/uhiragana 16#3046
/uhookabove 16#1ee7
/uhorn 16#01b0
/uhornacute 16#1ee9
/uhorndotbelow 16#1ef1
/uhorngrave 16#1eeb
/uhornhookabove 16#1eed
/uhorntilde 16#1eef
/uhungarumlaut 16#0171
/uhungarumlautcyrillic 16#04f3
/uinvertedbreve 16#0217
/ukatakana 16#30a6
/ukatakanahalfwidth 16#ff73
/ukcyrillic 16#0479
/ukorean 16#315c
/umacron 16#016b
/umacroncyrillic 16#04ef
/umacrondieresis 16#1e7b
/umatragurmukhi 16#0a41
/umonospace 16#ff55
/underscore 16#005f
/underscoredbl 16#2017
/underscoremonospace 16#ff3f
/underscorevertical 16#fe33
/underscorewavy 16#fe4f
/union 16#222a
/universal 16#2200
/uogonek 16#0173
/uparen 16#24b0
/upblock 16#2580
/upperdothebrew 16#05c4
/upsilon 16#03c5
/upsilondieresis 16#03cb
/upsilondieresistonos 16#03b0
/upsilonlatin 16#028a
/upsilontonos 16#03cd
/uptackbelowcmb 16#031d
/uptackmod 16#02d4
/uragurmukhi 16#0a73
/uring 16#016f
/ushortcyrillic 16#045e
/usmallhiragana 16#3045
/usmallkatakana 16#30a5
/usmallkatakanahalfwidth 16#ff69
/ustraightcyrillic 16#04af
/ustraightstrokecyrillic 16#04b1
/utilde 16#0169
/utildeacute 16#1e79
/utildebelow 16#1e75
/uubengali 16#098a
/uudeva 16#090a
/uugujarati 16#0a8a
/uugurmukhi 16#0a0a
/uumatragurmukhi 16#0a42
/uuvowelsignbengali 16#09c2
/uuvowelsigndeva 16#0942
/uuvowelsigngujarati 16#0ac2
/uvowelsignbengali 16#09c1
/uvowelsigndeva 16#0941
/uvowelsigngujarati 16#0ac1
/v 16#0076
/vadeva 16#0935
/vagujarati 16#0ab5
/vagurmukhi 16#0a35
/vakatakana 16#30f7
/vav 16#05d5
/vavdagesh 16#fb35
/vavdagesh65 16#fb35
/vavdageshhebrew 16#fb35
/vavhebrew 16#05d5
/vavholam 16#fb4b
/vavholamhebrew 16#fb4b
/vavvavhebrew 16#05f0
/vavyodhebrew 16#05f1
/vcircle 16#24e5
/vdotbelow 16#1e7f
/vecyrillic 16#0432
/veharabic 16#06a4
/vehfinalarabic 16#fb6b
/vehinitialarabic 16#fb6c
/vehmedialarabic 16#fb6d
/vekatakana 16#30f9
/venus 16#2640
/verticalbar 16#007c
/verticallineabovecmb 16#030d
/verticallinebelowcmb 16#0329
/verticallinelowmod 16#02cc
/verticallinemod 16#02c8
/vewarmenian 16#057e
/vhook 16#028b
/vikatakana 16#30f8
/viramabengali 16#09cd
/viramadeva 16#094d
/viramagujarati 16#0acd
/visargabengali 16#0983
/visargadeva 16#0903
/visargagujarati 16#0a83
/vmonospace 16#ff56
/voarmenian 16#0578
/voicediterationhiragana 16#309e
/voicediterationkatakana 16#30fe
/voicedmarkkana 16#309b
/voicedmarkkanahalfwidth 16#ff9e
/vokatakana 16#30fa
/vparen 16#24b1
/vtilde 16#1e7d
/vturned 16#028c
/vuhiragana 16#3094
/vukatakana 16#30f4
/w 16#0077
/wacute 16#1e83
/waekorean 16#3159
/wahiragana 16#308f
/wakatakana 16#30ef
/wakatakanahalfwidth 16#ff9c
/wakorean 16#3158
/wasmallhiragana 16#308e
/wasmallkatakana 16#30ee
/wattosquare 16#3357
/wavedash 16#301c
/wavyunderscorevertical 16#fe34
/wawarabic 16#0648
/wawfinalarabic 16#feee
/wawhamzaabovearabic 16#0624
/wawhamzaabovefinalarabic 16#fe86
/wbsquare 16#33dd
/wcircle 16#24e6
/wcircumflex 16#0175
/wdieresis 16#1e85
/wdotaccent 16#1e87
/wdotbelow 16#1e89
/wehiragana 16#3091
/weierstrass 16#2118
/wekatakana 16#30f1
/wekorean 16#315e
/weokorean 16#315d
/wgrave 16#1e81
/whitebullet 16#25e6
/whitecircle 16#25cb
/whitecircleinverse 16#25d9
/whitecornerbracketleft 16#300e
/whitecornerbracketleftvertical 16#fe43
/whitecornerbracketright 16#300f
/whitecornerbracketrightvertical 16#fe44
/whitediamond 16#25c7
/whitediamondcontainingblacksmalldiamond 16#25c8
/whitedownpointingsmalltriangle 16#25bf
/whitedownpointingtriangle 16#25bd
/whiteleftpointingsmalltriangle 16#25c3
/whiteleftpointingtriangle 16#25c1
/whitelenticularbracketleft 16#3016
/whitelenticularbracketright 16#3017
/whiterightpointingsmalltriangle 16#25b9
/whiterightpointingtriangle 16#25b7
/whitesmallsquare 16#25ab
/whitesmilingface 16#263a
/whitesquare 16#25a1
/whitestar 16#2606
/whitetelephone 16#260f
/whitetortoiseshellbracketleft 16#3018
/whitetortoiseshellbracketright 16#3019
/whiteuppointingsmalltriangle 16#25b5
/whiteuppointingtriangle 16#25b3
/wihiragana 16#3090
/wikatakana 16#30f0
/wikorean 16#315f
/wmonospace 16#ff57
/wohiragana 16#3092
/wokatakana 16#30f2
/wokatakanahalfwidth 16#ff66
/won 16#20a9
/wonmonospace 16#ffe6
/wowaenthai 16#0e27
/wparen 16#24b2
/wring 16#1e98
/wsuperior 16#02b7
/wturned 16#028d
/wynn 16#01bf
/x 16#0078
/xabovecmb 16#033d
/xbopomofo 16#3112
/xcircle 16#24e7
/xdieresis 16#1e8d
/xdotaccent 16#1e8b
/xeharmenian 16#056d
/xi 16#03be
/xmonospace 16#ff58
/xparen 16#24b3
/xsuperior 16#02e3
/y 16#0079
/yaadosquare 16#334e
/yabengali 16#09af
/yacute 16#00fd
/yadeva 16#092f
/yaekorean 16#3152
/yagujarati 16#0aaf
/yagurmukhi 16#0a2f
/yahiragana 16#3084
/yakatakana 16#30e4
/yakatakanahalfwidth 16#ff94
/yakorean 16#3151
/yamakkanthai 16#0e4e
/yasmallhiragana 16#3083
/yasmallkatakana 16#30e3
/yasmallkatakanahalfwidth 16#ff6c
/yatcyrillic 16#0463
/ycircle 16#24e8
/ycircumflex 16#0177
/ydieresis 16#00ff
/ydotaccent 16#1e8f
/ydotbelow 16#1ef5
/yeharabic 16#064a
/yehbarreearabic 16#06d2
/yehbarreefinalarabic 16#fbaf
/yehfinalarabic 16#fef2
/yehhamzaabovearabic 16#0626
/yehhamzaabovefinalarabic 16#fe8a
/yehhamzaaboveinitialarabic 16#fe8b
/yehhamzaabovemedialarabic 16#fe8c
/yehinitialarabic 16#fef3
/yehmedialarabic 16#fef4
/yehmeeminitialarabic 16#fcdd
/yehmeemisolatedarabic 16#fc58
/yehnoonfinalarabic 16#fc94
/yehthreedotsbelowarabic 16#06d1
/yekorean 16#3156
/yen 16#00a5
/yenmonospace 16#ffe5
/yeokorean 16#3155
/yeorinhieuhkorean 16#3186
/yerahbenyomohebrew 16#05aa
/yerahbenyomolefthebrew 16#05aa
/yericyrillic 16#044b
/yerudieresiscyrillic 16#04f9
/yesieungkorean 16#3181
/yesieungpansioskorean 16#3183
/yesieungsioskorean 16#3182
/yetivhebrew 16#059a
/ygrave 16#1ef3
/yhook 16#01b4
/yhookabove 16#1ef7
/yiarmenian 16#0575
/yicyrillic 16#0457
/yikorean 16#3162
/yinyang 16#262f
/yiwnarmenian 16#0582
/ymonospace 16#ff59
/yod 16#05d9
/yoddagesh 16#fb39
/yoddageshhebrew 16#fb39
/yodhebrew 16#05d9
/yodyodhebrew 16#05f2
/yodyodpatahhebrew 16#fb1f
/yohiragana 16#3088
/yoikorean 16#3189
/yokatakana 16#30e8
/yokatakanahalfwidth 16#ff96
/yokorean 16#315b
/yosmallhiragana 16#3087
/yosmallkatakana 16#30e7
/yosmallkatakanahalfwidth 16#ff6e
/yotgreek 16#03f3
/yoyaekorean 16#3188
/yoyakorean 16#3187
/yoyakthai 16#0e22
/yoyingthai 16#0e0d
/yparen 16#24b4
/ypogegrammeni 16#037a
/ypogegrammenigreekcmb 16#0345
/yr 16#01a6
/yring 16#1e99
/ysuperior 16#02b8
/ytilde 16#1ef9
/yturned 16#028e
/yuhiragana 16#3086
/yuikorean 16#318c
/yukatakana 16#30e6
/yukatakanahalfwidth 16#ff95
/yukorean 16#3160
/yusbigcyrillic 16#046b
/yusbigiotifiedcyrillic 16#046d
/yuslittlecyrillic 16#0467
/yuslittleiotifiedcyrillic 16#0469
/yusmallhiragana 16#3085
/yusmallkatakana 16#30e5
/yusmallkatakanahalfwidth 16#ff6d
/yuyekorean 16#318b
/yuyeokorean 16#318a
/yyabengali 16#09df
/yyadeva 16#095f
/z 16#007a
/zaarmenian 16#0566
/zacute 16#017a
/zadeva 16#095b
/zagurmukhi 16#0a5b
/zaharabic 16#0638
/zahfinalarabic 16#fec6
/zahinitialarabic 16#fec7
/zahiragana 16#3056
/zahmedialarabic 16#fec8
/zainarabic 16#0632
/zainfinalarabic 16#feb0
/zakatakana 16#30b6
/zaqefgadolhebrew 16#0595
/zaqefqatanhebrew 16#0594
/zarqahebrew 16#0598
/zayin 16#05d6
/zayindagesh 16#fb36
/zayindageshhebrew 16#fb36
/zayinhebrew 16#05d6
/zbopomofo 16#3117
/zcaron 16#017e
/zcircle 16#24e9
/zcircumflex 16#1e91
/zcurl 16#0291
/zdot 16#017c
/zdotaccent 16#017c
/zdotbelow 16#1e93
/zecyrillic 16#0437
/zedescendercyrillic 16#0499
/zedieresiscyrillic 16#04df
/zehiragana 16#305c
/zekatakana 16#30bc
/zero 16#0030
/zeroarabic 16#0660
/zerobengali 16#09e6
/zerodeva 16#0966
/zerogujarati 16#0ae6
/zerogurmukhi 16#0a66
/zerohackarabic 16#0660
/zeroinferior 16#2080
/zeromonospace 16#ff10
/zerooldstyle 16#f730
/zeropersian 16#06f0
/zerosuperior 16#2070
/zerothai 16#0e50
/zerowidthjoiner 16#feff
/zerowidthnonjoiner 16#200c
/zerowidthspace 16#200b
/zeta 16#03b6
/zhbopomofo 16#3113
/zhearmenian 16#056a
/zhebrevecyrillic 16#04c2
/zhecyrillic 16#0436
/zhedescendercyrillic 16#0497
/zhedieresiscyrillic 16#04dd
/zihiragana 16#3058
/zikatakana 16#30b8
/zinorhebrew 16#05ae
/zlinebelow 16#1e95
/zmonospace 16#ff5a
/zohiragana 16#305e
/zokatakana 16#30be
/zparen 16#24b5
/zretroflexhook 16#0290
/zstroke 16#01b6
/zuhiragana 16#305a
/zukatakana 16#30ba
.dicttomark readonly def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding .findencoding
/MacGlyphEncoding
/.notdef/.null/CR
4 index 32 95 getinterval aload pop
99 index 128 45 getinterval aload pop
/notequal/AE
/Oslash/infinity/plusminus/lessequal/greaterequal
/yen/mu1/partialdiff/summation/product
/pi/integral/ordfeminine/ordmasculine/Ohm
/ae/oslash/questiondown/exclamdown/logicalnot
/radical/florin/approxequal/increment/guillemotleft
/guillemotright/ellipsis/nbspace
174 index 203 12 getinterval aload pop
/lozenge
187 index 216 24 getinterval aload pop
/applelogo
212 index 241 7 getinterval aload pop
/overscore
220 index 249 7 getinterval aload pop
/Lslash/lslash/Scaron/scaron
/Zcaron/zcaron/brokenbar/Eth/eth
/Yacute/yacute/Thorn/thorn/minus
/multiply/onesuperior/twosuperior/threesuperior/onehalf
/onequarter/threequarters/franc/Gbreve/gbreve
/Idotaccent/Scedilla/scedilla/Cacute/cacute
/Ccaron/ccaron/dmacron
260 -1 roll pop
258 packedarray
7 1 index .registerencoding
.defineencoding
exec

%%BeginResource: file (PDF object obj_1)
1 0 obj
<<>>endobj
%%EndResource
%%EndProlog
%%Page: 1 1
%%PageBoundingBox: 0 0 3476 591
%%BeginPageSetup
/pagesave save def
4 0 obj
<</Type/Page/MediaBox [0 0 3476 591]
/Parent 3 0 R
/Resources<</ProcSet[/PDF]
>>
/Contents 5 0 R
/BleedBox 
[0 0 3476.0 591.0]
/TrimBox 
[0 0 3476.0 591.0]
/ArtBox 
[57.6411 13.8732 3355.02 577.127]
>>
endobj
%%EndPageSetup
5 0 obj
<</Length 87667>>stream
q 0.236946 0 0 0.236946 0 0 cm
0.00400162 0.216064 0.548828 RG
0.00400162 0.216064 0.548828 rg
1293.08 64.8789 m
921.691 111.305 596.723 322.324 406.805 638.852 c
322.398 786.563 267.535 938.496 246.434 1107.31 c
242.211 1166.4 242.211 1330.99 246.434 1385.86 c
271.754 1563.11 326.617 1731.93 419.469 1875.42 c
508.094 2023.13 655.809 2170.84 799.301 2259.47 c
1136.93 2462.05 1546.3 2491.59 1905.04 2339.66 c
2044.31 2280.57 2158.26 2200.39 2272.21 2090.66 c
2369.28 1989.37 2432.58 1900.74 2495.89 1774.13 c
2559.2 1651.74 2592.96 1525.13 2614.06 1385.86 c
2622.5 1322.55 2618.28 1162.18 2609.84 1094.65 c
2571.86 828.766 2457.91 592.426 2272.21 406.73 c
2082.29 216.813 1833.29 94.4219 1563.19 64.8789 c
1495.66 56.4414 1356.39 56.4414 1293.08 64.8789 c
1550.53 81.7617 m
1609.61 85.9805 1706.68 102.863 1769.98 123.965 c
2183.58 250.578 2495.89 592.426 2580.3 1014.46 c
2597.18 1107.31 2601.4 1141.07 2601.4 1250.8 c
2601.4 1368.97 2592.96 1428.06 2571.86 1525.13 c
2491.67 1841.66 2289.09 2107.54 2006.32 2267.91 c
1765.77 2407.18 1466.12 2449.39 1187.57 2394.52 c
778.199 2310.12 444.789 2010.47 313.957 1617.98 c
280.195 1504.03 263.313 1406.96 259.094 1280.35 c
250.652 1081.99 288.637 908.953 377.262 727.477 c
478.551 529.121 630.484 360.305 824.621 242.137 c
1039.86 111.305 1288.86 56.4414 1550.53 81.7617 c
5517.67 115.523 m
5492.35 128.188 5479.69 170.391 5496.57 187.27 c
5521.89 212.594 5559.88 199.934 5559.88 161.949 c
5559.88 145.066 5568.32 140.848 5580.98 153.508 c
5585.2 161.949 5597.86 178.832 5606.3 199.934 c
5618.96 233.695 l
5572.54 334.984 l
5513.45 465.816 5505.01 486.918 5492.35 499.578 c
5483.91 503.801 5479.69 512.238 y
5479.69 516.461 5500.79 516.461 5551.43 516.461 c
5606.3 516.461 5623.18 516.461 5623.18 512.238 c
5623.18 508.02 5614.74 503.801 5610.52 503.801 c
5589.42 499.578 5593.64 491.137 5635.84 389.848 c
5656.95 339.203 5656.95 339.203 5661.16 351.867 c
5665.39 360.305 5678.05 385.629 5686.49 415.172 c
5707.59 470.035 5711.81 491.137 5699.15 499.578 c
5694.93 503.801 5686.49 503.801 5682.27 503.801 c
5678.05 503.801 5678.05 508.02 5678.05 512.238 c
5678.05 516.461 5682.27 516.461 5724.47 516.461 c
5758.23 516.461 5770.89 516.461 5770.89 512.238 c
5762.45 503.801 5758.23 503.801 v
5741.35 499.578 5737.13 491.137 5673.82 326.543 c
5618.96 174.609 5597.86 136.625 5580.98 123.965 c
5568.32 115.523 5530.33 111.305 5517.67 115.523 c
10924 119.746 m
10915.5 123.965 10907.1 132.406 10907.1 136.625 c
10898.6 149.289 10898.6 178.832 10907.1 187.27 c
10928.2 212.594 10970.4 199.934 10970.4 166.168 c
10970.4 149.289 10974.6 140.848 10987.3 149.289 c
10995.7 153.508 11008.4 178.832 11021 212.594 c
11029.5 233.695 l
10974.6 351.867 l
10919.7 478.477 10911.3 495.359 10898.6 503.801 c
10894.4 503.801 10890.2 508.02 10890.2 512.238 c
10890.2 516.461 10902.9 516.461 10961.9 516.461 c
11025.3 516.461 11037.9 516.461 11037.9 512.238 c
11037.9 508.02 11033.7 503.801 11029.5 503.801 c
11012.6 503.801 11008.4 495.359 11012.6 478.477 c
11016.8 461.594 11067.5 343.426 y
11071.7 343.426 11113.9 457.375 11118.1 474.258 c
11118.1 486.918 11118.1 491.137 11113.9 495.359 c
11105.4 503.801 11101.2 503.801 11097 503.801 c
11088.6 503.801 11088.6 508.02 11088.6 512.238 c
11088.6 516.461 11092.8 516.461 11135 516.461 c
11168.7 516.461 11181.4 516.461 11181.4 512.238 c
11181.4 508.02 11173 503.801 11168.7 503.801 c
11156.1 499.578 11147.6 486.918 11088.6 330.766 c
11029.5 178.832 11012.6 136.625 10991.5 123.965 c
10974.6 111.305 10940.8 111.305 10924 119.746 c
3247.11 237.914 m
3217.57 250.578 3188.03 271.68 3171.15 301.223 c
3162.71 318.102 3162.71 326.543 3162.71 465.816 c
3158.49 630.41 3158.49 626.191 3124.72 630.41 c
3082.52 638.852 3112.06 638.852 3209.13 638.852 c
3314.64 638.852 l
3314.64 634.629 3301.98 634.629 3293.54 630.41 c
3280.88 630.41 3268.21 626.191 3264 621.969 c
3255.55 613.527 3255.55 605.086 3255.55 495.359 c
3251.34 364.527 3255.55 313.883 3268.21 297 c
3293.54 263.238 3352.63 254.797 3390.61 280.121 c
3432.81 305.441 3441.25 351.867 3437.03 508.02 c
3437.03 609.309 3432.81 621.969 3407.49 626.191 c
3399.05 630.41 3386.39 630.41 y
3382.16 630.41 3382.16 634.629 y
3382.16 638.852 3407.49 638.852 3449.69 638.852 c
3491.89 638.852 3521.44 638.852 3521.44 634.629 c
3517.22 630.41 3513 630.41 v
3496.12 630.41 3475.02 621.969 3470.79 609.309 c
3462.35 596.648 3462.35 579.766 3458.13 461.594 c
3458.13 309.66 3458.13 301.223 3424.37 271.68 c
3390.61 242.137 3373.73 237.914 3314.64 237.914 c
h
4137.61 326.543 m
4074.3 465.816 4061.64 495.359 4048.98 503.801 c
4044.77 503.801 4040.54 508.02 4040.54 512.238 c
4040.54 516.461 4053.2 516.461 4112.29 516.461 c
4171.38 516.461 4184.04 516.461 4184.04 512.238 c
4184.04 508.02 4179.82 503.801 4175.59 503.801 c
4162.93 503.801 4154.49 491.137 4158.71 482.695 c
4162.93 465.816 4213.58 347.645 4217.8 347.645 c
4222.02 347.645 4268.44 470.035 4268.44 482.695 c
4268.44 499.578 4260 503.801 4247.34 503.801 c
4238.9 503.801 4238.9 508.02 4238.9 512.238 c
4238.9 516.461 4243.12 516.461 4285.32 516.461 c
4323.31 516.461 4331.75 516.461 4331.75 512.238 c
4331.75 508.02 4327.53 503.801 4323.31 503.801 c
4310.65 503.801 4297.98 486.918 4247.34 364.527 c
4205.14 267.457 4188.26 237.914 4184.04 237.914 c
4175.59 233.695 4167.16 250.578 4137.61 326.543 c
4424.6 246.355 m
4386.61 263.238 4365.51 297 4357.07 343.426 c
4344.41 444.715 4399.27 524.902 4483.68 524.902 c
4509 524.902 4542.77 508.02 4559.65 482.695 c
4576.53 461.594 4580.75 444.715 4584.97 410.949 c
4589.19 389.848 l
4433.04 389.848 l
4437.26 372.969 l
4449.92 288.559 4513.23 254.797 4563.87 309.66 c
4580.75 326.543 4589.19 326.543 4580.75 305.441 c
4568.09 280.121 4542.77 254.797 4521.66 246.355 c
4492.12 233.695 4454.14 233.695 4424.6 246.355 c
4513.23 415.172 m
4517.45 427.832 4509 482.695 4500.56 491.137 c
4492.12 503.801 4475.24 508.02 4462.58 503.801 c
4449.92 495.359 4437.26 457.375 4437.26 427.832 c
4437.26 406.73 l
4475.24 406.73 l
4504.79 406.73 4513.23 410.949 4513.23 415.172 c
4897.28 271.68 m
4897.28 322.324 l
4893.06 343.426 4905.72 343.426 4914.16 322.324 c
4918.38 297 4956.36 263.238 4977.46 259.016 c
4998.57 254.797 5015.45 267.457 5015.45 284.34 c
5019.67 301.223 5002.79 318.102 4969.02 343.426 c
4901.5 385.629 4884.62 419.391 4897.28 465.816 c
4909.94 516.461 4964.8 541.781 5015.45 520.68 c
5032.33 512.238 5032.33 512.238 5044.99 520.68 c
5061.87 533.34 5066.09 529.121 5066.09 499.578 c
5066.09 453.156 l
5070.31 427.832 5057.65 427.832 5044.99 453.156 c
5023.89 495.359 4990.13 516.461 4969.02 499.578 c
4943.7 482.695 4952.14 461.594 5002.79 427.832 c
5036.55 406.73 5070.31 377.188 5074.54 360.305 c
5091.41 322.324 5074.54 271.68 5040.77 250.578 c
5019.67 233.695 4981.69 233.695 4947.92 242.137 c
4922.6 250.578 4922.6 250.578 4918.38 242.137 c
4901.5 229.477 4901.5 233.695 4897.28 271.68 c
6028.34 242.137 m
6003.02 250.578 5977.69 280.121 5960.81 309.66 c
5948.15 330.766 5948.15 339.203 5948.15 377.188 c
5948.15 419.391 5948.15 423.613 5960.81 448.934 c
5986.13 499.578 6015.68 520.68 6062.1 524.902 c
6116.96 529.121 6163.39 508.02 6188.71 457.375 c
6201.37 427.832 6201.37 427.832 6201.37 381.41 c
6201.37 339.203 6201.37 334.984 6188.71 305.441 c
6171.83 275.898 6146.51 250.578 6121.18 242.137 c
6095.86 233.695 6049.44 233.695 6028.34 242.137 c
6100.08 271.68 m
6112.75 284.34 6116.96 305.441 6116.96 389.848 c
6116.96 465.816 6112.75 482.695 6095.86 495.359 c
6070.54 516.461 6045.22 503.801 6041 465.816 c
6032.56 440.492 6032.56 326.543 6036.78 301.223 c
6045.22 259.016 6078.98 242.137 6100.08 271.68 c
6750.02 242.137 m
6674.05 263.238 6619.19 322.324 6602.31 402.512 c
6589.64 482.695 6627.63 571.324 6695.16 613.527 c
6758.46 655.73 6830.21 664.172 6906.17 634.629 c
6944.16 621.969 6956.82 621.969 6965.26 638.852 c
6965.26 647.293 6973.7 651.512 y
6977.92 651.512 6982.14 638.852 6982.14 583.984 c
6982.14 524.902 6977.92 512.238 6973.7 512.238 c
6969.48 512.238 6965.26 524.902 6961.04 537.563 c
6931.5 621.969 6825.99 651.512 6758.46 592.426 c
6724.7 558.664 6712.04 516.461 6712.04 444.715 c
6707.82 313.883 6766.9 246.355 6863.97 267.457 c
6897.73 271.68 6918.84 284.34 6948.38 309.66 c
6973.7 334.984 l
6973.7 313.883 l
6973.7 297 6969.48 292.781 6948.38 280.121 c
6935.71 267.457 6914.61 254.797 6901.95 250.578 c
6880.85 237.914 6872.41 237.914 6825.99 237.914 c
6792.22 237.914 6766.9 237.914 6750.02 242.137 c
7948.61 242.137 m
7927.5 250.578 7902.18 275.898 7889.52 301.223 c
7872.64 334.984 7868.42 394.07 7881.08 432.051 c
7893.74 465.816 7919.06 499.578 7948.61 516.461 c
7969.71 524.902 8007.69 529.121 8028.79 524.902 c
8066.77 512.238 8096.32 465.816 8100.54 419.391 c
8104.76 389.848 l
7957.05 389.848 l
7957.05 377.188 l
7957.05 356.086 7969.71 318.102 7990.81 301.223 c
8007.69 284.34 8016.13 280.121 8041.45 280.121 c
8054.11 284.34 8075.21 297 8083.66 309.66 c
8087.88 318.102 8096.32 322.324 y
8117.42 326.543 8075.21 263.238 8041.45 246.355 c
8024.57 237.914 7969.71 233.695 7948.61 242.137 c
8033.01 436.273 m
8033.01 457.375 8028.79 470.035 8020.35 486.918 c
8011.91 503.801 8011.91 503.801 7995.03 503.801 c
7982.37 503.801 7978.15 503.801 7969.71 491.137 c
7961.27 474.258 7948.61 419.391 7952.82 415.172 c
7952.82 410.949 7969.71 406.73 7995.03 406.73 c
8033.01 406.73 l
h
8151.18 242.137 m
8146.96 267.457 8146.96 292.781 v
8146.96 343.426 8151.18 347.645 8163.84 318.102 c
8180.73 288.559 8214.49 254.797 8235.59 254.797 c
8252.47 254.797 8269.35 271.68 8269.35 288.559 c
8269.35 305.441 8260.91 313.883 8218.71 343.426 c
8176.5 377.188 8163.84 385.629 8151.18 406.73 c
8138.52 436.273 8146.96 486.918 8168.06 508.02 c
8193.39 529.121 8235.59 533.34 8265.13 520.68 c
8282.02 512.238 8290.45 512.238 8298.89 520.68 c
8303.12 533.34 8315.78 529.121 8315.78 512.238 c
8315.78 465.816 l
8320 440.492 8320 432.051 8311.55 432.051 c
8303.12 440.492 8298.89 448.934 v
8290.45 474.258 8265.13 495.359 8244.03 503.801 c
8231.37 508.02 8227.15 508.02 8218.71 499.578 c
8193.39 482.695 8201.83 465.816 8244.03 436.273 c
8294.68 398.289 8311.55 385.629 8320 368.746 c
8328.44 351.867 8332.66 347.645 8328.44 322.324 c
8328.44 297 8324.22 288.559 8315.78 271.68 c
8290.45 237.914 8252.47 229.477 8201.83 242.137 c
8176.5 250.578 8176.5 250.578 8168.06 242.137 c
8159.63 233.695 8155.4 233.695 8151.18 242.137 c
8455.05 242.137 m
8429.73 250.578 8395.96 284.34 8387.52 313.883 c
8374.86 343.426 8374.86 410.949 8387.52 440.492 c
8395.96 465.816 8425.51 503.801 8450.83 516.461 c
8471.93 524.902 8509.91 529.121 8531.02 524.902 c
8569 512.238 8598.54 465.816 8602.76 419.391 c
8606.98 389.848 l
8531.02 389.848 l
8446.61 389.848 8450.83 394.07 8463.49 347.645 c
8471.93 318.102 8497.25 288.559 8522.57 284.34 c
8543.68 275.898 8564.78 288.559 8585.88 309.66 c
8594.32 322.324 8602.76 326.543 8602.76 322.324 c
8611.2 313.883 8577.44 267.457 8552.12 250.578 c
8535.23 242.137 8526.8 237.914 8501.47 237.914 c
8480.37 237.914 8459.27 237.914 8455.05 242.137 c
8535.23 436.273 m
8535.23 482.695 8522.57 503.801 8497.25 503.801 c
8480.37 503.801 8471.93 499.578 8463.49 478.477 c
8459.27 461.594 8450.83 419.391 8455.05 410.949 c
8476.15 406.73 8497.25 406.73 v
8535.23 406.73 l
h
9303.34 246.355 m
9256.92 267.457 9231.6 313.883 9231.6 377.188 c
9231.6 465.816 9278.02 520.68 9353.99 524.902 c
9383.53 529.121 9391.97 524.902 9408.85 516.461 c
9451.05 495.359 9463.72 457.375 9442.61 432.051 c
9434.18 419.391 9404.63 415.172 9391.97 427.832 c
9383.53 436.273 9375.09 461.594 9375.09 478.477 c
9370.87 491.137 9362.43 503.801 9349.77 503.801 c
9337.11 503.801 9320.22 486.918 9316 465.816 c
9307.56 436.273 9311.79 385.629 9320.22 356.086 c
9341.33 288.559 9387.75 263.238 9434.18 297 c
9451.05 309.66 9463.72 313.883 9463.72 309.66 c
9463.72 301.223 9446.84 280.121 9434.18 267.457 c
9408.85 246.355 9391.97 237.914 9358.21 237.914 c
9328.66 233.695 9320.22 237.914 9303.34 246.355 c
9873.09 242.137 m
9822.45 263.238 9792.91 334.984 9801.35 406.73 c
9805.57 423.613 9809.79 448.934 9814.01 457.375 c
9843.55 524.902 9923.74 550.223 9970.16 503.801 c
9982.82 495.359 l
9982.82 554.441 l
9982.82 617.75 9978.6 626.191 9957.5 630.41 c
9949.06 630.41 9944.84 634.629 y
9940.62 638.852 9957.5 638.852 10003.9 638.852 c
10067.2 638.852 l
10067.2 284.34 l
10071.4 275.898 10075.7 271.68 10084.1 271.68 c
10113.7 267.457 10101 259.016 10041.9 246.355 c
10012.4 242.137 9987.04 233.695 9982.82 233.695 c
9982.82 275.898 l
9965.94 259.016 l
9957.5 250.578 9944.84 242.137 9936.4 242.137 c
9919.52 233.695 9889.97 233.695 9873.09 242.137 c
9965.94 288.559 m
9982.82 305.441 l
9982.82 385.629 l
9982.82 453.156 9978.6 461.594 9970.16 474.258 c
9953.28 499.578 9923.74 503.801 9911.07 486.918 c
9894.2 470.035 9889.97 440.492 9889.97 389.848 c
9889.97 330.766 9894.2 301.223 9915.3 280.121 c
9927.96 263.238 9944.84 267.457 9965.94 288.559 c
10210.7 242.137 m
10185.4 250.578 10168.5 267.457 10151.6 297 c
10139 326.543 10139 326.543 10139 377.188 c
10139 423.613 10139 432.051 10151.6 453.156 c
10185.4 529.121 10282.5 550.223 10333.1 495.359 c
10350 474.258 10358.4 448.934 10362.7 419.391 c
10366.9 389.848 l
10214.9 389.848 l
10219.2 368.746 l
10219.2 343.426 10240.3 305.441 10257.1 292.781 c
10269.8 284.34 10278.2 280.121 10295.1 280.121 c
10312 280.121 10316.2 284.34 10337.3 305.441 c
10362.7 330.766 10371.1 326.543 10354.2 297 c
10341.6 271.68 10312 246.355 10290.9 242.137 c
10269.8 233.695 10231.8 233.695 10210.7 242.137 c
10290.9 440.492 m
10290.9 482.695 10278.2 503.801 10261.4 503.801 c
10252.9 503.801 10244.5 503.801 10240.3 499.578 c
10231.8 491.137 10219.2 465.816 10214.9 440.492 c
10210.7 410.949 10210.7 406.73 10257.1 406.73 c
10295.1 406.73 l
h
11443.1 242.137 m
11388.2 259.016 11354.4 322.324 11358.7 394.07 c
11362.9 444.715 11392.4 495.359 11430.4 516.461 c
11443.1 524.902 11455.7 524.902 11485.3 524.902 c
11519 524.902 11527.5 524.902 11544.4 512.238 c
11573.9 499.578 11586.6 482.695 11599.2 448.934 c
11611.9 432.051 11611.9 423.613 11611.9 377.188 c
11611.9 326.543 11607.7 305.441 11578.1 275.898 c
11557 250.578 11531.7 237.914 11493.7 237.914 c
11472.6 237.914 11451.5 237.914 11443.1 242.137 c
11502.2 259.016 m
11506.4 263.238 11514.8 275.898 11519 284.34 c
11527.5 301.223 11527.5 318.102 11527.5 381.41 c
11527.5 453.156 11527.5 461.594 11519 478.477 c
11502.2 512.238 11472.6 512.238 11455.7 482.695 c
11447.3 470.035 11447.3 461.594 11447.3 394.07 c
11443.1 351.867 11447.3 309.66 11447.3 301.223 c
11451.5 267.457 11481.1 246.355 11502.2 259.016 c
12021.3 309.66 m
12021.3 368.746 12021.3 381.41 12025.5 381.41 c
12029.7 381.41 12033.9 377.188 12033.9 364.527 c
12055 301.223 12105.7 254.797 12160.5 254.797 c
12223.8 254.797 12253.4 313.883 12211.2 356.086 c
12207 364.527 12173.2 385.629 12139.4 402.512 c
12109.9 419.391 12071.9 440.492 12063.5 448.934 c
12012.8 491.137 12004.4 554.441 12042.4 605.086 c
12080.3 651.512 12147.9 664.172 12215.4 634.629 c
12244.9 621.969 12249.2 621.969 12257.6 638.852 c
12270.3 664.172 12270.3 655.73 12274.5 600.867 c
12274.5 533.34 l
12278.7 520.68 12274.5 516.461 12270.3 516.461 c
12266 516.461 12261.8 520.68 12261.8 524.902 c
12253.4 550.223 12244.9 571.324 12228.1 588.207 c
12185.9 638.852 12114.1 643.07 12088.8 596.648 c
12071.9 562.883 12088.8 537.563 12173.2 495.359 c
12274.5 444.715 12299.8 415.172 12299.8 356.086 c
12299.8 305.441 12270.3 263.238 12219.6 246.355 c
12185.9 233.695 12135.2 233.695 12097.2 246.355 c
12059.2 259.016 12050.8 259.016 12042.4 246.355 c
12021.3 225.254 12021.3 229.477 12021.3 309.66 c
12426.4 242.137 m
12401.1 250.578 12380 267.457 12367.3 301.223 c
12350.4 326.543 12350.4 326.543 12350.4 377.188 c
12350.4 423.613 12350.4 427.832 12363.1 448.934 c
12388.4 499.578 12422.2 520.68 12468.6 524.902 c
12506.6 529.121 12527.7 520.68 12548.8 499.578 c
12565.7 482.695 12569.9 478.477 12569.9 461.594 c
12569.9 432.051 12557.2 419.391 12536.1 419.391 c
12510.8 419.391 12498.2 436.273 12489.7 465.816 c
12485.5 495.359 12477.1 503.801 12464.4 503.801 c
12443.3 503.801 12430.6 474.258 12430.6 423.613 c
12430.6 309.66 12493.9 250.578 12557.2 305.441 c
12569.9 313.883 12574.1 313.883 12574.1 309.66 c
12578.3 301.223 12561.5 280.121 12544.6 263.238 c
12540.4 259.016 12527.7 250.578 12515 246.355 c
12489.7 233.695 12451.7 233.695 12426.4 242.137 c
12856.9 242.137 m
12827.4 254.797 12802 284.34 12789.4 322.324 c
12776.7 360.305 12780.9 419.391 12797.8 453.156 c
12814.7 495.359 12852.7 520.68 12899.1 524.902 c
12928.6 529.121 12945.5 520.68 12970.8 499.578 c
12991.9 482.695 13008.8 453.156 13008.8 415.172 c
13013 389.848 l
12861.1 389.848 l
12865.3 368.746 l
12869.6 318.102 12903.3 280.121 12941.3 280.121 c
12958.2 280.121 12962.4 284.34 12983.5 305.441 c
13008.8 330.766 13017.3 326.543 13000.4 297 c
12987.7 271.68 12954 246.355 12937.1 242.137 c
12916 233.695 12878 233.695 12856.9 242.137 c
12937.1 440.492 m
12937.1 482.695 12924.4 503.801 12907.5 503.801 c
12890.7 508.02 12882.2 499.578 12869.6 478.477 c
12861.1 461.594 12856.9 419.391 12861.1 415.172 c
12861.1 410.949 12878 406.73 12903.3 406.73 c
12941.3 406.73 l
h
13464.6 242.137 m
13414 259.016 13384.4 313.883 13388.7 385.629 c
13392.9 465.816 13439.3 520.68 13506.8 524.902 c
13544.8 529.121 13565.9 520.68 13587 499.578 c
13603.9 482.695 13608.1 478.477 13608.1 461.594 c
13608.1 432.051 13595.5 419.391 13574.4 419.391 c
13549 419.391 13536.4 436.273 13527.9 465.816 c
13523.7 495.359 13515.3 503.801 13502.6 503.801 c
13460.4 503.801 13452 385.629 13489.9 322.324 c
13511.1 288.559 13544.8 275.898 13574.4 288.559 c
13582.8 292.781 13595.5 301.223 13599.7 305.441 c
13603.9 313.883 13608.1 313.883 13612.3 313.883 c
13625 305.441 13591.2 267.457 13557.5 250.578 c
13527.9 233.695 13494.2 229.477 13464.6 242.137 c
13722.1 246.355 m
13696.7 259.016 13679.9 271.68 13667.2 305.441 c
13654.5 326.543 13654.5 334.984 13654.5 377.188 c
13654.5 419.391 13654.5 427.832 13667.2 448.934 c
13684.1 491.137 13722.1 520.68 13760.1 524.902 c
13789.6 529.121 13806.5 524.902 13827.6 512.238 c
13861.3 491.137 13874 461.594 13882.4 410.949 c
13886.7 389.848 l
13730.5 389.848 l
13734.7 372.969 l
13747.4 288.559 13814.9 254.797 13861.3 309.66 c
13869.8 322.324 13878.2 326.543 13878.2 322.324 c
13886.7 313.883 13852.9 267.457 13827.6 250.578 c
13810.7 242.137 13802.3 237.914 13776.9 237.914 c
13747.4 233.695 13738.9 237.914 13722.1 246.355 c
13810.7 410.949 m
13814.9 419.391 13806.5 482.695 13798 491.137 c
13785.4 508.02 13760.1 512.238 13751.6 495.359 c
13738.9 478.477 13734.7 457.375 13734.7 432.051 c
13734.7 406.73 l
13768.5 406.73 l
13789.6 406.73 13810.7 410.949 y
13928.9 254.797 m
13924.6 284.34 13924.6 334.984 13928.9 334.984 c
13933.1 334.984 13937.3 330.766 13941.5 318.102 c
13962.6 275.898 14000.6 250.578 14025.9 259.016 c
14055.5 271.68 14051.3 301.223 14017.5 330.766 c
14004.8 339.203 13983.7 356.086 13971.1 364.527 c
13937.3 389.848 13924.6 410.949 13924.6 440.492 c
13924.6 508.02 13979.5 546.004 14042.8 520.68 c
14068.1 512.238 14068.1 512.238 14076.6 520.68 c
14085 529.121 14089.2 529.121 14093.5 503.801 c
14101.9 440.492 14093.5 415.172 14076.6 453.156 c
14059.7 491.137 14017.5 516.461 13996.4 499.578 c
13971.1 482.695 13979.5 465.816 14021.7 436.273 c
14097.7 381.41 14110.3 364.527 14110.3 322.324 c
14110.3 275.898 14072.4 233.695 14021.7 233.695 c
14013.3 233.695 13992.2 237.914 13979.5 242.137 c
13954.2 250.578 13950 250.578 13945.7 242.137 c
13941.5 237.914 13937.3 233.695 13933.1 233.695 c
13928.9 246.355 13928.9 254.797 v
5357.3 246.355 m
5340.42 254.797 5327.75 267.457 5319.32 288.559 c
5319.32 486.918 l
5302.43 486.918 l
5289.77 486.918 5285.55 491.137 5285.55 495.359 c
5298.21 516.461 5319.32 533.34 v
5340.42 554.441 5365.74 579.766 5374.18 592.426 c
5382.62 609.309 5395.28 617.75 y
5399.5 617.75 5403.72 605.086 5403.72 567.105 c
5403.72 516.461 l
5467.03 516.461 l
5467.03 486.918 l
5403.72 486.918 l
5403.72 389.848 l
5403.72 297 5403.72 288.559 5407.94 280.121 c
5420.61 271.68 5429.04 271.68 5445.93 288.559 c
5458.59 301.223 5462.81 305.441 5462.81 297 c
5467.03 288.559 5445.93 259.016 5424.82 250.578 c
5403.72 237.914 5374.18 237.914 5357.3 246.355 c
9527.02 246.355 m
9505.92 259.016 9497.48 297 9514.36 330.766 c
9522.8 347.645 9548.13 368.746 9602.99 398.289 c
9649.41 419.391 l
9649.41 448.934 l
9649.41 474.258 9645.19 482.695 9636.75 491.137 c
9628.31 503.801 9624.09 503.801 9607.21 503.801 c
9581.89 503.801 9565 491.137 9573.45 478.477 c
9586.11 461.594 9590.33 444.715 9590.33 432.051 c
9573.45 394.07 9510.14 406.73 9510.14 448.934 c
9510.14 482.695 9543.9 512.238 9590.33 520.68 c
9636.75 533.34 9674.73 529.121 9700.06 508.02 c
9725.38 486.918 9729.6 478.477 9729.6 377.188 c
9733.82 326.543 9733.82 280.121 9738.04 280.121 c
9738.04 275.898 9742.26 280.121 9750.7 280.121 c
9767.58 292.781 9771.8 280.121 9750.7 263.238 c
9733.82 242.137 9721.16 237.914 9700.06 237.914 c
9674.73 237.914 9657.86 250.578 9653.63 267.457 c
9645.19 280.121 l
9632.53 271.68 l
9598.77 242.137 9552.34 233.695 9527.02 246.355 c
9636.75 297 m
9649.41 305.441 l
9649.41 351.867 l
9649.41 402.512 9649.41 402.512 9615.65 372.969 c
9586.11 347.645 9577.67 318.102 9594.55 301.223 c
9602.99 288.559 9615.65 288.559 9636.75 297 c
3550.98 250.578 m
3550.98 254.797 3555.2 254.797 v
3580.52 263.238 3580.52 263.238 3580.52 381.41 c
3580.52 482.695 3576.3 491.137 3572.08 495.359 c
3563.64 503.801 3559.42 503.801 3555.2 503.801 c
3550.98 503.801 3550.98 508.02 3550.98 512.238 c
3550.98 516.461 3559.42 516.461 3605.84 516.461 c
3664.93 516.461 l
3664.93 486.918 l
3681.81 503.801 l
3707.13 520.68 3728.23 529.121 3753.56 524.902 c
3778.88 524.902 3791.54 512.238 3804.2 486.918 c
3812.64 470.035 3816.86 465.816 3816.86 385.629 c
3816.86 280.121 3816.86 263.238 3833.75 259.016 c
3837.96 254.797 3846.41 250.578 3846.41 246.355 c
3816.86 242.137 3774.66 242.137 v
3707.13 242.137 3690.25 246.355 3715.57 259.016 c
3719.8 259.016 3728.23 267.457 3732.46 271.68 c
3736.68 284.34 3736.68 453.156 3732.46 465.816 c
3724.02 491.137 3694.47 491.137 3673.37 465.816 c
3664.93 453.156 3664.93 453.156 3664.93 360.305 c
3664.93 267.457 l
3669.15 263.238 3673.37 259.016 3677.59 259.016 c
3698.7 246.355 3686.03 242.137 3618.51 242.137 c
3572.08 242.137 3550.98 246.355 3550.98 250.578 c
3880.17 246.355 m
3880.17 250.578 3880.17 254.797 3884.39 254.797 c
3905.49 263.238 3909.71 263.238 3909.71 381.41 c
3909.71 482.695 3905.49 491.137 3901.27 499.578 c
3897.05 503.801 3888.61 503.801 3884.39 503.801 c
3880.17 503.801 3880.17 508.02 3880.17 512.238 c
3880.17 516.461 3888.61 516.461 3935.04 516.461 c
3994.12 516.461 l
3994.12 271.68 l
3998.34 263.238 4006.78 259.016 4011 254.797 c
4040.54 246.355 4023.66 242.137 3951.91 242.137 c
3909.71 242.137 3880.17 246.355 y
4622.95 246.355 m
4622.95 250.578 4627.18 254.797 4635.62 259.016 c
4644.05 263.238 4648.28 267.457 4652.5 275.898 c
4656.72 297 4656.72 474.258 4648.28 486.918 c
4648.28 499.578 4639.84 503.801 4631.39 503.801 c
4627.18 503.801 4622.95 508.02 4622.95 512.238 c
4622.95 516.461 4631.39 516.461 4677.82 516.461 c
4736.9 516.461 l
4736.9 486.918 l
4736.9 457.375 4736.9 457.375 4741.13 465.816 c
4774.89 520.68 4825.53 541.781 4846.63 516.461 c
4859.29 508.02 4859.29 499.578 4859.29 478.477 c
4855.07 448.934 4821.31 436.273 4800.21 457.375 c
4783.33 470.035 4770.67 470.035 4758.01 453.156 c
4741.13 436.273 4736.9 415.172 4736.9 343.426 c
4732.68 271.68 4736.9 263.238 4758.01 254.797 c
4787.55 246.355 4770.67 242.137 4698.92 242.137 c
4656.72 242.137 4622.95 246.355 y
5116.74 246.355 m
5116.74 250.578 5120.96 254.797 5125.18 254.797 c
5146.28 259.016 5150.5 267.457 5150.5 381.41 c
5150.5 482.695 5146.28 491.137 5142.06 495.359 c
5133.62 503.801 5129.4 503.801 5125.18 503.801 c
5116.74 503.801 5116.74 508.02 5116.74 512.238 c
5116.74 516.461 5125.18 516.461 5175.82 516.461 c
5234.91 516.461 l
5234.91 267.457 l
5234.91 263.238 5243.35 259.016 5251.79 254.797 c
5281.33 246.355 5264.45 242.137 5192.7 242.137 c
5142.06 242.137 5116.74 246.355 y
6247.8 246.355 m
6247.8 250.578 6252.02 254.797 6260.46 254.797 c
6285.78 259.016 6285.78 259.016 6285.78 381.41 c
6285.78 486.918 l
6264.68 486.918 l
6247.8 486.918 6247.8 491.137 6247.8 503.801 c
6247.8 516.461 6247.8 516.461 6264.68 516.461 c
6281.56 516.461 l
6285.78 550.223 l
6290 617.75 6327.98 651.512 6395.51 651.512 c
6446.15 651.512 6471.48 638.852 6471.48 605.086 c
6471.48 588.207 6454.59 575.547 6429.27 575.547 c
6408.17 575.547 6395.51 588.207 6399.73 605.086 c
6403.95 626.191 6399.73 630.41 6387.07 630.41 c
6370.19 630.41 6370.19 626.191 6370.19 571.324 c
6370.19 516.461 l
6387.07 516.461 l
6403.95 516.461 6408.17 516.461 6408.17 503.801 c
6408.17 491.137 6403.95 486.918 6387.07 486.918 c
6370.19 486.918 l
6370.19 381.41 l
6370.19 259.016 6365.96 259.016 6391.29 254.797 c
6425.05 246.355 6399.73 242.137 6327.98 242.137 c
6281.56 242.137 6247.8 246.355 y
7037 246.355 m
7037 250.578 7041.23 254.797 7045.45 259.016 c
7053.89 259.016 7058.11 267.457 7062.33 271.68 c
7062.33 609.309 l
7058.11 617.75 7053.89 626.191 7045.45 626.191 c
7024.34 638.852 7032.79 638.852 7091.87 638.852 c
7146.73 638.852 l
7146.73 486.918 l
7150.95 486.918 7155.18 491.137 7159.39 499.578 c
7172.06 512.238 7205.82 524.902 7226.92 524.902 c
7260.68 529.121 7286.01 503.801 7294.45 474.258 c
7298.67 465.816 7298.67 419.391 7298.67 368.746 c
7298.67 322.324 7302.89 275.898 7302.89 271.68 c
7307.11 267.457 7315.55 259.016 7319.77 259.016 c
7345.09 246.355 7328.21 242.137 7260.68 242.137 c
7193.16 242.137 7180.5 246.355 7201.6 259.016 c
7205.82 259.016 7214.26 267.457 7214.26 271.68 c
7218.48 288.559 7218.48 453.156 7214.26 470.035 c
7210.04 495.359 7180.5 491.137 7155.18 461.594 c
7146.73 448.934 l
7146.73 271.68 l
7150.95 267.457 7155.18 259.016 7163.62 259.016 c
7167.84 254.797 7176.28 250.578 7176.28 246.355 c
7146.73 242.137 7104.53 242.137 v
7062.33 242.137 7037 246.355 y
7361.97 246.355 m
7361.97 250.578 7366.2 254.797 7370.41 254.797 c
7391.52 259.016 7395.74 267.457 7395.74 377.188 c
7395.74 436.273 7391.52 486.918 7391.52 491.137 c
7387.3 499.578 7383.07 503.801 7374.63 503.801 c
7366.2 503.801 7361.97 508.02 7361.97 512.238 c
7361.97 516.461 7370.41 516.461 7421.06 516.461 c
7480.14 516.461 l
7480.14 267.457 l
7480.14 263.238 7488.59 259.016 7497.02 254.797 c
7526.57 246.355 7509.69 242.137 7437.94 242.137 c
7387.3 242.137 7361.97 246.355 y
7539.23 250.578 m
7543.45 254.797 7547.67 254.797 v
7551.89 259.016 7560.33 263.238 7560.33 267.457 c
7568.77 280.121 7568.77 474.258 7564.55 491.137 c
7560.33 495.359 7551.89 503.801 7547.67 503.801 c
7543.45 503.801 7539.23 508.02 7539.23 512.238 c
7539.23 516.461 7547.67 516.461 7594.09 516.461 c
7648.96 516.461 l
7648.96 486.918 l
7648.96 486.918 7657.4 495.359 7665.84 499.578 c
7708.04 537.563 7762.91 533.34 7788.23 495.359 c
7800.89 478.477 7800.89 478.477 7805.11 377.188 c
7805.11 318.102 7805.11 267.457 7809.33 267.457 c
7809.33 263.238 7817.77 259.016 7821.99 254.797 c
7847.32 246.355 7830.43 242.137 7762.91 242.137 c
7720.7 242.137 7695.38 246.355 y
7695.38 250.578 7699.6 254.797 7703.82 259.016 c
7720.7 267.457 7724.93 284.34 7720.7 381.41 c
7720.7 470.035 7716.48 482.695 7703.82 486.918 c
7691.16 491.137 7665.84 478.477 7657.4 457.375 c
7644.74 444.715 7644.74 444.715 7648.96 360.305 c
7648.96 313.883 7653.18 271.68 7653.18 267.457 c
7653.18 263.238 7661.62 259.016 7665.84 254.797 c
7691.16 246.355 7674.28 242.137 7606.75 242.137 c
7560.33 242.137 7539.23 246.355 7539.23 250.578 c
8780.02 250.578 m
8780.02 254.797 8784.24 259.016 8792.68 259.016 c
8801.12 263.238 8813.78 271.68 8822.22 284.34 c
8826.44 297 8868.64 381.41 8910.85 474.258 c
8953.05 571.324 8986.82 647.293 8991.04 647.293 c
8995.26 647.293 9029.02 571.324 9071.22 478.477 c
9155.63 284.34 9168.29 263.238 9185.17 259.016 c
9193.61 259.016 9202.05 254.797 9202.05 250.578 c
9202.05 246.355 9180.95 242.137 9104.98 242.137 c
9012.14 242.137 8982.59 246.355 9024.8 254.797 c
9058.56 259.016 9058.56 271.68 9037.46 322.324 c
9020.58 356.086 l
8885.53 356.086 l
8872.87 334.984 l
8847.54 280.121 8855.98 259.016 8893.97 254.797 c
8902.41 254.797 8906.63 250.578 y
8910.85 246.355 8893.97 242.137 8843.32 242.137 c
8792.68 242.137 8780.02 246.355 8780.02 250.578 c
9012.14 381.41 m
9012.14 385.629 8957.27 503.801 8957.27 508.02 c
8953.05 508.02 8893.97 389.848 8893.97 381.41 c
8898.19 377.188 9012.14 377.188 9012.14 381.41 c
10404.9 250.578 m
10409.1 254.797 10413.3 254.797 v
10417.5 259.016 10426 263.238 10426 267.457 c
10434.4 280.121 10434.4 474.258 10430.2 491.137 c
10426 495.359 10417.5 503.801 10413.3 503.801 c
10409.1 503.801 10404.9 508.02 10404.9 512.238 c
10404.9 516.461 10413.3 516.461 10459.7 516.461 c
10518.8 516.461 l
10518.8 486.918 l
10531.5 499.578 l
10565.2 524.902 10603.2 533.34 10632.8 520.68 c
10645.4 516.461 10666.5 495.359 10670.7 482.695 c
10670.7 478.477 10679.2 482.695 10687.6 495.359 c
10734 537.563 10801.6 537.563 10826.9 491.137 c
10835.3 474.258 10835.3 465.816 10839.6 372.969 c
10839.6 318.102 10839.6 267.457 10843.8 267.457 c
10843.8 263.238 10852.2 259.016 10856.4 254.797 c
10881.8 246.355 10864.9 242.137 10797.4 242.137 c
10755.1 242.137 10725.6 246.355 y
10725.6 250.578 10729.8 254.797 10738.3 259.016 c
10746.7 267.457 10750.9 271.68 10755.1 292.781 c
10759.4 322.324 10755.1 465.816 10750.9 474.258 c
10738.3 495.359 10717.2 491.137 10691.8 465.816 c
10679.2 453.156 l
10679.2 364.527 l
10679.2 271.68 10679.2 271.68 10687.6 263.238 c
10700.3 250.578 l
10704.5 250.578 10708.7 250.578 10708.7 246.355 c
10708.7 246.355 10679.2 242.137 10637 242.137 c
10594.8 242.137 10565.2 246.355 y
10565.2 250.578 10569.5 254.797 10577.9 259.016 c
10590.6 267.457 l
10590.6 364.527 l
10590.6 448.934 10590.6 465.816 10586.3 474.258 c
10577.9 491.137 10561 491.137 10544.1 482.695 c
10518.8 465.816 10518.8 461.594 10518.8 360.305 c
10518.8 263.238 10518.8 263.238 10539.9 254.797 c
10561 246.355 10539.9 242.137 10476.6 242.137 c
10430.2 242.137 10404.9 246.355 10404.9 250.578 c
11658.3 246.355 m
11658.3 250.578 11662.5 254.797 11671 254.797 c
11696.3 259.016 11696.3 259.016 11696.3 381.41 c
11696.3 486.918 l
11675.2 486.918 l
11658.3 486.918 11658.3 491.137 11658.3 503.801 c
11658.3 516.461 11658.3 516.461 11675.2 516.461 c
11692.1 516.461 l
11696.3 550.223 l
11700.5 600.867 11717.4 626.191 11759.6 643.07 c
11780.7 651.512 11835.6 651.512 11856.7 643.07 c
11890.4 626.191 11890.4 592.426 11860.9 579.766 c
11831.3 567.105 11801.8 583.984 11810.2 609.309 c
11814.5 621.969 11810.2 630.41 11797.6 630.41 c
11780.7 630.41 11780.7 626.191 11780.7 571.324 c
11780.7 516.461 l
11797.6 516.461 l
11814.5 516.461 11818.7 516.461 11818.7 503.801 c
11818.7 491.137 11814.5 486.918 11797.6 486.918 c
11780.7 486.918 l
11780.7 381.41 l
11780.7 263.238 11780.7 259.016 11806 254.797 c
11835.6 246.355 11810.2 242.137 11738.5 242.137 c
11692.1 242.137 11658.3 246.355 y
12607.9 246.355 m
12607.9 250.578 12607.9 254.797 12612.1 254.797 c
12633.2 263.238 12637.4 263.238 12637.4 377.188 c
12637.4 470.035 12633.2 486.918 12629 495.359 c
12624.8 499.578 12620.6 503.801 12612.1 503.801 c
12607.9 503.801 12607.9 508.02 12607.9 512.238 c
12607.9 516.461 12616.3 516.461 12662.8 516.461 c
12721.8 516.461 l
12721.8 398.289 l
12721.8 267.457 12721.8 259.016 12742.9 254.797 c
12747.2 254.797 12755.6 250.578 12755.6 246.355 c
12726.1 242.137 12679.6 242.137 v
12637.4 242.137 12607.9 246.355 y
13051 246.355 m
13051 250.578 13055.3 254.797 13059.5 259.016 c
13067.9 259.016 13072.1 267.457 13076.4 271.68 c
13076.4 288.559 13080.6 461.594 13076.4 482.695 c
13072.1 495.359 13072.1 499.578 13059.5 503.801 c
13055.3 503.801 13051 512.238 y
13051 516.461 13063.7 516.461 13105.9 516.461 c
13160.8 516.461 l
13160.8 503.801 l
13160.8 486.918 13160.8 486.918 13173.4 499.578 c
13186.1 512.238 13219.8 524.902 13240.9 524.902 c
13266.3 529.121 13291.6 512.238 13304.3 491.137 c
13312.7 474.258 13312.7 470.035 13316.9 372.969 c
13316.9 318.102 13316.9 267.457 13321.1 267.457 c
13321.1 263.238 13329.6 259.016 13333.8 254.797 c
13359.1 246.355 13342.2 242.137 13274.7 242.137 c
13236.7 242.137 13207.2 246.355 y
13207.2 250.578 13211.4 254.797 13219.8 259.016 c
13232.5 271.68 l
13232.5 470.035 l
13219.8 478.477 l
13203 491.137 13194.5 486.918 13173.4 465.816 c
13160.8 453.156 l
13160.8 271.68 l
13165 267.457 13169.2 259.016 13177.6 259.016 c
13181.9 254.797 13190.3 250.578 13190.3 246.355 c
13160.8 242.137 13118.6 242.137 v
13076.4 242.137 13051 246.355 y
3918.15 571.324 m
3901.27 588.207 3901.27 617.75 3918.15 634.629 c
3943.48 664.172 3998.34 647.293 3998.34 609.309 c
3998.34 579.766 3977.24 558.664 3947.7 558.664 c
3935.04 558.664 3930.81 562.883 3918.15 571.324 c
5158.94 571.324 m
5125.18 605.086 5154.72 664.172 5205.36 647.293 c
5251.79 634.629 5239.13 558.664 5192.7 558.664 c
5180.04 558.664 5171.6 562.883 5158.94 571.324 c
7404.18 575.547 m
7387.3 592.426 7383.07 609.309 7395.74 630.41 c
7416.84 659.953 7467.48 655.73 7480.14 621.969 c
7488.59 592.426 7467.48 558.664 7433.72 558.664 c
7421.06 558.664 7416.84 562.883 7404.18 575.547 c
12650.1 571.324 m
12637.4 579.766 12629 600.867 12633.2 617.75 c
12637.4 630.41 12654.3 647.293 12667 651.512 c
12696.5 655.73 12726.1 634.629 12726.1 605.086 c
12726.1 571.324 12679.6 546.004 12650.1 571.324 c
9940.62 879.41 m
9927.96 883.633 9936.4 892.074 9965.94 908.953 c
10033.5 938.496 10092.6 989.141 10130.5 1048.23 c
10181.2 1119.97 10202.3 1208.6 10210.7 1347.87 c
10214.9 1381.64 10214.9 1419.62 10214.9 1428.06 c
10219.2 1440.72 l
10164.3 1444.94 l
10113.7 1444.94 l
10113.7 1474.48 l
10350 1474.48 l
10586.3 1478.7 l
10624.3 1525.13 l
10645.4 1550.45 10666.5 1579.99 10675 1584.21 c
10691.8 1605.32 10696.1 1605.32 10755.1 1550.45 c
10822.7 1491.36 10852.2 1461.82 10848 1453.38 c
10848 1444.94 10843.8 1444.94 10750.9 1444.94 c
10653.9 1440.72 l
10658.1 1267.69 l
10658.1 1090.43 l
10666.5 1081.99 l
10679.2 1073.55 10700.3 1073.55 10712.9 1081.99 c
10734 1098.87 10759.4 1145.3 10776.3 1212.82 c
10788.9 1267.69 10797.4 1263.46 10801.6 1204.38 c
10805.8 1141.07 10810 1132.63 10831.1 1111.53 c
10856.4 1094.65 10864.9 1077.77 10864.9 1031.34 c
10864.9 980.699 10848 955.379 10793.1 925.836 c
10776.3 917.395 10776.3 917.395 10645.4 917.395 c
10523 917.395 10514.6 917.395 10497.7 925.836 c
10489.3 930.055 10476.6 942.719 10472.4 951.156 c
10463.9 968.039 10463.9 976.48 10463.9 1204.38 c
10459.7 1440.72 l
10426 1440.72 l
10421.7 1398.52 l
10417.5 1335.21 10409.1 1250.8 10396.4 1212.82 c
10358.4 1052.45 10244.5 946.938 10058.8 896.293 c
10012.4 887.852 9957.5 879.41 9940.62 879.41 c
7248.02 883.633 m
7239.58 887.852 7231.14 887.852 7231.14 892.074 c
7218.48 896.293 7218.48 942.719 7218.48 1107.31 c
7218.48 1280.35 l
7205.82 1276.13 l
7184.72 1271.91 6838.65 1208.6 6834.43 1208.6 c
6830.21 1208.6 6817.55 1225.48 6821.77 1229.7 c
6821.77 1238.14 l
6825.99 1242.36 6901.95 1259.25 7020.13 1280.35 c
7125.63 1297.23 7210.04 1309.89 7214.26 1309.89 c
7218.48 1478.7 7218.48 1685.5 v
7218.48 2069.55 l
7218.48 2073.78 7226.92 2082.21 7231.14 2082.21 c
7239.58 2086.44 7404.18 2073.78 7433.72 2065.34 c
7446.38 2065.34 7459.04 2061.11 7463.26 2056.89 c
7475.92 2044.23 7471.7 2023.13 7454.82 2014.69 c
7446.38 2010.47 7433.72 2002.03 7429.5 1997.81 c
7421.06 1989.37 l
7421.06 1347.87 l
7429.5 1347.87 l
7442.16 1347.87 7442.16 1352.09 7463.26 1419.62 c
7475.92 1470.26 7480.14 1482.93 7488.59 1482.93 c
7492.8 1482.93 7564.55 1390.08 7577.21 1364.75 c
7581.43 1356.31 7581.43 1347.87 y
7581.43 1343.65 7543.45 1335.21 7501.25 1326.77 c
7421.06 1314.11 l
7416.84 1115.75 l
7416.84 892.074 7416.84 900.512 7387.3 887.852 c
7366.2 883.633 7264.91 879.41 7248.02 883.633 c
8539.46 883.633 m
8518.36 887.852 8505.69 900.512 8505.69 917.395 c
8505.69 938.496 8488.81 989.141 8476.15 1014.46 c
8459.27 1052.45 8442.39 1065.11 8374.86 1081.99 c
8357.98 1090.43 8349.54 1098.87 8362.2 1103.09 c
8387.52 1103.09 8412.84 1098.87 v
8471.93 1094.65 8526.8 1098.87 8535.23 1103.09 c
8535.23 1179.06 l
8539.46 1242.36 l
8290.45 1242.36 l
8066.77 1242.36 8037.23 1246.58 8033.01 1250.8 c
8024.57 1259.25 8024.57 1263.46 8028.79 1271.91 c
8033.01 1276.13 8058.34 1276.13 8286.23 1276.13 c
8539.46 1276.13 l
8539.46 1356.31 l
8539.46 1419.62 8539.46 1432.28 8543.68 1432.28 c
8547.9 1436.5 8581.66 1432.28 8615.42 1428.06 c
8678.73 1423.84 l
8691.39 1440.72 l
8695.61 1449.16 8712.49 1470.26 8720.93 1487.14 c
8746.25 1520.91 l
8531.02 1525.13 l
8320 1525.13 l
8320 1554.67 l
8531.02 1554.67 l
8742.04 1558.89 l
8784.24 1596.88 l
8809.56 1617.98 8834.88 1639.08 8839.1 1639.08 c
8843.32 1639.08 8860.2 1626.42 8877.09 1617.98 c
8906.63 1596.88 8902.41 1592.65 8923.51 1643.3 c
8931.95 1668.62 l
8594.32 1668.62 l
8273.57 1668.62 8256.69 1668.62 8260.91 1664.4 c
8260.91 1660.18 8265.13 1639.08 8269.35 1617.98 c
8286.23 1533.57 8252.47 1457.6 8189.16 1428.06 c
8100.54 1381.64 8003.47 1470.26 8045.67 1558.89 c
8054.11 1579.99 8075.21 1601.09 8104.76 1622.2 c
8130.08 1639.08 8155.4 1672.84 8168.06 1693.94 c
8172.29 1710.82 8176.5 1719.27 8172.29 1753.03 c
8172.29 1778.35 8172.29 1786.79 8176.5 1786.79 c
8184.95 1786.79 8218.71 1753.03 8231.37 1727.71 c
8248.25 1702.38 l
8742.04 1702.38 l
8758.91 1719.27 l
8801.12 1765.69 8851.76 1904.96 8872.87 2023.13 c
8877.09 2048.45 8881.3 2065.34 8889.75 2073.78 c
8898.19 2082.21 8898.19 2078 8957.27 2048.45 c
9062.78 1993.59 9083.88 1980.93 9088.11 1972.49 c
9092.32 1959.82 9079.66 1947.16 9062.78 1942.95 c
9041.68 1938.72 9041.68 1938.72 9016.36 1904.96 c
8974.15 1850.1 8893.97 1778.35 8818 1727.71 c
8784.24 1706.61 l
8860.2 1706.61 l
8931.95 1702.38 l
8957.27 1731.93 l
8969.93 1744.59 8986.82 1765.69 8995.26 1774.13 c
9012.14 1795.23 l
9029.02 1786.79 l
9037.46 1782.57 9075.44 1757.25 9113.43 1727.71 c
9172.51 1681.28 9185.17 1672.84 9193.61 1655.96 c
9202.05 1630.64 9197.83 1609.54 9185.17 1588.43 c
9168.29 1571.55 9147.19 1567.33 9109.21 1571.55 c
9050.12 1579.99 8969.93 1575.77 8961.49 1567.33 c
8961.49 1563.11 8969.93 1554.67 8986.82 1546.23 c
9012.14 1529.35 9024.8 1516.69 9020.58 1504.03 c
9016.36 1491.36 8995.26 1478.7 8974.15 1478.7 c
8961.49 1478.7 8944.61 1474.48 8910.85 1457.6 c
8885.53 1444.94 8843.32 1428.06 8822.22 1419.62 c
8775.8 1402.74 8775.8 1402.74 8775.8 1385.86 c
8771.58 1373.2 8767.36 1368.97 8754.7 1360.54 c
8737.81 1347.87 l
8737.81 1314.11 l
8733.59 1276.13 l
8944.61 1276.13 l
8965.71 1305.67 l
9012.14 1368.97 9045.9 1406.96 9054.34 1402.74 c
9058.56 1402.74 9083.88 1385.86 9121.87 1356.31 c
9223.16 1271.91 9231.6 1263.46 9214.71 1250.8 c
9210.5 1246.58 9151.41 1242.36 8974.15 1242.36 c
8737.81 1242.36 l
8737.81 1124.19 l
8737.81 1001.8 8733.59 972.262 8716.71 942.719 c
8708.27 925.836 8682.95 904.734 8657.63 892.074 c
8628.09 883.633 8569 879.41 8539.46 883.633 c
13477.3 883.633 m
13456.2 887.852 13443.5 900.512 13443.5 917.395 c
13443.5 938.496 13426.6 989.141 13414 1014.46 c
13397.1 1052.45 13380.2 1065.11 13312.7 1081.99 c
13295.8 1090.43 13287.4 1098.87 13300 1103.09 c
13325.4 1103.09 13350.7 1098.87 v
13409.8 1094.65 13464.6 1098.87 13473.1 1103.09 c
13473.1 1179.06 l
13477.3 1242.36 l
13228.3 1242.36 l
13004.6 1242.36 12975.1 1246.58 12970.8 1250.8 c
12962.4 1259.25 12962.4 1263.46 12966.6 1271.91 c
12970.8 1276.13 12996.2 1276.13 13224.1 1276.13 c
13477.3 1276.13 l
13477.3 1356.31 l
13477.3 1419.62 13477.3 1432.28 13481.5 1432.28 c
13485.7 1436.5 13519.5 1432.28 13553.3 1428.06 c
13616.6 1423.84 l
13629.2 1440.72 l
13633.4 1449.16 13650.3 1470.26 13658.8 1487.14 c
13684.1 1520.91 l
13468.8 1525.13 l
13257.8 1525.13 l
13257.8 1554.67 l
13468.8 1554.67 l
13679.9 1558.89 l
13722.1 1596.88 l
13747.4 1617.98 13772.7 1639.08 13776.9 1639.08 c
13781.2 1639.08 13798 1626.42 13814.9 1617.98 c
13844.5 1596.88 13840.2 1592.65 13861.3 1643.3 c
13869.8 1668.62 l
13532.2 1668.62 l
13211.4 1668.62 13194.5 1668.62 13198.7 1664.4 c
13198.7 1660.18 13203 1639.08 13207.2 1617.98 c
13224.1 1533.57 13190.3 1457.6 13127 1428.06 c
13038.4 1381.64 12941.3 1470.26 12983.5 1558.89 c
12991.9 1579.99 13013 1601.09 13042.6 1622.2 c
13067.9 1639.08 13093.2 1672.84 13105.9 1693.94 c
13110.1 1710.82 13114.3 1719.27 13110.1 1753.03 c
13110.1 1778.35 13110.1 1786.79 13114.3 1786.79 c
13122.8 1786.79 13156.5 1753.03 13169.2 1727.71 c
13186.1 1702.38 l
13679.9 1702.38 l
13696.7 1719.27 l
13738.9 1765.69 13789.6 1904.96 13810.7 2023.13 c
13814.9 2048.45 13819.1 2065.34 13827.6 2073.78 c
13836 2082.21 13836 2078 13895.1 2048.45 c
14000.6 1993.59 14021.7 1980.93 14025.9 1972.49 c
14030.2 1959.82 14017.5 1947.16 14000.6 1942.95 c
13979.5 1938.72 13979.5 1938.72 13954.2 1904.96 c
13912 1850.1 13831.8 1778.35 13755.8 1727.71 c
13722.1 1706.61 l
13798 1706.61 l
13869.8 1702.38 l
13895.1 1731.93 l
13907.8 1744.59 13924.6 1765.69 13933.1 1774.13 c
13950 1795.23 l
13966.9 1786.79 l
13975.3 1782.57 14013.3 1757.25 14051.3 1727.71 c
14110.3 1681.28 14123 1672.84 14131.4 1655.96 c
14139.9 1630.64 14135.7 1609.54 14123 1588.43 c
14106.1 1571.55 14085 1567.33 14047 1571.55 c
13988 1579.99 13907.8 1575.77 13899.3 1567.33 c
13899.3 1563.11 13907.8 1554.67 13924.6 1546.23 c
13950 1529.35 13962.6 1516.69 13958.4 1504.03 c
13954.2 1491.36 13933.1 1478.7 13912 1478.7 c
13899.3 1478.7 13882.4 1474.48 13848.7 1457.6 c
13823.4 1444.94 13781.2 1428.06 13760.1 1419.62 c
13713.6 1402.74 13713.6 1402.74 13713.6 1385.86 c
13709.4 1373.2 13705.2 1368.97 13692.5 1360.54 c
13675.6 1347.87 l
13675.6 1314.11 l
13671.4 1276.13 l
13882.4 1276.13 l
13903.5 1305.67 l
13950 1368.97 13983.7 1406.96 13992.2 1402.74 c
13996.4 1402.74 14021.7 1385.86 14059.7 1356.31 c
14161 1271.91 14169.4 1263.46 14152.5 1250.8 c
14148.3 1246.58 14089.2 1242.36 13912 1242.36 c
13675.6 1242.36 l
13675.6 1124.19 l
13675.6 1001.8 13671.4 972.262 13654.5 942.719 c
13646.1 925.836 13620.8 904.734 13595.5 892.074 c
13565.9 883.633 13506.8 879.41 13477.3 883.633 c
6581.21 887.852 m
6572.77 887.852 6568.54 896.293 6564.32 900.512 c
6555.88 913.176 6555.88 930.055 6555.88 1094.65 c
6551.66 1276.13 l
6530.56 1250.8 l
6501.02 1225.48 6467.25 1200.16 6420.83 1170.62 c
6365.96 1141.07 6361.75 1145.3 6391.29 1191.72 c
6416.61 1233.92 6454.59 1314.11 6475.7 1364.75 c
6505.24 1440.72 6534.78 1563.11 6543.22 1647.52 c
6547.44 1668.62 l
6471.48 1668.62 l
6391.29 1668.62 6387.07 1672.84 6391.29 1693.94 c
6391.29 1702.38 6391.29 1702.38 6471.48 1702.38 c
6555.88 1706.61 l
6555.88 1854.32 l
6479.92 1850.1 l
6416.61 1850.1 6403.95 1850.1 6395.51 1854.32 c
6382.85 1862.76 6387.07 1866.98 6441.93 1888.08 c
6551.66 1934.5 6644.51 1997.81 6728.92 2073.78 c
6745.8 2086.44 6758.46 2094.88 6762.68 2094.88 c
6771.12 2094.88 6944.16 1947.16 6952.6 1934.5 c
6961.04 1921.84 6956.82 1909.18 6944.16 1904.96 c
6931.5 1900.74 6923.05 1904.96 6893.51 1909.18 c
6885.07 1913.4 6868.19 1913.4 6817.55 1900.74 c
6758.46 1883.86 l
6758.46 1795.23 l
6758.46 1689.72 6754.24 1693.94 6792.22 1765.69 c
6804.89 1782.57 6813.32 1803.67 6817.55 1803.67 c
6825.99 1807.89 6834.43 1799.45 6889.29 1740.37 c
6961.04 1668.62 6965.26 1668.62 6847.09 1668.62 c
6758.46 1668.62 l
6758.46 1592.65 l
6783.78 1584.21 l
6825.99 1571.55 6868.19 1546.23 6897.73 1525.13 c
6956.82 1466.04 6973.7 1377.41 6927.28 1326.77 c
6889.29 1288.79 6847.09 1284.57 6809.11 1322.55 c
6783.78 1343.65 6779.56 1360.54 6788 1411.18 c
6796.45 1457.6 6796.45 1508.25 6788 1529.35 c
6783.78 1537.79 6775.34 1546.23 6771.12 1550.45 c
6758.46 1563.11 l
6758.46 1242.36 l
6754.24 942.719 6754.24 925.836 6745.8 913.176 c
6733.14 892.074 6716.26 887.852 6648.73 887.852 c
h
9725.38 887.852 m
9721.16 887.852 9712.72 896.293 9708.5 900.512 c
9700.06 908.953 9700.06 930.055 9700.06 1491.36 c
9700.06 2078 l
9704.28 2078 9746.48 2065.34 9797.13 2044.23 c
9868.87 2014.69 9894.2 2002.03 9911.07 2006.25 c
9927.96 2006.25 l
9957.5 2040.01 l
9974.38 2061.11 9987.04 2078 9991.26 2082.21 c
9999.7 2086.44 10008.1 2078 10092.6 2023.13 c
10164.3 1972.49 10168.5 1968.27 10168.5 1955.61 c
10172.7 1938.72 10164.3 1926.06 10147.4 1921.84 c
10126.3 1917.62 10117.9 1909.18 10079.9 1845.88 c
10058.8 1807.89 10012.4 1744.59 9982.82 1702.38 c
9953.28 1655.96 9927.96 1617.98 y
9927.96 1613.76 9940.62 1605.32 9953.28 1596.88 c
10096.8 1512.47 10164.3 1368.97 10113.7 1242.36 c
10092.6 1179.06 10037.7 1141.07 9961.72 1132.63 c
9915.3 1124.19 9911.07 1124.19 9906.86 1183.28 c
9906.86 1195.94 9902.64 1217.04 9898.41 1225.48 c
9894.2 1242.36 9894.2 1225.48 9889.97 1081.99 c
9889.97 934.277 9889.97 921.617 9881.53 908.953 c
9864.65 892.074 l
9851.99 887.852 9742.26 883.633 9725.38 887.852 c
9923.74 1314.11 m
9944.84 1326.77 9949.06 1343.65 9949.06 1428.06 c
9949.06 1512.47 9944.84 1533.57 9911.07 1588.43 c
9894.2 1613.76 l
9906.86 1693.94 l
9915.3 1761.47 9923.74 1837.43 9932.18 1934.5 c
9936.4 1964.05 l
9894.2 1964.05 l
9894.2 1634.86 l
9894.2 1314.11 9894.2 1301.45 9898.41 1301.45 c
9902.64 1301.45 9915.3 1309.89 9923.74 1314.11 c
3622.73 892.074 m
3618.51 892.074 3614.29 896.293 3605.84 896.293 c
3584.74 900.512 3584.74 904.734 3584.74 1149.52 c
3584.74 1373.2 l
3466.57 1373.2 l
3352.63 1377.41 l
3348.4 1326.77 l
3348.4 1271.91 3344.18 1259.25 3318.86 1250.8 c
3297.76 1246.58 3200.69 1242.36 3183.81 1246.58 c
3171.15 1250.8 3162.71 1255.02 3158.49 1267.69 c
3150.05 1280.35 3150.05 1288.79 3150.05 1575.77 c
3150.05 1888.08 l
3150.05 1896.52 3154.27 1900.74 3158.49 1904.96 c
3162.71 1904.96 3209.13 1883.86 3264 1862.76 c
3369.5 1820.55 l
3475.02 1820.55 l
3584.74 1816.33 l
3584.74 1959.82 l
3584.74 2082.21 3584.74 2099.1 3588.96 2099.1 c
3597.41 2103.32 3732.46 2094.88 3778.88 2086.44 c
3799.98 2086.44 3804.2 2082.21 3812.64 2073.78 c
3825.3 2056.89 3825.3 2048.45 3808.42 2031.57 c
3787.32 2010.47 3787.32 2006.25 3787.32 1909.18 c
3787.32 1816.33 l
4011 1816.33 l
4048.98 1854.32 l
4078.53 1883.86 4086.97 1892.3 4095.41 1888.08 c
4108.07 1883.86 4238.9 1807.89 4255.78 1795.23 c
4268.44 1778.35 4268.44 1765.69 4255.78 1757.25 c
4251.56 1753.03 4238.9 1744.59 4230.46 1740.37 c
4222.02 1727.71 l
4222.02 1512.47 l
4222.02 1301.45 4217.8 1297.23 4209.36 1284.57 c
4196.7 1267.69 4179.82 1263.46 4103.85 1263.46 c
4019.44 1263.46 4019.44 1263.46 4019.44 1330.99 c
4015.22 1373.2 l
3787.32 1373.2 l
3787.32 1153.73 l
3787.32 908.953 3783.1 908.953 3762 896.293 c
3749.34 892.074 3631.17 887.852 3622.73 892.074 c
3584.74 1596.88 m
3584.74 1782.57 l
3352.63 1782.57 l
3352.63 1406.96 l
3584.74 1406.96 l
h
4019.44 1596.88 m
4019.44 1782.57 l
3787.32 1782.57 l
3787.32 1406.96 l
4019.44 1406.96 l
h
11308 896.293 m
11308 900.512 11320.7 913.176 11337.6 921.617 c
11468.4 993.363 11586.6 1119.97 11658.3 1271.91 c
11717.4 1394.3 11742.7 1499.8 11755.4 1689.72 c
11759.6 1723.48 l
11552.8 1723.48 l
11329.1 1727.71 11337.6 1723.48 11341.8 1748.81 c
11346 1757.25 l
11548.6 1757.25 l
11755.4 1761.47 l
11759.6 1769.91 l
11759.6 1926.06 l
11759.6 2010.47 11763.8 2078 11763.8 2082.21 c
11768 2086.44 11772.3 2086.44 11801.8 2086.44 c
11856.7 2086.44 12004.4 2078 12017 2073.78 c
12042.4 2061.11 12038.1 2040.01 12008.6 2023.13 c
11995.9 2014.69 11983.3 2006.25 11983.3 2002.03 c
11979.1 1993.59 11974.8 1938.72 11974.8 1875.42 c
11974.8 1757.25 l
12093 1761.47 l
12211.2 1761.47 l
12244.9 1803.67 l
12261.8 1824.77 12287.1 1858.54 12299.8 1871.2 c
12320.9 1892.3 12320.9 1896.52 12333.6 1892.3 c
12337.8 1888.08 12380 1858.54 12422.2 1820.55 c
12493.9 1757.25 12502.4 1753.03 12498.2 1740.37 c
12498.2 1727.71 l
12236.5 1727.71 l
12093 1727.71 11974.8 1723.48 y
11974.8 1706.61 12012.8 1584.21 12038.1 1533.57 c
12093 1406.96 12207 1293.01 12342 1225.48 c
12363.1 1212.82 12430.6 1183.28 12481.3 1166.4 c
12506.6 1157.96 12506.6 1145.3 12485.5 1132.63 c
12451.7 1111.53 12418 1039.79 12405.3 942.719 c
12401.1 921.617 12396.9 900.512 12396.9 896.293 c
12388.4 883.633 12312.5 921.617 12249.2 972.262 c
12118.3 1081.99 12025.5 1267.69 11970.6 1525.13 c
11962.2 1563.11 11958 1588.43 11958 1579.99 c
11953.7 1550.45 11932.6 1453.38 11915.8 1398.52 c
11831.3 1145.3 11658.3 984.922 11375.5 904.734 c
11324.9 887.852 11303.8 887.852 11308 896.293 c
5673.82 896.293 m
5648.5 904.734 5644.29 917.395 5644.29 959.598 c
5644.29 984.922 l
5002.79 984.922 l
4998.57 959.598 l
4994.35 908.953 4985.91 904.734 4901.5 900.512 c
4833.97 896.293 4821.31 900.512 4808.65 921.617 c
4804.43 934.277 4804.43 972.262 4804.43 1512.47 c
4804.43 2090.66 l
4808.65 2090.66 4855.07 2073.78 4905.72 2052.68 c
5002.79 2010.47 l
5635.84 2010.47 l
5669.61 2048.45 l
5694.93 2073.78 5707.59 2082.21 5716.03 2082.21 c
5724.47 2082.21 5859.52 2006.25 5876.4 1989.37 c
5901.73 1968.27 5897.5 1959.82 5872.18 1942.95 c
5859.52 1934.5 5851.08 1926.06 5846.86 1921.84 c
5846.86 1419.62 l
5846.86 930.055 5842.64 930.055 5834.2 917.395 c
5829.98 913.176 5821.54 904.734 5813.1 900.512 c
5792 896.293 5690.71 892.074 5673.82 896.293 c
5644.29 1090.43 m
5644.29 1157.96 l
5327.75 1157.96 l
5091.41 1157.96 5015.45 1162.18 5011.23 1166.4 c
5002.79 1174.84 5002.79 1187.5 5011.23 1191.72 c
5019.67 1195.94 5057.65 1195.94 5112.52 1195.94 c
5205.36 1195.94 l
5205.36 1499.8 l
5125.18 1499.8 l
5040.77 1499.8 5036.55 1504.03 5040.77 1525.13 c
5040.77 1533.57 5040.77 1533.57 5120.96 1533.57 c
5205.36 1537.79 l
5205.36 1803.67 l
5116.74 1807.89 l
5032.33 1807.89 l
5032.33 1837.43 l
5218.03 1837.43 l
5403.72 1841.66 l
5441.71 1883.86 l
5458.59 1909.18 5475.47 1930.29 5479.69 1930.29 c
5488.13 1934.5 5496.57 1926.06 5551.43 1879.64 c
5610.52 1829 5618.96 1820.55 5614.74 1812.11 c
5614.74 1807.89 5597.86 1803.67 5509.23 1803.67 c
5403.72 1803.67 l
5403.72 1537.79 l
5437.48 1579.99 l
5454.37 1605.32 5471.25 1626.42 5475.47 1626.42 c
5479.69 1630.64 5492.35 1622.2 5547.21 1575.77 c
5614.74 1516.69 5610.52 1520.91 5606.3 1512.47 c
5597.86 1504.03 5597.86 1499.8 5500.79 1499.8 c
5403.72 1499.8 l
5403.72 1195.94 l
5420.61 1200.16 l
5441.71 1200.16 l
5467.03 1233.92 l
5488.13 1263.46 l
5479.69 1280.35 l
5467.03 1297.23 5462.81 1326.77 5462.81 1352.09 c
5462.81 1377.41 5445.93 1436.5 5429.04 1457.6 c
5416.38 1482.93 5416.38 1487.14 5450.15 1478.7 c
5517.67 1470.26 5580.98 1432.28 5602.08 1390.08 c
5627.4 1343.65 5610.52 1284.57 5568.32 1263.46 c
5564.1 1259.25 5564.1 1255.02 5597.86 1229.7 c
5614.74 1212.82 5635.84 1200.16 5635.84 1195.94 c
5640.06 1191.72 5644.29 1271.91 5644.29 1584.21 c
5644.29 1976.71 l
5002.79 1976.71 l
5002.79 1018.68 l
5644.29 1018.68 l
h
7045.45 1330.99 m
7011.68 1343.65 6990.58 1385.86 6982.14 1444.94 c
6977.92 1508.25 6956.82 1567.33 6931.5 1605.32 c
6923.05 1613.76 6918.84 1626.42 6918.84 1630.64 c
6918.84 1634.86 6944.16 1634.86 6982.14 1622.2 c
7062.33 1596.88 7134.07 1550.45 7159.39 1495.59 c
7188.94 1436.5 7172.06 1368.97 7117.19 1339.43 c
7100.31 1330.99 7062.33 1326.77 7045.45 1330.99 c
10109.4 1634.86 m
10067.2 1651.74 10041.9 1698.16 10054.6 1744.59 c
10063 1774.13 10075.7 1791.01 10101 1803.67 c
10155.9 1829 10181.2 1858.54 10181.2 1896.52 c
10181.2 1930.29 10189.6 1930.29 10214.9 1896.52 c
10231.8 1871.2 l
10316.2 1871.2 l
10404.9 1866.98 l
10396.4 1879.64 l
10379.5 1900.74 10379.5 1913.4 10375.3 1959.82 c
10375.3 2014.69 10366.9 2040.01 10350 2065.34 c
10333.1 2082.21 10333.1 2090.66 10341.6 2094.88 c
10400.6 2099.1 10472.4 2078 10514.6 2044.23 c
10573.7 2002.03 10582.1 1942.95 10544.1 1888.08 c
10531.5 1866.98 l
10582.1 1871.2 l
10632.8 1871.2 l
10662.3 1904.96 l
10683.4 1930.29 10691.8 1938.72 10700.3 1938.72 c
10708.7 1938.72 10843.8 1845.88 10860.7 1824.77 c
10873.3 1807.89 10877.5 1795.23 10873.3 1774.13 c
10860.7 1736.15 10822.7 1731.93 10755.1 1753.03 c
10725.6 1765.69 10708.7 1765.69 10687.6 1765.69 c
10662.3 1765.69 10645.4 1765.69 10645.4 1761.47 c
10645.4 1757.25 10662.3 1740.37 10687.6 1719.27 c
10742.5 1672.84 10759.4 1655.96 10755.1 1647.52 c
10755.1 1639.08 10742.5 1639.08 10468.2 1639.08 c
10278.2 1639.08 10181.2 1634.86 10177 1634.86 c
10164.3 1626.42 10130.5 1626.42 10109.4 1634.86 c
10531.5 1706.61 m
10569.5 1757.25 10594.8 1786.79 10603.2 1786.79 c
10611.7 1786.79 10615.9 1795.23 10624.3 1824.77 c
10628.5 1833.21 l
10244.5 1833.21 l
10248.7 1820.55 l
10252.9 1812.11 10252.9 1786.79 10252.9 1765.69 c
10252.9 1727.71 10252.9 1719.27 10240.3 1698.16 c
10227.6 1668.62 l
10501.9 1668.62 l
h
7066.55 1710.82 m
7032.79 1723.48 7011.68 1753.03 7007.46 1812.11 c
6999.02 1866.98 6982.14 1921.84 6956.82 1951.39 c
6939.94 1972.49 6944.16 1976.71 6982.14 1972.49 c
7070.77 1964.05 7155.18 1921.84 7184.72 1866.98 c
7197.38 1845.88 7197.38 1786.79 7184.72 1761.47 c
7159.39 1719.27 7108.75 1693.94 7066.55 1710.82 c
8315.78 1736.15 m
8282.02 1757.25 8269.35 1778.35 8248.25 1845.88 c
8231.37 1917.62 8218.71 1938.72 8189.16 1968.27 c
8168.06 1989.37 8168.06 1993.59 8172.29 1997.81 c
8176.5 2006.25 8184.95 2006.25 8231.37 2002.03 c
8311.55 1997.81 8366.42 1980.93 8408.63 1951.39 c
8455.05 1917.62 8471.93 1845.88 8450.83 1795.23 c
8442.39 1774.13 8417.07 1744.59 8395.96 1736.15 c
8374.86 1727.71 8332.66 1727.71 8315.78 1736.15 c
13253.6 1736.15 m
13219.8 1757.25 13207.2 1778.35 13186.1 1845.88 c
13169.2 1917.62 13156.5 1938.72 13127 1968.27 c
13105.9 1989.37 13105.9 1993.59 13110.1 1997.81 c
13114.3 2006.25 13122.8 2006.25 13169.2 2002.03 c
13249.4 1997.81 13304.3 1980.93 13346.5 1951.39 c
13392.9 1917.62 13409.8 1845.88 13388.7 1795.23 c
13380.2 1774.13 13354.9 1744.59 13333.8 1736.15 c
13312.7 1727.71 13270.5 1727.71 13253.6 1736.15 c
8602.76 1803.67 m
8581.66 1807.89 8560.56 1824.77 8547.9 1841.66 c
8543.68 1850.1 8531.02 1883.86 8522.57 1913.4 c
8505.69 1985.15 8493.03 2010.47 8463.49 2040.01 c
8450.83 2052.68 8442.39 2065.34 8442.39 2069.55 c
8446.61 2082.21 8531.02 2082.21 8590.1 2065.34 c
8649.19 2052.68 8695.61 2018.91 8716.71 1972.49 c
8729.37 1951.39 8729.37 1942.95 8729.37 1917.62 c
8729.37 1871.2 8725.15 1858.54 8699.83 1829 c
8666.07 1799.45 8636.52 1791.01 8602.76 1803.67 c
13540.6 1803.67 m
13519.5 1807.89 13498.4 1824.77 13485.7 1841.66 c
13481.5 1850.1 13468.8 1883.86 13460.4 1913.4 c
13443.5 1985.15 13430.9 2010.47 13401.3 2040.01 c
13388.7 2052.68 13380.2 2065.34 13380.2 2069.55 c
13384.4 2082.21 13468.8 2082.21 13527.9 2065.34 c
13587 2052.68 13633.4 2018.91 13654.5 1972.49 c
13667.2 1951.39 13667.2 1942.95 13667.2 1917.62 c
13667.2 1871.2 13663 1858.54 13637.7 1829 c
13603.9 1799.45 13574.4 1791.01 13540.6 1803.67 c
1356.39 102.863 m
795.078 140.848 347.723 575.547 288.637 1132.63 c
284.414 1195.94 288.637 1360.54 297.078 1419.62 c
318.18 1542.01 351.941 1647.52 402.586 1753.03 c
541.859 2040.01 786.641 2246.81 1090.5 2343.88 c
1293.08 2407.18 1537.86 2411.41 1744.66 2348.1 c
1934.58 2297.46 2094.95 2200.39 2238.45 2056.89 c
2457.91 1837.43 2576.07 1558.89 2576.07 1250.8 c
2576.07 955.379 2470.57 689.496 2272.21 470.035 c
2128.71 309.66 1913.48 183.051 1698.24 132.406 c
1601.17 111.305 1449.24 98.6445 1356.39 102.863 c
1398.59 195.711 m
1394.37 195.711 1394.37 204.152 1394.37 246.355 c
1394.37 297 l
1411.25 242.137 l
1428.14 187.27 l
1445.02 246.355 l
1461.9 301.223 l
1461.9 250.578 l
1466.12 208.375 1461.9 199.934 1457.68 195.711 c
1449.24 191.492 1453.46 187.27 1474.56 187.27 c
1495.66 187.27 1499.88 191.492 1491.44 195.711 c
1487.22 199.934 1483 208.375 1487.22 254.797 c
1487.22 305.441 1487.22 309.66 1495.66 309.66 c
1504.1 313.883 1508.32 305.441 1525.2 275.898 c
1546.3 237.914 1550.53 208.375 1537.86 199.934 c
1533.64 191.492 1533.64 191.492 1546.3 195.711 c
1567.41 195.711 l
1580.07 195.711 1584.29 199.934 1575.85 204.152 c
1563.19 212.594 1563.19 250.578 1575.85 284.34 c
1580.07 305.441 1584.29 322.324 1588.51 322.324 c
1592.73 326.543 1588.51 326.543 1580.07 326.543 c
1571.63 326.543 1567.41 326.543 1567.41 322.324 c
1567.41 318.102 1571.63 318.102 v
1575.85 318.102 1571.63 292.781 1563.19 271.68 c
1558.96 259.016 l
1546.3 284.34 l
1537.86 301.223 1533.64 313.883 1533.64 318.102 c
1533.64 322.324 1529.43 322.324 1499.88 318.102 c
1461.9 313.883 l
1453.46 292.781 l
1449.24 280.121 1445.02 259.016 1440.8 250.578 c
1436.57 233.695 l
1423.91 275.898 l
1411.25 313.883 l
1377.49 313.883 l
1381.71 309.66 1385.93 297 1385.93 250.578 c
1385.93 208.375 1381.71 195.711 1377.49 191.492 c
1390.15 191.492 l
1402.81 191.492 1407.04 191.492 1398.59 195.711 c
1352.17 208.375 m
1360.61 233.695 1360.61 233.695 1352.17 221.035 c
1343.73 204.152 1326.85 199.934 1314.18 204.152 c
1309.96 204.152 1305.75 212.594 1309.96 229.477 c
1309.96 242.137 1314.18 254.797 y
1318.41 259.016 1331.07 246.355 1331.07 237.914 c
1331.07 221.035 1335.29 259.016 1335.29 275.898 c
1335.29 284.34 l
1331.07 271.68 1326.85 263.238 1318.41 263.238 c
1314.18 263.238 1314.18 309.66 1322.63 313.883 c
1335.29 313.883 l
1343.73 309.66 1347.95 305.441 1352.17 292.781 c
1356.39 280.121 l
1360.61 297 l
1360.61 309.66 1360.61 318.102 1356.39 318.102 c
1352.17 318.102 1339.51 322.324 1318.41 322.324 c
1293.08 326.543 1288.86 326.543 1293.08 322.324 c
1297.3 313.883 1288.86 212.594 1280.42 208.375 c
1267.76 204.152 1276.2 199.934 1297.3 195.711 c
1352.17 191.492 1347.95 191.492 1352.17 208.375 c
1250.88 225.254 m
1267.76 246.355 1276.2 292.781 1263.54 313.883 c
1259.32 326.543 1246.66 334.984 1217.12 339.203 c
1191.79 347.645 1187.57 347.645 1196.02 339.203 c
1200.23 334.984 1200.23 330.766 1191.79 280.121 c
1183.36 250.578 1179.13 229.477 1174.91 225.254 c
1170.69 221.035 1174.91 221.035 1187.57 216.813 c
1217.12 208.375 1234 212.594 1250.88 225.254 c
1149.59 271.68 m
1149.59 297 1145.37 326.543 1145.37 339.203 c
1145.37 364.527 l
1111.61 313.883 l
1090.5 284.34 1069.4 259.016 1065.18 259.016 c
1056.74 254.797 1056.74 254.797 1073.63 250.578 c
1086.29 246.355 1086.29 246.355 1082.07 250.578 c
1082.07 254.797 1082.07 259.016 1086.29 267.457 c
1094.73 280.121 1098.95 280.121 1111.61 275.898 c
1120.05 271.68 1124.27 271.68 1124.27 254.797 c
1124.27 246.355 1120.05 237.914 1115.83 237.914 c
1111.61 237.914 1136.93 229.477 1145.37 229.477 c
1149.59 229.477 1149.59 233.695 1149.59 271.68 c
1748.88 237.914 m
1774.21 254.797 1778.43 292.781 1761.54 326.543 c
1748.88 347.645 1732 360.305 1710.9 360.305 c
1689.8 360.305 1672.92 343.426 1672.92 318.102 c
1664.48 263.238 1715.12 212.594 1748.88 237.914 c
1824.85 267.457 m
1841.73 271.68 1845.95 275.898 1837.51 280.121 c
1833.29 280.121 1824.85 288.559 1820.63 301.223 c
1812.19 322.324 1812.19 326.543 1816.41 326.543 c
1820.63 330.766 1829.07 326.543 1833.29 318.102 c
1837.51 313.883 1845.95 309.66 y
1837.51 322.324 1833.29 339.203 v
1820.63 368.746 l
1816.41 351.867 l
1816.41 326.543 1807.97 330.766 1799.53 356.086 c
1791.09 377.188 1791.09 377.188 1795.31 381.41 c
1807.97 389.848 1816.41 389.848 1829.07 377.188 c
1841.73 364.527 l
1833.29 381.41 l
1829.07 394.07 1824.85 398.289 1820.63 398.289 c
1812.19 398.289 1753.11 372.969 1761.54 372.969 c
1765.77 372.969 1774.21 356.086 1782.64 339.203 c
1807.97 275.898 1807.97 267.457 1803.75 263.238 c
1799.53 254.797 1803.75 254.797 1824.85 267.457 c
1044.08 275.898 m
1048.3 280.121 1048.3 280.121 1031.42 280.121 c
1010.32 275.898 1001.88 284.34 1001.88 309.66 c
1006.1 343.426 1031.42 381.41 1052.52 381.41 c
1069.4 381.41 1073.63 372.969 1077.84 351.867 c
1077.84 339.203 l
1082.07 347.645 l
1090.5 364.527 1094.73 381.41 1090.5 377.188 c
1086.29 377.188 1077.84 381.41 1069.4 385.629 c
1052.52 402.512 1027.2 398.289 1006.1 372.969 c
976.555 343.426 972.336 297 997.656 280.121 c
1010.32 267.457 1039.86 267.457 1044.08 275.898 c
955.453 309.66 m
955.453 322.324 972.336 410.949 976.555 427.832 c
980.777 432.051 959.676 419.391 938.574 394.07 c
913.25 372.969 887.93 351.867 883.707 347.645 c
875.266 343.426 l
887.93 334.984 l
896.367 330.766 900.59 330.766 896.367 339.203 c
896.367 343.426 896.367 351.867 900.59 356.086 c
909.031 364.527 913.25 364.527 921.691 356.086 c
934.352 347.645 938.574 339.203 934.352 326.543 c
934.352 322.324 930.133 318.102 925.91 318.102 c
917.469 318.102 947.012 301.223 955.453 301.223 c
h
1964.12 330.766 m
1989.45 330.766 1997.89 368.746 1976.78 394.07 c
1964.12 402.512 1959.9 406.73 1938.8 406.73 c
1909.26 410.949 1900.82 419.391 1905.04 432.051 c
1905.04 444.715 1926.14 444.715 1938.8 436.273 c
1951.46 423.613 1951.46 427.832 1938.8 448.934 c
1930.36 457.375 1930.36 461.594 1930.36 457.375 c
1930.36 453.156 1926.14 448.934 1917.7 448.934 c
1900.82 448.934 1892.38 440.492 1892.38 423.613 c
1892.38 394.07 1909.26 385.629 1955.68 377.188 c
1972.56 372.969 1981 364.527 1976.78 347.645 c
1972.56 339.203 1951.46 339.203 1934.58 351.867 c
1921.92 364.527 1921.92 364.527 1934.58 339.203 c
1943.02 322.324 1947.24 322.324 1951.46 326.543 c
1951.46 330.766 1959.9 330.766 1964.12 330.766 c
2065.41 394.07 m
2073.85 402.512 2078.07 423.613 2073.85 432.051 c
2069.63 436.273 2069.63 432.051 2069.63 423.613 c
2069.63 410.949 2056.97 394.07 2044.31 398.289 c
2010.55 398.289 1968.34 470.035 1989.45 491.137 c
1993.66 499.578 2014.77 499.578 2023.21 491.137 c
2035.87 482.695 2035.87 486.918 2018.99 503.801 c
2014.77 512.238 2010.55 516.461 y
2010.55 512.238 2006.32 508.02 1997.89 503.801 c
1955.68 495.359 1951.46 440.492 1989.45 402.512 c
2014.77 377.188 2044.31 377.188 2065.41 394.07 c
824.621 398.289 m
833.063 410.949 l
820.402 406.73 l
807.742 398.289 790.859 402.512 786.641 415.172 c
782.418 423.613 807.742 453.156 816.184 453.156 c
820.402 453.156 820.402 440.492 811.961 427.832 c
811.961 419.391 811.961 419.391 816.184 427.832 c
824.621 436.273 833.063 448.934 841.504 457.375 c
854.164 478.477 l
841.504 465.816 l
820.402 453.156 816.184 461.594 833.063 486.918 c
849.945 503.801 849.945 508.02 858.387 499.578 c
866.828 491.137 871.047 478.477 866.828 465.816 c
871.047 470.035 l
883.707 486.918 l
854.164 508.02 l
841.504 520.68 824.621 529.121 y
824.621 524.902 l
828.844 516.461 816.184 503.801 795.078 474.258 c
765.539 436.273 761.316 432.051 752.875 432.051 c
748.656 432.051 l
748.656 427.832 811.961 381.41 y
816.184 389.848 824.621 398.289 v
1571.63 419.391 m
1938.8 495.359 2204.68 782.344 2246.89 1157.96 c
2251.11 1212.82 2246.89 1318.33 2238.45 1377.41 c
2175.14 1723.48 1909.26 1993.59 1563.19 2056.89 c
1491.44 2069.55 1347.95 2069.55 1280.42 2056.89 c
1111.61 2023.13 968.113 1951.39 845.723 1837.43 c
491.215 1495.59 508.094 930.055 883.707 605.086 c
989.219 512.238 1124.27 448.934 1267.76 423.613 c
1335.29 410.949 1335.29 410.949 1436.57 410.949 c
1508.32 410.949 1533.64 415.172 1571.63 419.391 c
2128.71 448.934 m
2137.16 457.375 2137.16 457.375 2128.71 457.375 c
2120.28 453.156 2111.84 465.816 2086.51 495.359 c
2069.63 516.461 2052.75 541.781 2052.75 546.004 c
2052.75 550.223 2052.75 550.223 2035.87 537.563 c
2023.21 524.902 2018.99 524.902 2027.43 520.68 c
2031.65 520.68 2052.75 503.801 2069.63 482.695 c
2094.95 453.156 2103.39 440.492 2099.18 432.051 c
2099.18 427.832 2099.18 427.832 2107.61 432.051 c
2116.05 436.273 2124.5 444.715 2128.71 448.934 c
757.098 470.035 m
769.758 482.695 773.977 499.578 765.539 529.121 c
765.539 537.563 765.539 546.004 769.758 550.223 c
778.199 558.664 778.199 562.883 786.641 558.664 c
799.301 550.223 799.301 537.563 790.859 520.68 c
786.641 508.02 790.859 512.238 803.52 529.121 c
811.961 537.563 816.184 541.781 811.961 541.781 c
807.742 541.781 803.52 541.781 803.52 546.004 c
795.078 571.324 769.758 575.547 748.656 554.441 c
740.215 546.004 740.215 541.781 740.215 508.02 c
744.434 474.258 740.215 461.594 723.332 461.594 c
706.453 461.594 702.23 486.918 714.895 508.02 c
723.332 520.68 719.113 520.68 706.453 503.801 c
689.57 491.137 681.129 474.258 689.57 482.695 c
693.793 482.695 698.012 478.477 702.23 470.035 c
710.672 457.375 714.895 453.156 727.555 453.156 c
740.215 453.156 748.656 457.375 757.098 470.035 c
2192.02 533.34 m
2179.36 550.223 2175.14 550.223 2179.36 537.563 c
2187.8 524.902 2183.58 512.238 2170.92 503.801 c
2162.48 495.359 2162.48 495.359 2145.6 512.238 c
2137.16 520.68 2132.94 529.121 2132.94 533.34 c
2132.94 537.563 2149.82 537.563 2154.04 529.121 c
2158.26 529.121 2154.04 537.563 2141.38 550.223 c
2120.28 571.324 l
2116.05 571.324 2120.28 567.105 2120.28 562.883 c
2128.71 558.664 2128.71 537.563 2124.5 537.563 c
2120.28 537.563 2111.84 546.004 2103.39 554.441 c
2086.51 571.324 2086.51 571.324 2094.95 579.766 c
2103.39 592.426 2116.05 592.426 2128.71 583.984 c
2132.94 583.984 2132.94 583.984 2124.5 596.648 c
2111.84 609.309 l
2086.51 583.984 l
2056.97 558.664 2052.75 550.223 2065.41 554.441 c
2069.63 554.441 2086.51 546.004 2111.84 520.68 c
2141.38 486.918 2149.82 478.477 2145.6 470.035 c
2145.6 465.816 2154.04 470.035 2170.92 491.137 c
2200.46 520.68 l
h
685.352 516.461 m
702.23 524.902 l
685.352 524.902 l
668.469 520.68 664.25 524.902 655.809 529.121 c
647.367 541.781 647.367 546.004 668.469 562.883 c
685.352 575.547 689.57 575.547 689.57 571.324 c
689.57 562.883 685.352 554.441 681.129 550.223 c
681.129 546.004 685.352 550.223 702.23 562.883 c
727.555 583.984 731.773 588.207 719.113 583.984 c
706.453 575.547 693.793 575.547 693.793 579.766 c
693.793 583.984 698.012 592.426 710.672 600.867 c
727.555 613.527 727.555 613.527 735.996 609.309 c
744.434 600.867 744.434 579.766 735.996 575.547 c
735.996 567.105 l
740.215 567.105 744.434 575.547 748.656 579.766 c
761.316 592.426 765.539 588.207 723.332 634.629 c
706.453 651.512 698.012 664.172 698.012 668.395 c
693.793 668.395 l
689.57 668.395 689.57 668.395 689.57 664.172 c
693.793 659.953 676.91 643.07 647.367 626.191 c
638.926 617.75 l
655.809 659.953 l
672.688 697.938 l
651.586 731.699 l
638.926 748.582 626.266 773.902 617.824 786.563 c
609.383 799.227 605.164 807.664 605.164 803.445 c
605.164 799.227 596.723 795.004 579.84 786.563 c
558.738 778.121 l
550.297 790.785 l
546.078 803.445 l
562.961 811.887 l
575.621 820.328 588.281 820.328 592.504 820.328 c
605.164 816.105 l
592.504 837.207 l
584.063 858.309 575.621 866.75 579.84 854.09 c
584.063 849.867 571.402 841.43 533.418 824.547 c
503.875 811.887 482.773 799.227 474.332 803.445 c
470.113 803.445 470.113 803.445 474.332 790.785 c
478.551 782.344 482.773 769.684 y
486.992 765.461 486.992 765.461 491.215 769.684 c
491.215 778.121 503.875 786.563 516.535 790.785 c
537.637 799.227 l
541.859 786.563 l
546.078 782.344 550.297 773.902 y
537.637 765.461 524.977 761.242 v
508.094 752.801 503.875 748.582 495.434 752.801 c
491.215 757.02 491.215 757.02 499.652 735.918 c
508.094 719.039 512.316 719.039 512.316 723.258 c
516.535 727.477 533.418 740.141 562.961 752.801 c
588.281 765.461 609.383 773.902 613.605 773.902 c
617.824 773.902 622.043 773.902 622.043 765.461 c
630.484 757.02 626.266 752.801 575.621 719.039 c
537.637 697.938 529.195 693.715 524.977 702.156 c
520.758 702.156 520.758 697.938 529.195 685.273 c
541.859 659.953 546.078 655.73 546.078 668.395 c
546.078 676.836 626.266 727.477 638.926 727.477 c
647.367 727.477 651.586 727.477 651.586 719.039 c
651.586 706.375 643.148 702.156 605.164 676.836 c
579.84 655.73 562.961 647.293 558.738 647.293 c
554.52 647.293 554.52 647.293 554.52 643.07 c
562.961 630.41 571.402 626.191 571.402 634.629 c
571.402 638.852 634.707 693.715 638.926 689.496 c
630.484 664.172 l
609.383 621.969 596.723 579.766 y
617.824 596.648 643.148 613.527 v
668.469 634.629 693.793 647.293 698.012 647.293 c
702.23 647.293 706.453 647.293 710.672 643.07 c
714.895 634.629 710.672 630.41 672.688 596.648 c
643.148 567.105 634.707 558.664 626.266 562.883 c
613.605 562.883 613.605 562.883 626.266 550.223 c
655.809 520.68 668.469 503.801 672.688 503.801 c
h
2225.79 546.004 m
2234.23 558.664 2234.23 558.664 2230 558.664 c
2221.57 558.664 2208.9 567.105 2187.8 583.984 c
2166.7 600.867 2154.04 613.527 y
2179.36 609.309 2208.9 605.086 v
2242.67 600.867 2267.99 596.648 y
2251.11 613.527 2225.79 634.629 v
2196.24 659.953 2183.58 672.613 2183.58 681.055 c
2183.58 685.273 2179.36 689.496 2175.14 681.055 c
2170.92 681.055 2166.7 672.613 2162.48 668.395 c
2162.48 664.172 2162.48 664.172 2170.92 664.172 c
2175.14 664.172 2187.8 659.953 2200.46 647.293 c
2213.13 638.852 2221.57 630.41 y
2217.34 630.41 2200.46 630.41 2179.36 634.629 c
2141.38 638.852 2141.38 638.852 2132.94 630.41 c
2120.28 621.969 2120.28 613.527 2132.94 613.527 c
2145.6 613.527 2213.13 558.664 2213.13 546.004 c
2217.34 533.34 2217.34 533.34 2225.79 546.004 c
2314.41 655.73 m
2327.07 672.613 2327.07 689.496 2318.63 702.156 c
2314.41 710.598 2314.41 710.598 2314.41 693.715 c
2322.85 655.73 2284.87 651.512 2238.45 685.273 c
2225.79 693.715 2217.34 710.598 2217.34 723.258 c
2217.34 735.918 2234.23 748.582 2251.11 744.359 c
2263.77 744.359 l
2255.33 748.582 2242.67 757.02 v
2234.23 761.242 2230 765.461 y
2230 761.242 2225.79 752.801 2217.34 744.359 c
2204.68 731.699 2204.68 727.477 2204.68 714.816 c
2204.68 659.953 2280.65 617.75 2314.41 655.73 c
2377.72 782.344 m
2369.28 790.785 2360.84 795.004 v
2348.18 803.445 l
2356.62 790.785 l
2369.28 778.121 2369.28 769.684 2360.84 757.02 c
2352.39 748.582 l
2331.29 757.02 l
2310.19 769.684 2305.97 778.121 2331.29 778.121 c
2343.96 778.121 2343.96 778.121 2318.63 790.785 c
2284.87 807.664 2280.65 807.664 2293.31 795.004 c
2301.75 790.785 2305.97 773.902 2301.75 773.902 c
2289.09 782.344 2276.43 786.563 v
2259.55 795.004 2259.55 799.227 2259.55 803.445 c
2267.99 816.105 2276.43 824.547 2289.09 820.328 c
2293.31 820.328 2297.53 820.328 2297.53 824.547 c
2293.31 824.547 2272.21 837.207 2267.99 832.988 c
2263.77 832.988 2238.45 773.902 y
2242.67 773.902 l
2251.11 778.121 2343.96 727.477 2343.96 719.039 c
2348.18 714.816 2352.39 719.039 2365.06 744.359 c
2373.5 761.242 2377.72 778.121 2377.72 782.344 c
2394.6 807.664 m
2394.6 811.887 2394.6 816.105 2398.82 820.328 c
2419.92 832.988 2415.7 858.309 2390.38 870.973 c
2373.5 883.633 2365.06 883.633 2335.52 866.75 c
2314.41 858.309 2305.97 854.09 2301.75 858.309 c
2280.65 870.973 2293.31 887.852 2318.63 892.074 c
2335.52 892.074 l
2318.63 896.293 l
2297.53 908.953 2293.31 908.953 2297.53 900.512 c
2297.53 892.074 2293.31 887.852 v
2284.87 879.41 2284.87 870.973 y
2284.87 858.309 2293.31 845.648 2314.41 837.207 c
2327.07 832.988 2331.29 832.988 2356.62 849.867 c
2381.94 862.531 2381.94 862.531 2394.6 854.09 c
2407.26 845.648 2407.26 841.43 2398.82 828.766 c
2394.6 824.547 2386.16 820.328 2373.5 820.328 c
2352.39 820.328 l
2369.28 811.887 l
2386.16 803.445 2398.82 803.445 2394.6 807.664 c
474.332 841.43 m
440.57 854.09 453.23 892.074 503.875 904.734 c
529.195 913.176 541.859 913.176 554.52 904.734 c
567.18 896.293 567.18 879.41 554.52 862.531 c
541.859 854.09 541.859 849.867 550.297 854.09 c
567.18 858.309 584.063 866.75 579.84 866.75 c
575.621 866.75 575.621 875.191 575.621 887.852 c
575.621 917.395 537.637 938.496 499.652 930.055 c
474.332 921.617 461.672 913.176 449.008 896.293 c
436.348 870.973 449.008 832.988 474.332 837.207 c
486.992 837.207 486.992 837.207 474.332 841.43 c
2284.87 1550.45 m
2289.09 1554.67 2289.09 1558.89 2293.31 1563.11 c
2297.53 1563.11 2301.75 1567.33 2301.75 1571.55 c
2301.75 1575.77 2297.53 1579.99 2289.09 1575.77 c
2280.65 1575.77 2276.43 1575.77 2272.21 1588.43 c
2259.55 1601.09 2263.77 1605.32 2284.87 1613.76 c
2293.31 1613.76 2305.97 1617.98 2310.19 1622.2 c
2314.41 1626.42 2318.63 1630.64 2322.85 1626.42 c
2327.07 1617.98 2343.96 1617.98 2343.96 1626.42 c
2343.96 1630.64 2335.52 1634.86 2327.07 1643.3 c
2305.97 1660.18 2301.75 1668.62 2318.63 1660.18 c
2327.07 1655.96 2335.52 1651.74 2335.52 1647.52 c
2335.52 1643.3 2339.73 1639.08 2343.96 1639.08 c
2348.18 1639.08 2356.62 1639.08 2365.06 1630.64 c
2373.5 1626.42 2386.16 1622.2 2390.38 1622.2 c
2403.04 1622.2 2419.92 1634.86 2419.92 1643.3 c
2419.92 1651.74 2394.6 1677.06 2365.06 1689.72 c
2352.39 1698.16 l
2365.06 1702.38 l
2377.72 1710.82 2377.72 1715.04 2369.28 1719.27 c
2343.96 1719.27 2327.07 1715.04 2318.63 1706.61 c
2305.97 1693.94 2305.97 1693.94 2314.41 1689.72 c
2318.63 1685.5 2322.85 1685.5 2327.07 1685.5 c
2331.29 1685.5 2331.29 1677.06 v
2331.29 1672.84 2327.07 1668.62 2314.41 1672.84 c
2301.75 1672.84 2297.53 1672.84 2293.31 1664.4 c
2284.87 1660.18 2280.65 1660.18 2272.21 1660.18 c
2267.99 1660.18 2259.55 1660.18 2251.11 1655.96 c
2238.45 1651.74 l
2251.11 1643.3 l
2259.55 1639.08 2272.21 1630.64 2280.65 1630.64 c
2293.31 1626.42 l
2276.43 1622.2 l
2263.77 1617.98 2251.11 1613.76 2246.89 1605.32 c
2238.45 1592.65 l
2251.11 1584.21 l
2255.33 1579.99 2263.77 1567.33 2267.99 1558.89 c
2276.43 1537.79 2284.87 1537.79 2284.87 1550.45 c
512.316 1550.45 m
520.758 1558.89 520.758 1571.55 508.094 1575.77 c
495.434 1579.99 495.434 1584.21 495.434 1596.88 c
491.215 1617.98 495.434 1617.98 516.535 1609.54 c
529.195 1605.32 529.195 1601.09 520.758 1592.65 c
516.535 1588.43 516.535 1584.21 520.758 1579.99 c
529.195 1575.77 541.859 1579.99 541.859 1592.65 c
541.859 1596.88 541.859 1601.09 546.078 1596.88 c
600.941 1575.77 634.707 1571.55 609.383 1588.43 c
600.941 1592.65 584.063 1609.54 567.18 1622.2 c
541.859 1643.3 541.859 1647.52 537.637 1668.62 c
537.637 1693.94 529.195 1702.38 524.977 1685.5 c
520.758 1664.4 512.316 1668.62 503.875 1706.61 c
499.652 1731.93 495.434 1736.15 486.992 1736.15 c
478.551 1736.15 470.113 1719.27 470.113 1706.61 c
470.113 1685.5 465.891 1681.28 449.008 1689.72 c
436.348 1698.16 432.129 1698.16 427.906 1693.94 c
423.688 1689.72 415.246 1685.5 411.027 1685.5 c
406.805 1685.5 402.586 1677.06 402.586 1672.84 c
398.367 1664.4 406.805 1651.74 415.246 1655.96 c
423.688 1660.18 457.449 1643.3 461.672 1634.86 c
470.113 1626.42 482.773 1571.55 482.773 1567.33 c
461.672 1567.33 l
440.57 1571.55 436.348 1567.33 449.008 1554.67 c
461.672 1546.23 503.875 1542.01 512.316 1550.45 c
2428.36 1702.38 m
2428.36 1723.48 2419.92 1727.71 2415.7 1715.04 c
2411.48 1710.82 2407.26 1702.38 2403.04 1702.38 c
2394.6 1702.38 2394.6 1693.94 2407.26 1685.5 c
2424.14 1677.06 2428.36 1681.28 2428.36 1702.38 c
2200.46 1702.38 m
2208.9 1706.61 2217.34 1706.61 2221.57 1706.61 c
2238.45 1710.82 2259.55 1719.27 2272.21 1731.93 c
2284.87 1744.59 2289.09 1744.59 2284.87 1736.15 c
2284.87 1715.04 2305.97 1710.82 2322.85 1731.93 c
2327.07 1736.15 2335.52 1744.59 2335.52 1748.81 c
2339.73 1753.03 2348.18 1757.25 v
2365.06 1765.69 2365.06 1765.69 2352.39 1786.79 c
2343.96 1803.67 2343.96 1803.67 2331.29 1795.23 c
2327.07 1795.23 2322.85 1791.01 2327.07 1778.35 c
2327.07 1765.69 2327.07 1761.47 2314.41 1753.03 c
2301.75 1740.37 2301.75 1740.37 2301.75 1748.81 c
2297.53 1753.03 2293.31 1761.47 2293.31 1765.69 c
2289.09 1774.13 2289.09 1774.13 2255.33 1765.69 c
2192.02 1753.03 2192.02 1753.03 2179.36 1727.71 c
2175.14 1715.04 2175.14 1715.04 2179.36 1706.61 c
2187.8 1693.94 2187.8 1693.94 2200.46 1702.38 c
862.605 1921.84 m
862.605 1926.06 858.387 1942.95 854.164 1951.39 c
849.945 1964.05 849.945 1976.71 y
858.387 1976.71 866.828 1972.49 v
875.266 1964.05 887.93 1964.05 904.809 1964.05 c
921.691 1964.05 930.133 1964.05 955.453 1976.71 c
968.113 1989.37 984.996 1997.81 984.996 2006.25 c
993.438 2014.69 993.438 2018.91 972.336 2040.01 c
963.895 2052.68 942.793 2086.44 925.91 2107.54 c
892.148 2158.18 875.266 2179.29 854.164 2179.29 c
828.844 2179.29 799.301 2137.08 786.641 2086.44 c
782.418 2056.89 782.418 2052.68 811.961 2010.47 c
837.285 1976.71 845.723 1951.39 841.504 1942.95 c
833.063 1955.61 820.402 1980.93 v
799.301 2023.13 782.418 2048.45 778.199 2052.68 c
769.758 2056.89 773.977 2044.23 786.641 2023.13 c
790.859 2014.69 803.52 1989.37 816.184 1968.27 c
828.844 1947.16 837.285 1926.06 841.504 1921.84 c
849.945 1913.4 862.605 1913.4 862.605 1921.84 c
1934.58 1972.49 m
1943.02 1980.93 1947.24 1980.93 1964.12 1972.49 c
1981 1964.05 l
1985.22 1968.27 1968.34 1985.15 1959.9 1985.15 c
1947.24 1985.15 1959.9 2023.13 1976.78 2035.79 c
1989.45 2040.01 1993.66 2056.89 1985.22 2065.34 c
1981 2073.78 1951.46 2082.21 1943.02 2078 c
1938.8 2073.78 1943.02 2069.55 1951.46 2061.11 c
1968.34 2048.45 1968.34 2044.23 1951.46 2035.79 c
1943.02 2031.57 1938.8 2027.35 1943.02 2018.91 c
1943.02 2010.47 1943.02 2006.25 1938.8 2006.25 c
1926.14 2006.25 1892.38 2031.57 1888.16 2044.23 c
1883.93 2052.68 1871.27 2052.68 1871.27 2044.23 c
1871.27 2035.79 1888.16 2014.69 1913.48 2002.03 c
1930.36 1993.59 1930.36 1980.93 1913.48 1980.93 c
1905.04 1976.71 1896.6 1980.93 1883.93 1997.81 c
1867.05 2010.47 1867.05 2014.69 1867.05 2006.25 c
1867.05 1997.81 1871.27 1989.37 1883.93 1976.71 c
1900.82 1959.82 1909.26 1959.82 1934.58 1972.49 c
2035.87 2048.45 m
2044.31 2056.89 2048.53 2065.34 2048.53 2078 c
2048.53 2099.1 l
2073.85 2094.88 l
2099.18 2094.88 2099.18 2094.88 2099.18 2107.54 c
2103.39 2124.42 2094.95 2128.64 2082.29 2120.2 c
2069.63 2111.76 2069.63 2107.54 2018.99 2115.98 c
1981 2115.98 1968.34 2120.2 1968.34 2124.42 c
1968.34 2128.64 1959.9 2128.64 1955.68 2128.64 c
1943.02 2128.64 1938.8 2124.42 1930.36 2111.76 c
1913.48 2090.66 1913.48 2078 1921.92 2078 c
1926.14 2078 1938.8 2086.44 1951.46 2094.88 c
1972.56 2103.32 1981 2107.54 1993.66 2103.32 c
2006.32 2103.32 2018.99 2099.1 2023.21 2094.88 c
2031.65 2090.66 2035.87 2086.44 2031.65 2073.78 c
2027.43 2056.89 2023.21 2048.45 2010.55 2048.45 c
2002.11 2048.45 2002.11 2044.23 2010.55 2040.01 c
2018.99 2035.79 2027.43 2040.01 2035.87 2048.45 c
1474.56 2145.52 m
1483 2162.4 1487.22 2187.73 1491.44 2200.39 c
1491.44 2217.27 1495.66 2225.71 1504.1 2225.71 c
1516.76 2234.15 1516.76 2234.15 1508.32 2251.03 c
1499.88 2259.47 1499.88 2263.69 1499.88 2289.02 c
1504.1 2310.12 1499.88 2318.56 y
1495.66 2318.56 1495.66 2322.78 1495.66 2327 c
1495.66 2335.44 1483 2335.44 1470.34 2322.78 c
1461.9 2314.34 1457.68 2314.34 1449.24 2314.34 c
1436.57 2318.56 1436.57 2310.12 1440.8 2301.68 c
1445.02 2297.46 1445.02 2289.02 1440.8 2284.79 c
1436.57 2276.36 1436.57 2267.91 1436.57 2259.47 c
1436.57 2251.03 1436.57 2242.59 1432.36 2234.15 c
1419.7 2221.49 1415.47 2191.95 1423.91 2191.95 c
1423.91 2196.17 1432.36 2196.17 1432.36 2200.39 c
1436.57 2204.61 1445.02 2208.83 1453.46 2208.83 c
1461.9 2208.83 l
1461.9 2153.96 l
1457.68 2128.64 1461.9 2103.32 1461.9 2107.54 c
1470.34 2124.42 1474.56 2145.52 v
2082.29 2128.64 m
2082.29 2132.86 2073.85 2137.08 2065.41 2137.08 c
2061.19 2141.3 2052.75 2145.52 2052.75 2149.74 c
2048.53 2166.63 2035.87 2158.18 2031.65 2137.08 c
2031.65 2124.42 l
2056.97 2124.42 l
2069.63 2128.64 2082.29 2128.64 y
2006.32 2149.74 m
2010.55 2158.18 2014.77 2166.63 2010.55 2179.29 c
2010.55 2200.39 l
1993.66 2183.5 l
1976.78 2170.84 1976.78 2158.18 1985.22 2149.74 c
1989.45 2141.3 1997.89 2141.3 2006.32 2149.74 c
1398.59 2187.73 m
1394.37 2208.83 1398.59 2213.05 1402.81 2221.49 c
1415.47 2238.37 1415.47 2242.59 1407.04 2238.37 c
1394.37 2234.15 1394.37 2242.59 1407.04 2251.03 c
1419.7 2259.47 1419.7 2263.69 1411.25 2267.91 c
1398.59 2276.36 1394.37 2276.36 1385.93 2263.69 c
1381.71 2255.25 1377.49 2251.03 1364.83 2251.03 c
1356.39 2251.03 1352.17 2255.25 y
1352.17 2259.47 1407.04 2318.56 1411.25 2318.56 c
1419.7 2322.78 1419.7 2327 1411.25 2335.44 c
1398.59 2343.88 1390.15 2339.66 1385.93 2331.22 c
1385.93 2327 1373.27 2305.89 1356.39 2289.02 c
1339.51 2272.13 1326.85 2251.03 1326.85 2246.81 c
1326.85 2238.37 1326.85 2238.37 1347.95 2238.37 c
1377.49 2242.59 1381.71 2238.37 1377.49 2217.27 c
1373.27 2204.61 1364.83 2204.61 1364.83 2213.05 c
1364.83 2234.15 1339.51 2213.05 1335.29 2191.95 c
1331.07 2166.63 1339.51 2166.63 1356.39 2179.29 c
1369.05 2191.95 1377.49 2191.95 1381.71 2175.07 c
1381.71 2162.4 1385.93 2158.18 1394.37 2158.18 c
1402.81 2158.18 1402.81 2162.4 1398.59 2187.73 c
1204.46 221.035 m
1204.46 225.254 1204.46 237.914 1208.68 254.797 c
1212.89 267.457 1217.12 292.781 1217.12 305.441 c
1225.56 330.766 1229.78 334.984 1242.44 318.102 c
1255.1 301.223 1242.44 233.695 1221.34 221.035 c
1212.89 216.813 1208.68 216.813 1204.46 221.035 c
1111.61 284.34 m
1098.95 288.559 1098.95 288.559 1111.61 305.441 c
1120.05 318.102 l
1120.05 280.121 l
1115.83 280.121 1111.61 284.34 v
1719.34 246.355 m
1702.46 254.797 1681.36 339.203 1698.24 347.645 c
1715.12 364.527 1736.22 334.984 1748.88 288.559 c
1753.11 250.578 1744.66 229.477 1719.34 246.355 c
925.91 364.527 m
917.469 368.746 917.469 368.746 930.133 385.629 c
938.574 389.848 947.012 398.289 947.012 394.07 c
938.574 356.086 l
934.352 356.086 930.133 360.305 925.91 364.527 c
1331.07 440.492 m
1094.73 465.816 883.707 592.426 752.875 786.563 c
588.281 1035.57 571.402 1356.31 710.672 1617.98 c
790.859 1765.69 909.031 1879.64 1060.96 1955.61 c
1284.64 2069.55 1546.3 2069.55 1769.98 1959.82 c
1934.58 1879.64 2056.97 1757.25 2137.16 1592.65 c
2251.11 1368.97 2251.11 1103.09 2137.16 879.41 c
2094.95 795.004 2052.75 735.918 1985.22 668.395 c
1854.39 537.563 1689.8 457.375 1504.1 440.492 c
1457.68 432.051 1373.27 432.051 1331.07 440.492 c
1554.75 461.594 m
1905.04 524.902 2162.48 803.445 2200.46 1157.96 c
2221.57 1322.55 2179.36 1499.8 2094.95 1643.3 c
2031.65 1744.59 1930.36 1845.88 1829.07 1909.18 c
1554.75 2078 1208.68 2061.11 951.234 1866.98 c
727.555 1702.38 609.383 1428.06 638.926 1157.96 c
664.25 900.512 816.184 672.613 1039.86 550.223 c
1115.83 503.801 1221.34 470.035 1301.52 461.594 c
1322.63 457.375 1343.73 453.156 1347.95 453.156 c
1364.83 448.934 1520.98 453.156 1554.75 461.594 c
2369.28 1647.52 m
2348.18 1660.18 2339.73 1668.62 2335.52 1681.28 c
2335.52 1685.5 2335.52 1685.5 2348.18 1681.28 c
2356.62 1681.28 2369.28 1672.84 2381.94 1664.4 c
2398.82 1651.74 2398.82 1647.52 2394.6 1643.3 c
2390.38 1634.86 2390.38 1634.86 2369.28 1647.52 c
486.992 1672.84 m
478.551 1681.28 474.332 1685.5 478.551 1689.72 c
482.773 1702.38 491.215 1698.16 495.434 1681.28 c
499.652 1664.4 495.434 1664.4 486.992 1672.84 c
896.367 1976.71 m
896.367 1980.93 900.59 1989.37 909.031 1993.59 c
925.91 2010.47 l
925.91 2014.69 917.469 2023.13 913.25 2031.57 c
904.809 2048.45 904.809 2048.45 913.25 2065.34 c
921.691 2078 917.469 2086.44 904.809 2082.21 c
892.148 2078 887.93 2069.55 887.93 2048.45 c
887.93 2040.01 883.707 2035.79 y
879.488 2031.57 879.488 2035.79 879.488 2044.23 c
883.707 2056.89 879.488 2061.11 862.605 2078 c
841.504 2099.1 837.285 2099.1 824.621 2099.1 c
811.961 2094.88 807.742 2099.1 y
807.742 2107.54 816.184 2128.64 824.621 2145.52 c
841.504 2166.63 854.164 2166.63 875.266 2153.96 c
887.93 2145.52 896.367 2137.08 900.59 2132.86 c
904.809 2124.42 921.691 2099.1 938.574 2069.55 c
955.453 2044.23 968.113 2023.13 968.113 2018.91 c
972.336 2014.69 942.793 1985.15 930.133 1980.93 c
913.25 1972.49 896.367 1968.27 896.367 1976.71 c
879.488 2103.32 m
879.488 2107.54 875.266 2111.76 866.828 2115.98 c
854.164 2120.2 849.945 2115.98 854.164 2103.32 c
854.164 2094.88 858.387 2090.66 866.828 2094.88 c
875.266 2094.88 879.488 2099.1 879.488 2103.32 c
862.605 1980.93 m
854.164 1985.15 837.285 1997.81 824.621 2006.25 c
807.742 2027.35 807.742 2031.57 803.52 2056.89 c
803.52 2082.21 l
803.52 2086.44 807.742 2082.21 807.742 2073.78 c
807.742 2069.55 807.742 2065.34 816.184 2061.11 c
820.402 2056.89 824.621 2052.68 824.621 2044.23 c
824.621 2040.01 828.844 2031.57 833.063 2027.35 c
837.285 2027.35 841.504 2018.91 841.504 2014.69 c
841.504 2010.47 841.504 2002.03 845.723 2002.03 c
854.164 1993.59 866.828 1997.81 871.047 2010.47 c
871.047 2014.69 875.266 2018.91 y
879.488 2023.13 883.707 2018.91 879.488 2006.25 c
879.488 2002.03 875.266 1989.37 875.266 1985.15 c
875.266 1976.71 l
866.828 1976.71 862.605 1980.93 v
892.148 2010.47 m
896.367 2023.13 904.809 2027.35 900.59 2014.69 c
900.59 2010.47 896.367 2006.25 y
892.148 2006.25 892.148 2006.25 892.148 2010.47 c
849.945 2018.91 m
849.945 2023.13 849.945 2023.13 854.164 2023.13 c
858.387 2023.13 858.387 2018.91 v
854.164 2014.69 l
849.945 2014.69 849.945 2018.91 y
858.387 2044.23 m
854.164 2052.68 858.387 2061.11 866.828 2056.89 c
871.047 2052.68 871.047 2035.79 862.605 2035.79 c
858.387 2040.01 858.387 2044.23 v
1445.02 2225.71 m
1445.02 2229.93 1449.24 2234.15 1453.46 2242.59 c
1466.12 2255.25 l
1461.9 2242.59 l
1461.9 2234.15 1457.68 2229.93 1453.46 2225.71 c
h
1457.68 2272.13 m
1457.68 2276.36 1457.68 2280.57 1461.9 2284.79 c
1466.12 2293.23 1466.12 2293.23 1466.12 2280.57 c
1470.34 2263.69 1461.9 2259.47 1457.68 2272.13 c
1246.66 546.004 m
1225.56 583.984 1200.23 630.41 1187.57 651.512 c
1174.91 672.613 1166.47 689.496 1166.47 693.715 c
1166.47 697.938 1183.36 744.359 1200.23 799.227 c
1221.34 854.09 1238.22 900.512 1234 900.512 c
1153.81 887.852 1060.96 866.75 v
887.93 832.988 l
795.078 904.734 l
744.434 938.496 698.012 972.262 698.012 976.48 c
689.57 980.699 698.012 997.582 752.875 1086.21 c
786.641 1141.07 820.402 1187.5 824.621 1191.72 c
828.844 1191.72 875.266 1200.16 925.91 1212.82 c
976.555 1221.26 1022.98 1229.7 1027.2 1229.7 c
1031.42 1233.92 1014.54 1259.25 917.469 1368.97 c
816.184 1487.14 803.52 1504.03 803.52 1512.47 c
803.52 1520.91 811.961 1575.77 816.184 1634.86 c
824.621 1693.94 833.063 1744.59 y
833.063 1748.81 1077.84 1736.15 1082.07 1736.15 c
1187.57 1609.54 1221.34 1571.55 y
1246.66 1647.52 1280.42 1740.37 v
1318.41 1858.54 1339.51 1909.18 1343.73 1913.4 c
1347.95 1913.4 1398.59 1934.5 1457.68 1959.82 c
1563.19 2006.25 l
1622.27 1900.74 l
1651.82 1841.66 1677.14 1791.01 1681.36 1791.01 c
1681.36 1786.79 1664.48 1740.37 1643.38 1681.28 c
1622.27 1626.42 1609.61 1579.99 y
1685.58 1592.65 1782.64 1613.76 v
1875.5 1630.64 1955.68 1643.3 1959.9 1643.3 c
1964.12 1643.3 2006.32 1609.54 2061.19 1571.55 c
2141.38 1512.47 2154.04 1499.8 2154.04 1495.59 c
2149.82 1487.14 2027.43 1293.01 y
1981 1280.35 1926.14 1271.91 v
1871.27 1259.25 1820.63 1250.8 1816.41 1250.8 c
1812.19 1246.58 1829.07 1225.48 1921.92 1115.75 c
2018.99 1006.02 2040.09 980.699 2040.09 968.039 c
2040.09 955.379 2014.77 735.918 2010.55 735.918 c
1955.68 735.918 1888.16 740.141 v
1803.75 740.141 1765.77 744.359 1761.54 748.582 c
1757.32 748.582 1727.78 786.563 1689.8 828.766 c
1622.27 908.953 l
1567.41 740.141 l
1508.32 575.547 l
1483 562.883 l
1470.34 558.664 1419.7 537.563 1369.05 516.461 c
1284.64 478.477 l
h
1466.12 934.277 m
1483 942.719 1491.44 955.379 1491.44 976.48 c
1491.44 984.922 1483 993.363 1474.56 1001.8 c
1461.9 1014.46 1457.68 1018.68 1440.8 1014.46 c
1415.47 1010.24 1402.81 997.582 1402.81 972.262 c
1402.81 955.379 1402.81 951.156 1415.47 938.496 c
1432.36 925.836 1449.24 925.836 1466.12 934.277 c
1238.22 1052.45 m
1255.1 1073.55 1255.1 1098.87 1238.22 1115.75 c
1200.23 1149.52 1145.37 1107.31 1166.47 1065.11 c
1179.13 1035.57 1217.12 1031.34 1238.22 1052.45 c
1445.02 1115.75 m
1478.78 1132.63 1512.54 1141.07 y
1516.76 1136.86 1520.98 1128.41 v
1529.43 1119.97 1529.43 1111.53 1533.64 1111.53 c
1533.64 1115.75 1537.86 1149.52 1542.09 1191.72 c
1550.53 1267.69 l
1571.63 1267.69 l
1584.29 1263.46 1596.95 1267.69 y
1554.75 1301.45 1466.12 1364.75 v
1461.9 1364.75 1470.34 1373.2 1474.56 1385.86 c
1483 1398.52 1483 1406.96 1478.78 1402.74 c
1445.02 1385.86 1407.04 1373.2 v
1369.05 1356.31 1335.29 1339.43 y
1331.07 1339.43 1326.85 1347.87 1322.63 1360.54 c
1309.96 1381.64 1309.96 1377.41 1301.52 1293.01 c
1293.08 1204.38 1293.08 1208.6 1271.98 1212.82 c
1263.54 1212.82 1255.1 1217.04 1255.1 1212.82 c
1280.42 1191.72 1318.41 1162.18 v
1352.17 1136.86 1381.71 1115.75 1381.71 1111.53 c
1377.49 1103.09 1369.05 1094.65 v
1360.61 1077.77 l
1373.27 1081.99 l
1377.49 1086.21 1411.25 1098.87 1445.02 1115.75 c
1694.02 1094.65 m
1719.34 1115.75 1715.12 1153.73 1685.58 1166.4 c
1664.48 1174.84 1647.59 1170.62 1634.93 1157.96 c
1596.95 1119.97 1651.82 1060.89 1694.02 1094.65 c
1204.46 1314.11 m
1225.56 1330.99 1229.78 1360.54 1208.68 1381.64 c
1196.02 1394.3 1166.47 1394.3 1153.81 1385.86 c
1132.71 1373.2 1128.49 1335.21 1145.37 1318.33 c
1166.47 1301.45 1187.57 1301.45 1204.46 1314.11 c
1672.92 1368.97 m
1706.68 1406.96 1656.04 1461.82 1613.83 1428.06 c
1596.95 1415.4 1592.73 1398.52 1601.17 1377.41 c
1613.83 1347.87 1651.82 1343.65 1672.92 1368.97 c
1423.91 1470.26 m
1440.8 1482.93 1440.8 1504.03 1428.14 1520.91 c
1402.81 1558.89 1352.17 1542.01 1352.17 1499.8 c
1352.17 1491.36 1352.17 1482.93 1356.39 1474.48 c
1364.83 1453.38 1407.04 1449.16 1423.91 1470.26 c
1385.93 1166.4 m
1377.49 1170.62 1360.61 1183.28 1356.39 1191.72 c
1347.95 1204.38 1343.73 1212.82 1343.73 1233.92 c
1339.51 1259.25 1343.73 1267.69 1352.17 1280.35 c
1377.49 1326.77 1445.02 1330.99 1478.78 1293.01 c
1512.54 1250.8 1499.88 1195.94 1453.46 1170.62 c
1428.14 1157.96 1407.04 1157.96 1385.93 1166.4 c
f
Q

endstream
endobj
pagesave restore
%%PageTrailer
%%Trailer
end
%%EOF
